ANSI-C/cC++ Compiler for HC08 V-5.0.32 Build 9279, Oct  7 2009

    1:  /**
    2:    ******************************************************************************
    3:    * proj    firmware startup project - mc9s08dz60
    4:    * file    mcu.c
    5:    * ver     1.0
    6:    * brief   This is a template file for all C files.
    7:    ------------------------------------------------------------------------------
    8:    * 2012.02 created by taoyu@bakai.com
    9:    */ 
   10:  
   11:  /* File Id -------------------------------------------------------------------*/
   12:  #define _MCU_C_ 0x62
   13:  #define FILE_No _MCU_C_
   14:  
   15:  /* Includes ------------------------------------------------------------------*/
   16:  #include  "mcu.h"  /* mandotary */
   17:  #include  <hidef.h> /* for EnableInterrupts macro */
   18:  #include  "derivative.h" /* include peripheral declarations */
   19:  #include  "log.h"
   20:  
   21:  /* Private Macros & Defines --------------------------------------------------*/
   22:  
   23:  #ifndef DEBUG_MCU_LED
   24:  #define DEBUG_MCU_LED   0
   25:  #endif
   26:  
   27:  #ifndef DEBUG_MCU_CLOCK
   28:  #define DEBUG_MCU_CLOCK 0 /* 3 leds : 1/2/4/8 */
   29:  #endif
   30:  
   31:  #ifndef DEBUG_MCU_TICK
   32:  #define DEBUG_MCU_TICK  0 /* 3 leds : 5/A */
   33:  #endif
   34:  
   35:  #ifndef DEBUG_MCU_UART
   36:  #define DEBUG_MCU_UART  0
   37:  #endif
   38:  
   39:  #ifndef DEBUG_MCU_IIC
   40:  #define DEBUG_MCU_IIC   0
   41:  #endif
   42:  
   43:  #ifndef DEBUG_MCU_SPI
   44:  #define DEBUG_MCU_SPI   0
   45:  #endif
   46:  
   47:  #ifndef DEBUG_MCU_ADC
   48:  #define DEBUG_MCU_ADC   0
   49:  #endif
   50:  
   51:  #if DEBUG_MCU_IIC
   52:  #define IIC_PRINTF  PRINTF
   53:  #else
   54:  #define IIC_PRINTF  empty_printf
   55:  #endif
   56:  
   57:  #if DEBUG_MCU_SPI
   58:  #define SPI_PRINTF  PRINTF
   59:  #else
   60:  #define SPI_PRINTF  empty_printf
   61:  #endif
   62:  
   63:  #if DEBUG_MCU_ADC
   64:  #define ADC_PRINTF  PRINTF
   65:  #else
   66:  #define ADC_PRINTF  empty_printf
   67:  #endif
   68:  
   69:  #define PIN_0 0x01
   70:  #define PIN_1 0x02
   71:  #define PIN_2 0x04
   72:  #define PIN_3 0x08
   73:  #define PIN_4 0x10
   74:  #define PIN_5 0x20
   75:  #define PIN_6 0x40
   76:  #define PIN_7 0x80
   77:  
   78:  #define HIGH  1
   79:  #define LOW   0
   80:  
   81:  #define SPID_DUMMY 0xCD
   82:  
   83:  /* Private typedefs ----------------------------------------------------------*/
   84:  
   85:  typedef struct
   86:  {
   87:    unsigned char * pD;
   88:    unsigned char Pin;
   89:    unsigned int  Data:1;
   90:    unsigned char * pDD;
   91:  }
   92:  pin_cfg_t;
   93:  
   94:  typedef void (*FUNC)(void);
   95:  
   96:  /* Private consts ------------------------------------------------------------*/
   97:  
   98:  const pin_cfg_t pin_cfg[PN_MAX] = 
   99:  {
  100:   { &PTDD, PIN_2, HIGH, &PTDDD },  //  blue led, D2
  101:   { &PTDD, PIN_3, HIGH, &PTDDD },  //  green led, D3
  102:   { &PTDD, PIN_4, HIGH, &PTDDD },  //  red led, D4
  103:   { &PTED, PIN_2, HIGH, &PTEDD },  //  spi ss, E2
  104:   { &PTGD, PIN_2, HIGH, &PTGDD },  //  ltc680x ena, G2
  105:   { &PTGD, PIN_4, HIGH, &PTGDD },  //  eeprom wp, G4
  106:   { &PTGD, PIN_5, HIGH, &PTGDD },  //  can stb, G5
  107:   { &PTDD, PIN_0, LOW , &PTDDD },  //  fan ena, D0
  108:   { &PTDD, PIN_1, LOW , &PTDDD },  //  heat ena, D1
  109:   // ENA-A, NCS-A
  110:   { &PTFD, PIN_0, HIGH, &PTFDD },  //  ENA-A F0
  111:   { &PTED, PIN_2, HIGH, &PTEDD },  //  NCS-A E2
  112:   // ENA-B, NCS-B
  113:   { &PTFD, PIN_1, HIGH, &PTFDD },  //  ENA-B F1
  114:   { &PTGD, PIN_2, HIGH, &PTGDD },  //  NCS-B G2
  115:  };
  116:  
  117:  const char illegal_instructions[] = { 0x8D, 0xAC };
  118:  const FUNC reset_func = (FUNC)(void*)&illegal_instructions;
  119:  
  120:  /* Private variables ---------------------------------------------------------*/
  121:  
  122:  unsigned char lvw_dis = 200;  //  0~255
  123:  
  124:  //mscan_rxframe_t mscan_rxframe  @ 0x000018A0;
  125:  mscan_txframe_t mscan_txframe  @ 0x000018B0;
  126:  
  127:  /* Private function prototypes -----------------------------------------------*/
  128:  
  129:  static void init_write_once(void);
  130:  static void init_xtal(void);
  131:  static void init_watchdog(void);
  132:  static void init_tick(void);
  133:  static void init_pins(void);
  134:  
  135:  /* Global consts -------------------------------------------------------------*/
  136:  
  137:  /* Global variables ----------------------------------------------------------*/
  138:  
  139:  unsigned long tick;
  140:  unsigned long dec_tick;
  141:  unsigned long rtc_sec;
  142:  
  143:  /* Functions -----------------------------------------------------------------*/
  144:  
  145:  void  empty_printf(char* fmt, ...)
  146:  {

Function: empty_printf
Source  : C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\06 Platform\mcu.c
Options : -AddIncl../preinc.h -Cs08 -D__NO_FLOAT__ -Env"GENPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\src;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\lib;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\src;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\06 Platform;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\04 Modules;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\Sources;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\07 Application;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\05 Devices;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"LIBPATH=D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"OBJPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin" -Env"TEXTPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin" -Lasm=%n.lst -Ms -ObjN="C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\mc9s08dz60_Data\Standard\ObjectCode\mcu.c.o" -WmsgSd1106

  147:    (void)fmt;
  148:  }
  0000 81       [6]             RTS   
  149:  
  150:  interrupt void fault_isr(void){

Function: fault_isr
Source  : C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\06 Platform\mcu.c
Options : -AddIncl../preinc.h -Cs08 -D__NO_FLOAT__ -Env"GENPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\src;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\lib;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\src;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\06 Platform;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\04 Modules;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\Sources;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\07 Application;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\05 Devices;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"LIBPATH=D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"OBJPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin" -Env"TEXTPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin" -Lasm=%n.lst -Ms -ObjN="C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\mc9s08dz60_Data\Standard\ObjectCode\mcu.c.o" -WmsgSd1106

  0000 8b       [2]             PSHH  
  151:    LED_ISR_FAULT = LED_ON;
  0001 1b00     [5]             BCLR  5,_PTDD
  152:    PRINTF("fault isr\r\n");
  0003 450000   [3]             LDHX  @"fault isr\015\012"
  0006 89       [2]             PSHX  
  0007 8b       [2]             PSHH  
  0008 cd0000   [6]             JSR   printf
  000b a702     [2]             AIS   #2
  153:  }
  000d 8a       [3]             PULH  
  000e 80       [9]             RTI   
  154:  
  155:  /**
  156:    * bref    template function
  157:    * param   none
  158:    * retval  none
  159:    */
  160:  
  161:  static void init_write_once(void)
  162:  {

Function: init_write_once
Source  : C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\06 Platform\mcu.c
Options : -AddIncl../preinc.h -Cs08 -D__NO_FLOAT__ -Env"GENPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\src;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\lib;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\src;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\06 Platform;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\04 Modules;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\Sources;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\07 Application;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\05 Devices;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"LIBPATH=D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"OBJPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin" -Env"TEXTPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin" -Lasm=%n.lst -Ms -ObjN="C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\mc9s08dz60_Data\Standard\ObjectCode\mcu.c.o" -WmsgSd1106

  163:    /* Common initialization of the write once registers */
  164:    /* SOPT1: COPT=3,STOPE=0,SCI2PS=0,IICPS=0 */
  165:    SOPT1 = 0xC0;                                      
  0000 a6c0     [2]             LDA   #-64
  0002 c70000   [4]             STA   _SOPT1
  166:    /* SOPT2: COPCLKS=0,COPW=0,ADHTS=0,MCSEL=0 */
  167:    SOPT2 = 0x00;                                      
  0005 4f       [1]             CLRA  
  0006 c70000   [4]             STA   _SOPT2
  168:    /* SPMSC1: LVWF=0,LVWACK=0,LVWIE=1,LVDRE=0,LVDSE=1,LVDE=1,BGBE=0 */
  169:    SPMSC1 = 0x2C;                                      
  0009 a62c     [2]             LDA   #44
  000b c70000   [4]             STA   _SPMSC1
  170:    /* SPMSC2: LVDV=1,LVWV=1,PPDF=0,PPDACK=0,PPDC=0 */
  171:    SPMSC2 = 0x30;                                      
  000e a630     [2]             LDA   #48
  0010 c70000   [4]             STA   _SPMSC2
  172:    /*  result
  173:     *    - watch dog time out : 1024ms
  174:     *    - lvd disabled, lvw enabled
  175:     */
  176:  }
  0013 81       [6]             RTS   
  177:  
  178:  interrupt void lvw_isr(void)
  179:  {

Function: lvw_isr
Source  : C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\06 Platform\mcu.c
Options : -AddIncl../preinc.h -Cs08 -D__NO_FLOAT__ -Env"GENPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\src;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\lib;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\src;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\06 Platform;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\04 Modules;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\Sources;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\07 Application;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\05 Devices;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"LIBPATH=D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"OBJPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin" -Env"TEXTPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin" -Lasm=%n.lst -Ms -ObjN="C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\mc9s08dz60_Data\Standard\ObjectCode\mcu.c.o" -WmsgSd1106

  0000 8b       [2]             PSHH  
  180:    //  clear flag
  181:    SPMSC1_LVWACK = 1;
  0001 450000   [3]             LDHX  @_SPMSC1
  0004 f6       [3]             LDA   ,X
  0005 aa40     [2]             ORA   #64
  0007 f7       [2]             STA   ,X
  182:    //  disabled
  183:    if( lvw_dis ){
  0008 c60000   [4]             LDA   lvw_dis
  000b 270f     [3]             BEQ   L1C ;abs = 001c
  184:      DBG_PRINTF("lvw_dis %d\r\n", lvw_dis);
  000d 87       [2]             PSHA  
  000e 4f       [1]             CLRA  
  000f 87       [2]             PSHA  
  0010 450000   [3]             LDHX  @"lvw_dis %d\015\012"
  0013 89       [2]             PSHX  
  0014 8b       [2]             PSHH  
  0015 cd0000   [6]             JSR   printf
  0018 a704     [2]             AIS   #4
  185:      return;
  186:    }
  187:    //  all led off
  188:    LED_RED = LED_OFF;
  189:    LED_GREEN = LED_OFF;
  190:    LED_BLUE = LED_OFF;
  191:    //  all devices off
  192:    (void)pin_high(PN_LTC680X_ENA_N);
  193:    (void)pin_high(PN_CAN_STB);
  194:    (void)pin_low(PN_FAN_ENA);
  195:    (void)pin_low(PN_HEAT_ENA);
  196:    //  log exit
  197:    feed_watch_dog();
  198:  //  (void)log_exit();
  199:    LED_RED = LED_ON;
  200:    DBG_PRINTF("lvw %u\r\n", tick);
  201:    for(;;);
  202:  }
  001a 8a       [3]             PULH  
  001b 80       [9]             RTI   
  001c          L1C:    
  001c 1800     [5]             BSET  4,_PTDD
  001e 1600     [5]             BSET  3,_PTDD
  0020 1400     [5]             BSET  2,_PTDD
  0022 ae04     [2]             LDX   #4
  0024 8c       [1]             CLRH  
  0025 cd0000   [6]             JSR   pin_high
  0028 ae06     [2]             LDX   #6
  002a 8c       [1]             CLRH  
  002b cd0000   [6]             JSR   pin_high
  002e ae07     [2]             LDX   #7
  0030 8c       [1]             CLRH  
  0031 cd0000   [6]             JSR   pin_low
  0034 ae08     [2]             LDX   #8
  0036 8c       [1]             CLRH  
  0037 cd0000   [6]             JSR   pin_low
  003a cd0000   [6]             JSR   feed_watch_dog
  003d 1900     [5]             BCLR  4,_PTDD
  003f 320002   [5]             LDHX  tick:2
  0042 89       [2]             PSHX  
  0043 8b       [2]             PSHH  
  0044 320000   [5]             LDHX  tick
  0047 89       [2]             PSHX  
  0048 8b       [2]             PSHH  
  0049 450000   [3]             LDHX  @"lvw %u\015\012"
  004c 89       [2]             PSHX  
  004d 8b       [2]             PSHH  
  004e cd0000   [6]             JSR   printf
  0051 a706     [2]             AIS   #6
  0053          L53:    
  0053 20fe     [3]             BRA   L53 ;abs = 0053
  203:  
  204:  static void init_xtal(void)
  205:  {

Function: init_xtal
Source  : C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\06 Platform\mcu.c
Options : -AddIncl../preinc.h -Cs08 -D__NO_FLOAT__ -Env"GENPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\src;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\lib;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\src;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\06 Platform;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\04 Modules;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\Sources;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\07 Application;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\05 Devices;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"LIBPATH=D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"OBJPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin" -Env"TEXTPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin" -Lasm=%n.lst -Ms -ObjN="C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\mc9s08dz60_Data\Standard\ObjectCode\mcu.c.o" -WmsgSd1106

  206:  
  207:    /* ### lit led before init xtal */
  208:    /* PTDD: PTDD4=1,PTDD3=1,PTDD2=1 */
  209:    PTDD &= (unsigned char)~0x1C;
  0000 b600     [3]             LDA   _PTDD
  0002 a4e3     [2]             AND   #-29
  0004 b700     [3]             STA   _PTDD
  210:    /* PTDPE: PTDPE4=0,PTDPE3=0,PTDPE2=0 */
  211:    PTDPE &= (unsigned char)~0x1C;                     
  0006 450000   [3]             LDHX  @_PTDPE
  0009 f6       [3]             LDA   ,X
  000a a4e3     [2]             AND   #-29
  000c f7       [2]             STA   ,X
  212:    /* PTDDD: PTDDD4=1,PTDDD3=1,PTDDD2=1 */
  213:    PTDDD |= (unsigned char)0x1C;
  000d b600     [3]             LDA   _PTDDD
  000f aa1c     [2]             ORA   #28
  0011 b700     [3]             STA   _PTDDD
  214:  
  215:  #if DEBUG_MCU_LED
  216:    for(;;){    
  217:  
  218:      LED_RED = LED_ON;
  219:      LED_RED = LED_OFF;
  220:  
  221:      LED_GREEN = LED_ON;
  222:      LED_GREEN = LED_OFF;
  223:  
  224:      LED_BLUE = LED_ON;
  225:      LED_BLUE = LED_OFF;
  226:  
  227:    }
  228:  #endif
  229:  
  230:    /*  System clock initialization */
  231:    if (*(unsigned char*far)0xFFAF != 0xFF) { /* Test if the device trim value is stored on the specified address */
  0013 c6ffaf   [4]             LDA   65455
  0016 41ff0a   [4]             CBEQA #-1,L23 ;abs = 0023
  232:      MCGTRM = *(unsigned char*far)0xFFAF; /* Initialize MCGTRM register from a non volatile memory */
  0019 c6ffaf   [4]             LDA   65455
  001c b700     [3]             STA   _MCGTRM
  233:      MCGSC = *(unsigned char*far)0xFFAE; /* Initialize MCGSC register from a non volatile memory */
  001e c6ffae   [4]             LDA   65454
  0021 b700     [3]             STA   _MCGSC
  0023          L23:    
  234:    }
  235:    /* MCGC2: BDIV=0,RANGE=1,HGO=1,LP=0,EREFS=1,ERCLKEN=1,EREFSTEN=0 */
  236:    MCGC2 = 0x36;                        /* Set MCGC2 register */
  0023 6e3600   [4]             MOV   #54,_MCGC2
  237:    /* MCGC1: CLKS=2,RDIV=7,IREFS=0,IRCLKEN=0,IREFSTEN=0 */
  238:    MCGC1 = 0xB8;                        /* Set MCGC1 register */
  0026 6eb800   [4]             MOV   #-72,_MCGC1
  239:    while(!MCGSC_OSCINIT) {              /* Wait until external reference is stable */
  0029 65       [3]             SKIP2 L2C ;abs = 002c
  002a          L2A:    
  002a ad3d     [5]             BSR   L69 ;abs = 0069
  002c          L2C:    
  002c 020004   [5]             BRSET 1,_MCGSC,L33 ;abs = 0033
  002f 20f9     [3]             BRA   L2A ;abs = 002a
  0031          L31:    
  0031 ad36     [5]             BSR   L69 ;abs = 0069
  0033          L33:    
  240:     SRS = 0x55;                         /* Reset watchdog counter write 55, AA */
  241:     SRS = 0xAA;
  242:    }
  243:    while(MCGSC_IREFST) {                /* Wait until external reference is selected */
  0033 090004   [5]             BRCLR 4,_MCGSC,L3A ;abs = 003a
  0036 20f9     [3]             BRA   L31 ;abs = 0031
  0038          L38:    
  0038 ad2f     [5]             BSR   L69 ;abs = 0069
  003a          L3A:    
  244:     SRS = 0x55;                         /* Reset watchdog counter write 55, AA */
  245:     SRS = 0xAA;
  246:    }
  247:    while((MCGSC & 0x0C) != 0x08) {      /* Wait until external clock is selected as a bus clock reference */
  003a b600     [3]             LDA   _MCGSC
  003c a40c     [2]             AND   #12
  003e a108     [2]             CMP   #8
  0040 26f6     [3]             BNE   L38 ;abs = 0038
  248:     SRS = 0x55;                         /* Reset watchdog counter write 55, AA */
  249:     SRS = 0xAA;
  250:    }
  251:    /* MCGC2: BDIV=0,RANGE=1,HGO=1,LP=1,EREFS=1,ERCLKEN=1,EREFSTEN=0 */
  252:    MCGC2 = 0x3E;                        /* Set MCGC2 register */
  0042 6e3e00   [4]             MOV   #62,_MCGC2
  253:    /* MCGC1: CLKS=2,RDIV=2,IREFS=0,IRCLKEN=0,IREFSTEN=0 */
  254:    MCGC1 = 0x90;                        /* Set MCGC1 register */
  0045 6e9000   [4]             MOV   #-112,_MCGC1
  255:    /* MCGC3: LOLIE=0,PLLS=1,CME=0,VDIV=4 */
  256:    MCGC3 = 0x44;                        /* Set MCGC3 register */
  0048 6e4400   [4]             MOV   #68,_MCGC3
  257:    /* MCGC2: LP=0 */
  258:    MCGC2 &= (unsigned char)~0x08;                     
  004b 1700     [5]             BCLR  3,_MCGC2
  259:    while(!MCGSC_PLLST) {                /* Wait until PLL is selected */
  004d 65       [3]             SKIP2 L50 ;abs = 0050
  004e          L4E:    
  004e ad19     [5]             BSR   L69 ;abs = 0069
  0050          L50:    
  0050 0a0004   [5]             BRSET 5,_MCGSC,L57 ;abs = 0057
  0053 20f9     [3]             BRA   L4E ;abs = 004e
  0055          L55:    
  0055 ad12     [5]             BSR   L69 ;abs = 0069
  0057          L57:    
  260:     SRS = 0x55;                         /* Reset watchdog counter write 55, AA */
  261:     SRS = 0xAA;
  262:    }
  263:    while(!MCGSC_LOCK) {                 /* Wait until PLL is locked */
  0057 0d00fb   [5]             BRCLR 6,_MCGSC,L55 ;abs = 0055
  264:     SRS = 0x55;                         /* Reset watchdog counter write 55, AA */
  265:     SRS = 0xAA;
  266:    }
  267:    /* MCGC1: CLKS=0,RDIV=2,IREFS=0,IRCLKEN=0,IREFSTEN=0 */
  268:    MCGC1 = 0x10;                        /* Set MCGC1 register */
  005a 6e1000   [4]             MOV   #16,_MCGC1
  269:    while((MCGSC & 0x0C) != 0x0C) {      /* Wait until PLL clock is selected as a bus clock reference */
  005d 65       [3]             SKIP2 L60 ;abs = 0060
  005e          L5E:    
  005e ad09     [5]             BSR   L69 ;abs = 0069
  0060          L60:    
  0060 b600     [3]             LDA   _MCGSC
  0062 a40c     [2]             AND   #12
  0064 a10c     [2]             CMP   #12
  0066 26f6     [3]             BNE   L5E ;abs = 005e
  270:     SRS = 0x55;                         /* Reset watchdog counter write 55, AA */
  271:     SRS = 0xAA;
  272:    }
  273:    /*  result:
  274:     *  - xtal      8MHz
  275:     *  - bus       16MHz
  276:     *  - internal  enabled
  277:     */
  278:  
  279:    /* test clock */
  280:  #if DEBUG_MCU_CLOCK
  281:  
  282:    for(;;){
  283:  
  284:      #define TEST_TICKS  65535
  285:      volatile unsigned short tick;
  286:      
  287:      feed_watch_dog();
  288:  
  289:      tick = TEST_TICKS;
  290:      while(--tick>0);
  291:      LED_RED = LED_ON;
  292:      LED_GREEN = LED_OFF;
  293:      LED_BLUE = LED_OFF;
  294:  
  295:      tick = TEST_TICKS;
  296:      while(--tick>0);
  297:      LED_RED = LED_OFF;
  298:      LED_GREEN = LED_ON;
  299:      LED_BLUE = LED_OFF;
  300:  
  301:      tick = TEST_TICKS;
  302:      while(--tick>0);
  303:      LED_RED = LED_OFF;
  304:      LED_GREEN = LED_OFF;
  305:      LED_BLUE = LED_ON;
  306:  
  307:    }
  308:  
  309:  
  310:  #endif
  311:  
  312:  }
  0068 81       [6]             RTS   
  0069          L69:    
  0069 a655     [2]             LDA   #85
  006b 450000   [3]             LDHX  @_SRS
  006e f7       [2]             STA   ,X
  006f 48       [1]             LSLA  
  0070 f7       [2]             STA   ,X
  0071 81       [6]             RTS   
  313:  
  314:  static void init_watchdog(void)
  315:  {

Function: init_watchdog
Source  : C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\06 Platform\mcu.c
Options : -AddIncl../preinc.h -Cs08 -D__NO_FLOAT__ -Env"GENPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\src;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\lib;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\src;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\06 Platform;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\04 Modules;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\Sources;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\07 Application;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\05 Devices;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"LIBPATH=D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"OBJPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin" -Env"TEXTPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin" -Lasm=%n.lst -Ms -ObjN="C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\mc9s08dz60_Data\Standard\ObjectCode\mcu.c.o" -WmsgSd1106

  316:    /* init watch dog (COP) is done in init_write_once() */
  317:    /* ### Init_COP init code */
  318:    SRS = 0x55;                          /* Clear WatchDog counter - first part */
  0000 a655     [2]             LDA   #85
  0002 450000   [3]             LDHX  @_SRS
  0005 f7       [2]             STA   ,X
  319:    SRS = 0xAA;                          /* Clear WatchDog counter - second part */
  0006 48       [1]             LSLA  
  0007 f7       [2]             STA   ,X
  320:  }
  0008 81       [6]             RTS   
  321:  
  322:  interrupt void rtc_isr(void)
  323:  {

Function: rtc_isr
Source  : C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\06 Platform\mcu.c
Options : -AddIncl../preinc.h -Cs08 -D__NO_FLOAT__ -Env"GENPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\src;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\lib;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\src;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\06 Platform;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\04 Modules;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\Sources;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\07 Application;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\05 Devices;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"LIBPATH=D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"OBJPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin" -Env"TEXTPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin" -Lasm=%n.lst -Ms -ObjN="C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\mc9s08dz60_Data\Standard\ObjectCode\mcu.c.o" -WmsgSd1106

  0000 8b       [2]             PSHH  
  324:    /* begin */
  325:    LED_ISR_RTC = LED_ON;
  0001 1b00     [5]             BCLR  5,_PTDD
  326:    /* clear interrupt flag */
  327:    RTCSC_RTIF = 1;
  0003 1e00     [5]             BSET  7,_RTCSC
  328:    /* tick up */
  329:    tick++;
  0005 450000   [3]             LDHX  @tick
  0008 cd0000   [6]             JSR   _LINC
  000b cd0000   [6]             JSR   _POP32
  330:    /* tick down */
  331:    if( dec_tick>0 ) dec_tick--;
  000e 450000   [3]             LDHX  @dec_tick
  0011 e603     [3]             LDA   3,X
  0013 ea02     [3]             ORA   2,X
  0015 ea01     [3]             ORA   1,X
  0017 fa       [3]             ORA   ,X
  0018 2709     [3]             BEQ   L23 ;abs = 0023
  001a 450000   [3]             LDHX  @dec_tick
  001d cd0000   [6]             JSR   _LDEC
  0020 cd0000   [6]             JSR   _POP32
  0023          L23:    
  332:    /* lvw disable */
  333:    if( lvw_dis>0 ) lvw_dis--;
  0023 c60000   [4]             LDA   lvw_dis
  0026 2704     [3]             BEQ   L2C ;abs = 002c
  0028 450000   [3]             LDHX  @lvw_dis
  002b 7a       [4]             DEC   ,X
  002c          L2C:    
  334:    /* rtc sec */
  335:    if( rtc_sec>0 ){
  002c 450000   [3]             LDHX  @rtc_sec
  002f e603     [3]             LDA   3,X
  0031 ea02     [3]             ORA   2,X
  0033 ea01     [3]             ORA   1,X
  0035 fa       [3]             ORA   ,X
  0036 2718     [3]             BEQ   L50 ;abs = 0050
  336:      static unsigned char cnt = 0;
  337:      cnt ++;
  0038 450000   [3]             LDHX  @cnt
  003b 7c       [4]             INC   ,X
  338:      if( cnt==100 ){
  003c c60000   [4]             LDA   cnt
  003f a164     [2]             CMP   #100
  0041 260d     [3]             BNE   L50 ;abs = 0050
  339:        cnt = 0;
  0043 4f       [1]             CLRA  
  0044 c70000   [4]             STA   cnt
  340:        rtc_sec ++;
  0047 450000   [3]             LDHX  @rtc_sec
  004a cd0000   [6]             JSR   _LINC
  004d cd0000   [6]             JSR   _POP32
  0050          L50:    
  341:      }
  342:    }
  343:    /* end */
  344:    LED_ISR_RTC = LED_OFF;
  0050 1a00     [5]             BSET  5,_PTDD
  345:  }
  0052 8a       [3]             PULH  
  0053 80       [9]             RTI   
  346:  
  347:  static void init_tick(void)
  348:  {

Function: init_tick
Source  : C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\06 Platform\mcu.c
Options : -AddIncl../preinc.h -Cs08 -D__NO_FLOAT__ -Env"GENPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\src;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\lib;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\src;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\06 Platform;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\04 Modules;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\Sources;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\07 Application;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\05 Devices;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"LIBPATH=D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"OBJPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin" -Env"TEXTPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin" -Lasm=%n.lst -Ms -ObjN="C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\mc9s08dz60_Data\Standard\ObjectCode\mcu.c.o" -WmsgSd1106

  349:    tick = 0;
  0000 5f       [1]             CLRX  
  0001 8c       [1]             CLRH  
  0002 960002   [5]             STHX  tick:2
  0005 960000   [5]             STHX  tick
  350:    dec_tick = 0;
  0008 960002   [5]             STHX  dec_tick:2
  000b 960000   [5]             STHX  dec_tick
  351:    rtc_sec = 0;
  000e 960002   [5]             STHX  rtc_sec:2
  0011 960000   [5]             STHX  rtc_sec
  352:    /* ### Init_RTC init code */
  353:    /* RTCMOD: RTCMOD=0x4F */
  354:    RTCMOD = 0x4F;                       /* Set modulo register */
  0014 6e4f00   [4]             MOV   #79,_RTCMOD
  355:    /* RTCSC: RTIF=1,RTCLKS=1,RTIE=1,RTCPS=8 */
  356:    RTCSC = 0xB8;                        /* Configure RTC */
  0017 6eb800   [4]             MOV   #-72,_RTCSC
  357:    /*  result
  358:     *    interrupt every 10 ms
  359:     */
  360:  
  361:  #if DEBUG_MCU_TICK
  362:  
  363:    /* enable interrupts */
  364:    EnableInterrupts;
  365:    for(;;){
  366:  
  367:      dec_tick = 50;
  368:      while(dec_tick>0) feed_watch_dog();
  369:      LED_RED = LED_ON;
  370:  
  371:      dec_tick = 50;
  372:      while(dec_tick>0) feed_watch_dog();
  373:      LED_RED = LED_OFF;
  374:  
  375:    }
  376:  #endif
  377:  
  378:  }
  001a 81       [6]             RTS   
  379:  
  380:  static void bit_clr(unsigned char * pReg, unsigned char mask)
  381:  {

Function: bit_clr
Source  : C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\06 Platform\mcu.c
Options : -AddIncl../preinc.h -Cs08 -D__NO_FLOAT__ -Env"GENPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\src;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\lib;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\src;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\06 Platform;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\04 Modules;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\Sources;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\07 Application;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\05 Devices;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"LIBPATH=D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"OBJPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin" -Env"TEXTPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin" -Lasm=%n.lst -Ms -ObjN="C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\mc9s08dz60_Data\Standard\ObjectCode\mcu.c.o" -WmsgSd1106

  0000 87       [2]             PSHA  
  382:    unsigned char tmp;
  383:    tmp = *pReg;
  0001 f6       [3]             LDA   ,X
  384:    tmp &= ~mask;
  0002 87       [2]             PSHA  
  0003 9ee602   [4]             LDA   2,SP
  0006 43       [1]             COMA  
  0007 9ee401   [4]             AND   1,SP
  385:    *pReg = tmp;
  000a f7       [2]             STA   ,X
  386:  }
  000b a702     [2]             AIS   #2
  000d 81       [6]             RTS   
  387:  
  388:  static void bit_set(unsigned char * pReg, unsigned char mask)
  389:  {

Function: bit_set
Source  : C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\06 Platform\mcu.c
Options : -AddIncl../preinc.h -Cs08 -D__NO_FLOAT__ -Env"GENPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\src;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\lib;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\src;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\06 Platform;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\04 Modules;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\Sources;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\07 Application;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\05 Devices;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"LIBPATH=D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"OBJPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin" -Env"TEXTPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin" -Lasm=%n.lst -Ms -ObjN="C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\mc9s08dz60_Data\Standard\ObjectCode\mcu.c.o" -WmsgSd1106

  0000 87       [2]             PSHA  
  390:    unsigned char tmp;
  391:    tmp = *pReg;
  0001 f6       [3]             LDA   ,X
  392:    tmp |= mask;
  0002 9eea01   [4]             ORA   1,SP
  393:    *pReg = tmp;
  0005 f7       [2]             STA   ,X
  394:  }
  0006 8a       [3]             PULH  
  0007 81       [6]             RTS   
  395:  
  396:  static int bit_get(unsigned char * pReg, unsigned char mask)
  397:  {

Function: bit_get
Source  : C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\06 Platform\mcu.c
Options : -AddIncl../preinc.h -Cs08 -D__NO_FLOAT__ -Env"GENPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\src;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\lib;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\src;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\06 Platform;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\04 Modules;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\Sources;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\07 Application;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\05 Devices;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"LIBPATH=D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"OBJPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin" -Env"TEXTPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin" -Lasm=%n.lst -Ms -ObjN="C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\mc9s08dz60_Data\Standard\ObjectCode\mcu.c.o" -WmsgSd1106

  0000 87       [2]             PSHA  
  398:    unsigned char tmp;
  399:    tmp = *pReg;
  0001 f6       [3]             LDA   ,X
  400:    if( tmp&mask ) return 1;
  0002 95       [2]             TSX   
  0003 f4       [3]             AND   ,X
  0004 2705     [3]             BEQ   LB ;abs = 000b
  0006 ae01     [2]             LDX   #1
  0008 8c       [1]             CLRH  
  401:    return 0;
  402:  }
  0009 86       [3]             PULA  
  000a 81       [6]             RTS   
  000b          LB:     
  000b 87       [2]             PSHA  
  000c 8a       [3]             PULH  
  000d 97       [1]             TAX   
  000e 86       [3]             PULA  
  000f 81       [6]             RTS   
  403:  
  404:  static void init_pins(void)
  405:  {

Function: init_pins
Source  : C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\06 Platform\mcu.c
Options : -AddIncl../preinc.h -Cs08 -D__NO_FLOAT__ -Env"GENPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\src;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\lib;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\src;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\06 Platform;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\04 Modules;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\Sources;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\07 Application;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\05 Devices;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"LIBPATH=D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"OBJPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin" -Env"TEXTPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin" -Lasm=%n.lst -Ms -ObjN="C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\mc9s08dz60_Data\Standard\ObjectCode\mcu.c.o" -WmsgSd1106

  0000 a7fb     [2]             AIS   #-5
  406:    int i;
  407:    
  408:    /* io pins all default are input */
  409:    PTADD = 0x00;
  0002 3f00     [5]             CLR   _PTADD
  410:    PTBDD = 0x00;
  0004 3f00     [5]             CLR   _PTBDD
  411:    PTCDD = 0x00;
  0006 3f00     [5]             CLR   _PTCDD
  412:    PTDDD = 0x00;
  0008 3f00     [5]             CLR   _PTDDD
  413:    PTEDD = 0x00;
  000a 3f00     [5]             CLR   _PTEDD
  414:    PTFDD = 0x00;
  000c 3f00     [5]             CLR   _PTFDD
  415:    PTGDD = 0x00;
  000e 3f00     [5]             CLR   _PTGDD
  416:  
  417:    /* io pins pull up, default on, to make io pins at stable status */
  418:    PTAPE = 0xFF;
  0010 a6ff     [2]             LDA   #-1
  0012 c70000   [4]             STA   _PTAPE
  419:    PTBPE = 0xFF;
  0015 c70000   [4]             STA   _PTBPE
  420:    PTCPE = 0xFF;
  0018 c70000   [4]             STA   _PTCPE
  421:    PTDPE = 0xFF;
  001b c70000   [4]             STA   _PTDPE
  422:    PTEPE = 0xFF;
  001e c70000   [4]             STA   _PTEPE
  423:    PTFPE = 0xFF;
  0021 c70000   [4]             STA   _PTFPE
  424:    PTGPE = 0xFF;
  0024 c70000   [4]             STA   _PTGPE
  425:    
  426:    /* io pins slew rate, default off */
  427:    PTASE = 0x00;                                      
  0027 4f       [1]             CLRA  
  0028 c70000   [4]             STA   _PTASE
  428:    PTBSE = 0x00;                                      
  002b c70000   [4]             STA   _PTBSE
  429:    PTCSE = 0x00;                                      
  002e c70000   [4]             STA   _PTCSE
  430:    PTDSE = 0x00;                                      
  0031 c70000   [4]             STA   _PTDSE
  431:    PTESE = 0x00;
  0034 c70000   [4]             STA   _PTESE
  432:    PTFSE = 0x00;                                      
  0037 c70000   [4]             STA   _PTFSE
  433:    PTGSE = 0x00;
  003a c70000   [4]             STA   _PTGSE
  434:  
  435:    /* io pins drive strength, default off */
  436:    PTADS = 0x00;                                      
  003d c70000   [4]             STA   _PTADS
  437:    PTBDS = 0x00;                                      
  0040 c70000   [4]             STA   _PTBDS
  438:    PTCDS = 0x00;                                      
  0043 c70000   [4]             STA   _PTCDS
  439:    PTDDS = 0x00;                                      
  0046 c70000   [4]             STA   _PTDDS
  440:    PTEDS = 0x00;                                      
  0049 c70000   [4]             STA   _PTEDS
  441:    PTFDS = 0x00;                                      
  004c c70000   [4]             STA   _PTFDS
  442:    PTGDS = 0x00;
  004f c70000   [4]             STA   _PTGDS
  443:    
  444:    /* detailed setting for each output io pin in use */
  445:    for(i=0;i<PN_MAX;i++){
  0052 95       [2]             TSX   
  0053 6f04     [5]             CLR   4,X
  0055 6f03     [5]             CLR   3,X
  0057          L57:    
  446:      /*  data  */
  447:      if( pin_cfg[i].Data==HIGH ) bit_set(pin_cfg[i].pD, pin_cfg[i].Pin);
  0057 95       [2]             TSX   
  0058 e604     [3]             LDA   4,X
  005a ae06     [2]             LDX   #6
  005c 42       [5]             MUL   
  005d 95       [2]             TSX   
  005e f7       [2]             STA   ,X
  005f 8c       [1]             CLRH  
  0060 97       [1]             TAX   
  0061 d60003   [4]             LDA   @pin_cfg:3,X
  0064 a501     [2]             BIT   #1
  0066 271a     [3]             BEQ   L82 ;abs = 0082
  0068 9eee01   [4]             LDX   1,SP
  006b 9eef01   [4]             STX   1,SP
  006e 9ebe0000 [6]             LDHX  @pin_cfg,X
  0072 ad50     [5]             BSR   LC4 ;abs = 00c4
  0074 9eee01   [4]             LDX   1,SP
  0077 d60002   [4]             LDA   @pin_cfg:2,X
  007a 9efe02   [5]             LDHX  2,SP
  007d cd0000   [6]             JSR   bit_set
  0080 2018     [3]             BRA   L9A ;abs = 009a
  0082          L82:    
  448:      else bit_clr(pin_cfg[i].pD, pin_cfg[i].Pin);
  0082 9eee01   [4]             LDX   1,SP
  0085 9eef01   [4]             STX   1,SP
  0088 9ebe0000 [6]             LDHX  @pin_cfg,X
  008c ad36     [5]             BSR   LC4 ;abs = 00c4
  008e 9eee01   [4]             LDX   1,SP
  0091 d60002   [4]             LDA   @pin_cfg:2,X
  0094 9efe02   [5]             LDHX  2,SP
  0097 cd0000   [6]             JSR   bit_clr
  009a          L9A:    
  449:      /*  set direction to output */
  450:      bit_set(pin_cfg[i].pDD, pin_cfg[i].Pin);
  009a 95       [2]             TSX   
  009b e604     [3]             LDA   4,X
  009d ae06     [2]             LDX   #6
  009f 42       [5]             MUL   
  00a0 8c       [1]             CLRH  
  00a1 97       [1]             TAX   
  00a2 9ebe0004 [6]             LDHX  @pin_cfg:4,X
  00a6 ad1c     [5]             BSR   LC4 ;abs = 00c4
  00a8 97       [1]             TAX   
  00a9 d60002   [4]             LDA   @pin_cfg:2,X
  00ac 9efe02   [5]             LDHX  2,SP
  00af cd0000   [6]             JSR   bit_set
  00b2 95       [2]             TSX   
  00b3 6c04     [5]             INC   4,X
  00b5 2602     [3]             BNE   LB9 ;abs = 00b9
  00b7 6c03     [5]             INC   3,X
  00b9          LB9:    
  00b9 9efe04   [5]             LDHX  4,SP
  00bc 65000d   [3]             CPHX  #13
  00bf 9196     [3]             BLT   L57 ;abs = 0057
  451:    }
  452:  
  453:  }
  00c1 a705     [2]             AIS   #5
  00c3 81       [6]             RTS   
  00c4          LC4:    
  00c4 87       [2]             PSHA  
  00c5 8b       [2]             PSHH  
  00c6 86       [3]             PULA  
  00c7 9ee705   [4]             STA   5,SP
  00ca 86       [3]             PULA  
  00cb 8c       [1]             CLRH  
  00cc 9eef05   [4]             STX   5,SP
  00cf 81       [6]             RTS   
  454:  
  455:  static void init_sci(void)
  456:  {

Function: init_sci
Source  : C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\06 Platform\mcu.c
Options : -AddIncl../preinc.h -Cs08 -D__NO_FLOAT__ -Env"GENPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\src;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\lib;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\src;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\06 Platform;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\04 Modules;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\Sources;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\07 Application;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\05 Devices;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"LIBPATH=D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"OBJPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin" -Env"TEXTPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin" -Lasm=%n.lst -Ms -ObjN="C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\mc9s08dz60_Data\Standard\ObjectCode\mcu.c.o" -WmsgSd1106

  457:  
  458:    // BD: 38400
  459:    /* ### Init_SCI init code */
  460:    /* SCI1C2: TIE=0,TCIE=0,RIE=0,ILIE=0,TE=0,RE=0,RWU=0,SBK=0 */
  461:    SCI1C2 = 0x00;                       /* Disable the SCI1 module */
  0000 3f00     [5]             CLR   _SCI1C2
  462:    (void)(SCI1S1 == 0);                 /* Dummy read of the SCI1S1 register to clear flags */
  0002 b600     [3]             LDA   _SCI1S1
  463:    (void)(SCI1D == 0);                  /* Dummy read of the SCI1D register to clear flags */
  0004 b600     [3]             LDA   _SCI1D
  464:    /* SCI1S2: LBKDIF=1,RXEDGIF=1,RXINV=0,RWUID=0,BRK13=0,LBKDE=0,RAF=0 */
  465:    SCI1S2 = 0xC0;                                      
  0006 6ec000   [4]             MOV   #-64,_SCI1S2
  466:    /* SCI1BDH: LBKDIE=0,RXEDGIE=0,SBR12=0,SBR11=0,SBR10=0,SBR9=0,SBR8=0 */
  467:    SCI1BDH = 0x00;                                      
  0009 3f00     [5]             CLR   _SCI1BD
  468:    /* SCI1BDL: SBR7=0,SBR6=0,SBR5=0,SBR4=1,SBR3=1,SBR2=0,SBR1=1,SBR0=0 */
  469:    SCI1BDL = 0x1A;                                      
  000b 6e1a01   [4]             MOV   #26,_SCI1BD:1
  470:    /* SCI1C1: LOOPS=0,SCISWAI=0,RSRC=0,M=0,WAKE=0,ILT=0,PE=0,PT=0 */
  471:    SCI1C1 = 0x00;                                      
  000e 3f00     [5]             CLR   _SCI1C1
  472:    /* SCI1C3: R8=0,T8=0,TXDIR=1,TXINV=0,ORIE=0,NEIE=0,FEIE=0,PEIE=0 */
  473:    SCI1C3 = 0x20;                                      
  0010 6e2000   [4]             MOV   #32,_SCI1C3
  474:    /* SCI1C2: TIE=0,TCIE=0,RIE=0,ILIE=0,TE=1,RE=0,RWU=0,SBK=0 */
  475:    SCI1C2 = 0x08;                                      
  0013 6e0800   [4]             MOV   #8,_SCI1C2
  476:    
  477:  #if DEBUG_MCU_UART
  478:    for(;;){
  479:      (void)printf("U");
  480:      feed_watch_dog();
  481:    }
  482:  #endif
  483:    DBG_PRINTF("uart init done\r\n");
  0016 450000   [3]             LDHX  @"uart init done\015\012"
  0019 89       [2]             PSHX  
  001a 8b       [2]             PSHH  
  001b cd0000   [6]             JSR   printf
  001e a702     [2]             AIS   #2
  484:  
  485:  }
  0020 81       [6]             RTS   
  486:  
  487:  void TERMIO_PutChar(char ch)
  488:  {

Function: TERMIO_PutChar
Source  : C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\06 Platform\mcu.c
Options : -AddIncl../preinc.h -Cs08 -D__NO_FLOAT__ -Env"GENPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\src;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\lib;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\src;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\06 Platform;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\04 Modules;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\Sources;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\07 Application;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\05 Devices;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"LIBPATH=D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"OBJPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin" -Env"TEXTPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin" -Lasm=%n.lst -Ms -ObjN="C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\mc9s08dz60_Data\Standard\ObjectCode\mcu.c.o" -WmsgSd1106

  0000 87       [2]             PSHA  
  0001          L1:     
  489:  //  feed_watch_dog();
  490:    while( SCI1S1_TDRE==0 );
  0001 0f00fd   [5]             BRCLR 7,_SCI1S1,L1 ;abs = 0001
  491:    SCI1D = ch;
  0004 95       [2]             TSX   
  0005 f6       [3]             LDA   ,X
  0006 b700     [3]             STA   _SCI1D
  492:  //  (void)pin_toggle(PN_LED_BLUE_N);
  493:  }
  0008 8a       [3]             PULH  
  0009 81       [6]             RTS   
  494:  
  495:  void reset(void)
  496:  {

Function: reset
Source  : C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\06 Platform\mcu.c
Options : -AddIncl../preinc.h -Cs08 -D__NO_FLOAT__ -Env"GENPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\src;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\lib;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\src;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\06 Platform;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\04 Modules;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\Sources;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\07 Application;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\05 Devices;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"LIBPATH=D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"OBJPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin" -Env"TEXTPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin" -Lasm=%n.lst -Ms -ObjN="C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\mc9s08dz60_Data\Standard\ObjectCode\mcu.c.o" -WmsgSd1106

  497:    DBG_PRINTF("reset()\r\n...");
  0000 450000   [3]             LDHX  @"reset()\015\012..."
  0003 89       [2]             PSHX  
  0004 8b       [2]             PSHH  
  0005 cd0000   [6]             JSR   printf
  0008 a702     [2]             AIS   #2
  498:    reset_func();
  000a 320000   [5]             LDHX  reset_func
  000d fc       [3]             JMP   ,X
  499:  }
  500:  
  501:  void init(void)
  502:  {

Function: init
Source  : C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\06 Platform\mcu.c
Options : -AddIncl../preinc.h -Cs08 -D__NO_FLOAT__ -Env"GENPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\src;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\lib;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\src;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\06 Platform;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\04 Modules;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\Sources;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\07 Application;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\05 Devices;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"LIBPATH=D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"OBJPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin" -Env"TEXTPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin" -Lasm=%n.lst -Ms -ObjN="C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\mc9s08dz60_Data\Standard\ObjectCode\mcu.c.o" -WmsgSd1106

  503:  
  504:    /* disable interrupts */
  505:    DisableInterrupts;
  0000 9b       [1]             SEI   
  506:  
  507:    /* init write once registers */
  508:    init_write_once();
  0001 cd0000   [6]             JSR   init_write_once
  509:  
  510:    /* init xtal to 24MHz */
  511:    init_xtal();
  0004 cd0000   [6]             JSR   init_xtal
  512:  
  513:    /* init io pins, turn off leds */
  514:    init_pins();
  0007 cd0000   [6]             JSR   init_pins
  515:    
  516:    /* init uart for printf */
  517:    init_sci();
  000a ad00     [5]             BSR   init_sci
  518:  
  519:    /* init watch dog timer */
  520:    init_watchdog();
  000c cd0000   [6]             JSR   init_watchdog
  521:  
  522:    /* init tick */
  523:    init_tick();
  000f cd0000   [6]             JSR   init_tick
  524:  
  525:    /* enable interrupts */
  526:    EnableInterrupts;
  0012 9a       [1]             CLI   
  527:  
  528:  }
  0013 81       [6]             RTS   
  529:  
  530:  void feed_watch_dog(void)
  531:  {  

Function: feed_watch_dog
Source  : C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\06 Platform\mcu.c
Options : -AddIncl../preinc.h -Cs08 -D__NO_FLOAT__ -Env"GENPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\src;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\lib;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\src;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\06 Platform;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\04 Modules;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\Sources;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\07 Application;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\05 Devices;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"LIBPATH=D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"OBJPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin" -Env"TEXTPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin" -Lasm=%n.lst -Ms -ObjN="C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\mc9s08dz60_Data\Standard\ObjectCode\mcu.c.o" -WmsgSd1106

  532:   /* feeds the dog */
  533:    __RESET_WATCHDOG();
  0000 a655     [2]             LDA   #85
  0002 450000   [3]             LDHX  @_SRS
  0005 f7       [2]             STA   ,X
  0006 48       [1]             LSLA  
  0007 f7       [2]             STA   ,X
  534:  }
  0008 81       [6]             RTS   
  535:  
  536:  void delay_ms(unsigned int ms)
  537:  {

Function: delay_ms
Source  : C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\06 Platform\mcu.c
Options : -AddIncl../preinc.h -Cs08 -D__NO_FLOAT__ -Env"GENPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\src;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\lib;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\src;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\06 Platform;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\04 Modules;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\Sources;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\07 Application;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\05 Devices;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"LIBPATH=D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"OBJPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin" -Env"TEXTPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin" -Lasm=%n.lst -Ms -ObjN="C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\mc9s08dz60_Data\Standard\ObjectCode\mcu.c.o" -WmsgSd1106

  0000 89       [2]             PSHX  
  0001 8b       [2]             PSHH  
  0002 a7fc     [2]             AIS   #-4
  538:    unsigned int i;
  539:  //  LED_RED = LED_ON;
  540:    for(i=0;i<ms;i++){
  0004 95       [2]             TSX   
  0005 6f01     [5]             CLR   1,X
  0007 7f       [4]             CLR   ,X
  0008 201c     [3]             BRA   L26 ;abs = 0026
  000a          LA:     
  541:      unsigned int j;
  542:      for(j=0;j<571;j++){ /* 10ms -> 175ms if j<10000 */
  000a 95       [2]             TSX   
  000b 6f03     [5]             CLR   3,X
  000d 6f02     [5]             CLR   2,X
  000f          LF:     
  543:        feed_watch_dog();
  000f ad00     [5]             BSR   feed_watch_dog
  0011 95       [2]             TSX   
  0012 6c03     [5]             INC   3,X
  0014 2602     [3]             BNE   L18 ;abs = 0018
  0016 6c02     [5]             INC   2,X
  0018          L18:    
  0018 9efe03   [5]             LDHX  3,SP
  001b 65023b   [3]             CPHX  #571
  001e 25ef     [3]             BCS   LF ;abs = 000f
  0020 95       [2]             TSX   
  0021 6c01     [5]             INC   1,X
  0023 2601     [3]             BNE   L26 ;abs = 0026
  0025 7c       [4]             INC   ,X
  0026          L26:    
  0026 9efe05   [5]             LDHX  5,SP
  0029 9ef301   [6]             CPHX  1,SP
  002c 22dc     [3]             BHI   LA ;abs = 000a
  544:      }
  545:    }
  546:  //  LED_RED = LED_OFF;
  547:  }
  002e a706     [2]             AIS   #6
  0030 81       [6]             RTS   
  548:  
  549:  void halt(void)
  550:  {

Function: halt
Source  : C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\06 Platform\mcu.c
Options : -AddIncl../preinc.h -Cs08 -D__NO_FLOAT__ -Env"GENPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\src;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\lib;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\src;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\06 Platform;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\04 Modules;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\Sources;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\07 Application;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\05 Devices;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"LIBPATH=D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"OBJPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin" -Env"TEXTPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin" -Lasm=%n.lst -Ms -ObjN="C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\mc9s08dz60_Data\Standard\ObjectCode\mcu.c.o" -WmsgSd1106

  0000          L0:     
  551:    for(;;) feed_watch_dog();
  0000 ad00     [5]             BSR   feed_watch_dog
  0002 20fc     [3]             BRA   L0 ;abs = 0000
  552:  }
  553:  
  554:  int pin_high(gt_ePinNumber pn)
  555:  {

Function: pin_high
Source  : C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\06 Platform\mcu.c
Options : -AddIncl../preinc.h -Cs08 -D__NO_FLOAT__ -Env"GENPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\src;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\lib;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\src;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\06 Platform;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\04 Modules;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\Sources;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\07 Application;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\05 Devices;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"LIBPATH=D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"OBJPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin" -Env"TEXTPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin" -Lasm=%n.lst -Ms -ObjN="C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\mc9s08dz60_Data\Standard\ObjectCode\mcu.c.o" -WmsgSd1106

  0000 a7fe     [2]             AIS   #-2
  556:    if( pn<PN_MAX ){
  0002 65000d   [3]             CPHX  #13
  0005 9023     [3]             BGE   L2A ;abs = 002a
  557:      bit_set(pin_cfg[pn].pD, pin_cfg[pn].Pin);
  0007 a606     [2]             LDA   #6
  0009 42       [5]             MUL   
  000a 8c       [1]             CLRH  
  000b 97       [1]             TAX   
  000c 9ebe0000 [6]             LDHX  @pin_cfg,X
  0010 87       [2]             PSHA  
  0011 8b       [2]             PSHH  
  0012 86       [3]             PULA  
  0013 9ee702   [4]             STA   2,SP
  0016 86       [3]             PULA  
  0017 8c       [1]             CLRH  
  0018 9eef02   [4]             STX   2,SP
  001b 97       [1]             TAX   
  001c d60002   [4]             LDA   @pin_cfg:2,X
  001f 9efe01   [5]             LDHX  1,SP
  0022 cd0000   [6]             JSR   bit_set
  558:      return 1;
  0025 ae01     [2]             LDX   #1
  0027 8c       [1]             CLRH  
  0028 2003     [3]             BRA   L2D ;abs = 002d
  002a          L2A:    
  559:    }
  560:    return -1;
  002a 45ffff   [3]             LDHX  #-1
  002d          L2D:    
  561:  }
  002d a702     [2]             AIS   #2
  002f 81       [6]             RTS   
  562:  
  563:  int pin_low(gt_ePinNumber pn)
  564:  {

Function: pin_low
Source  : C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\06 Platform\mcu.c
Options : -AddIncl../preinc.h -Cs08 -D__NO_FLOAT__ -Env"GENPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\src;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\lib;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\src;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\06 Platform;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\04 Modules;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\Sources;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\07 Application;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\05 Devices;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"LIBPATH=D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"OBJPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin" -Env"TEXTPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin" -Lasm=%n.lst -Ms -ObjN="C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\mc9s08dz60_Data\Standard\ObjectCode\mcu.c.o" -WmsgSd1106

  0000 a7fe     [2]             AIS   #-2
  565:    if( pn<PN_MAX ){
  0002 65000d   [3]             CPHX  #13
  0005 9023     [3]             BGE   L2A ;abs = 002a
  566:      bit_clr(pin_cfg[pn].pD, pin_cfg[pn].Pin);
  0007 a606     [2]             LDA   #6
  0009 42       [5]             MUL   
  000a 8c       [1]             CLRH  
  000b 97       [1]             TAX   
  000c 9ebe0000 [6]             LDHX  @pin_cfg,X
  0010 87       [2]             PSHA  
  0011 8b       [2]             PSHH  
  0012 86       [3]             PULA  
  0013 9ee702   [4]             STA   2,SP
  0016 86       [3]             PULA  
  0017 8c       [1]             CLRH  
  0018 9eef02   [4]             STX   2,SP
  001b 97       [1]             TAX   
  001c d60002   [4]             LDA   @pin_cfg:2,X
  001f 9efe01   [5]             LDHX  1,SP
  0022 cd0000   [6]             JSR   bit_clr
  567:      return 1;
  0025 ae01     [2]             LDX   #1
  0027 8c       [1]             CLRH  
  0028 2003     [3]             BRA   L2D ;abs = 002d
  002a          L2A:    
  568:    }
  569:    return -1;
  002a 45ffff   [3]             LDHX  #-1
  002d          L2D:    
  570:  }
  002d a702     [2]             AIS   #2
  002f 81       [6]             RTS   
  571:  
  572:  int pin_toggle(gt_ePinNumber pn)
  573:  {

Function: pin_toggle
Source  : C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\06 Platform\mcu.c
Options : -AddIncl../preinc.h -Cs08 -D__NO_FLOAT__ -Env"GENPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\src;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\lib;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\src;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\06 Platform;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\04 Modules;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\Sources;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\07 Application;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\05 Devices;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"LIBPATH=D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"OBJPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin" -Env"TEXTPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin" -Lasm=%n.lst -Ms -ObjN="C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\mc9s08dz60_Data\Standard\ObjectCode\mcu.c.o" -WmsgSd1106

  0000 a7fd     [2]             AIS   #-3
  574:    if( pn<PN_MAX ){
  0002 65000d   [3]             CPHX  #13
  0005 904e     [3]             BGE   L55 ;abs = 0055
  575:      if( bit_get(pin_cfg[pn].pD, pin_cfg[pn].Pin) ){
  0007 a606     [2]             LDA   #6
  0009 42       [5]             MUL   
  000a 95       [2]             TSX   
  000b f7       [2]             STA   ,X
  000c 8c       [1]             CLRH  
  000d 97       [1]             TAX   
  000e 9ebe0000 [6]             LDHX  @pin_cfg,X
  0012 ad47     [5]             BSR   L5B ;abs = 005b
  0014 97       [1]             TAX   
  0015 d60002   [4]             LDA   @pin_cfg:2,X
  0018 9efe02   [5]             LDHX  2,SP
  001b cd0000   [6]             JSR   bit_get
  001e 650000   [3]             CPHX  #0
  0021 271a     [3]             BEQ   L3D ;abs = 003d
  576:        bit_clr(pin_cfg[pn].pD, pin_cfg[pn].Pin);
  0023 95       [2]             TSX   
  0024 fe       [3]             LDX   ,X
  0025 8c       [1]             CLRH  
  0026 9eef01   [4]             STX   1,SP
  0029 9ebe0000 [6]             LDHX  @pin_cfg,X
  002d ad2c     [5]             BSR   L5B ;abs = 005b
  002f 9eee01   [4]             LDX   1,SP
  0032 d60002   [4]             LDA   @pin_cfg:2,X
  0035 9efe02   [5]             LDHX  2,SP
  0038 cd0000   [6]             JSR   bit_clr
  577:      }else{
  003b 2018     [3]             BRA   L55 ;abs = 0055
  003d          L3D:    
  578:        bit_set(pin_cfg[pn].pD, pin_cfg[pn].Pin);
  003d 95       [2]             TSX   
  003e fe       [3]             LDX   ,X
  003f 8c       [1]             CLRH  
  0040 9eef01   [4]             STX   1,SP
  0043 9ebe0000 [6]             LDHX  @pin_cfg,X
  0047 ad12     [5]             BSR   L5B ;abs = 005b
  0049 9eee01   [4]             LDX   1,SP
  004c d60002   [4]             LDA   @pin_cfg:2,X
  004f 9efe02   [5]             LDHX  2,SP
  0052 cd0000   [6]             JSR   bit_set
  0055          L55:    
  579:      }
  580:    }
  581:    return -1;
  0055 45ffff   [3]             LDHX  #-1
  582:  }
  0058 a703     [2]             AIS   #3
  005a 81       [6]             RTS   
  005b          L5B:    
  005b 87       [2]             PSHA  
  005c 8b       [2]             PSHH  
  005d 86       [3]             PULA  
  005e 9ee705   [4]             STA   5,SP
  0061 86       [3]             PULA  
  0062 8c       [1]             CLRH  
  0063 9eef05   [4]             STX   5,SP
  0066 81       [6]             RTS   
  583:  
  584:  int iic_init(void)
  585:  {

Function: iic_init
Source  : C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\06 Platform\mcu.c
Options : -AddIncl../preinc.h -Cs08 -D__NO_FLOAT__ -Env"GENPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\src;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\lib;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\src;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\06 Platform;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\04 Modules;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\Sources;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\07 Application;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\05 Devices;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"LIBPATH=D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"OBJPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin" -Env"TEXTPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin" -Lasm=%n.lst -Ms -ObjN="C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\mc9s08dz60_Data\Standard\ObjectCode\mcu.c.o" -WmsgSd1106

  586:    // 100Kbps
  587:    /* ### Init_IIC init code */
  588:    /* IICC2: GCAEN=0,ADEXT=0,AD10=0,AD9=0,AD8=0 */
  589:    IICC2 = 0x00;                                      
  0000 3f00     [5]             CLR   _IICC2
  590:    /* IICA: AD7=0,AD6=0,AD5=0,AD4=0,AD3=0,AD2=0,AD1=0 */
  591:    IICA = 0x00;                                      
  0002 3f00     [5]             CLR   _IICA
  592:    /* IICF: MULT1=1,MULT0=0,ICR5=0,ICR4=0,ICR3=0,ICR2=1,ICR1=1,ICR0=1 */
  593:    IICF = 0x87;                                      
  0004 6e8700   [4]             MOV   #-121,_IICF
  594:    /* IICS: TCF=1,IAAS=0,BUSY=0,ARBL=1,SRW=0,IICIF=1,RXAK=0 */
  595:    IICS = 0x92;                         /* Clear the interrupt flags */
  0007 6e9200   [4]             MOV   #-110,_IICS
  596:    /* IICC: IICEN=1 */
  597:    IICC |= (unsigned char)0x80;                      
  000a 1e00     [5]             BSET  7,_IICC1
  598:    /* IICC: IICEN=1,IICIE=0,MST=0,TX=1,TXAK=0,RSTA=0 */
  599:    IICC = 0x90;                                      
  000c 6e9000   [4]             MOV   #-112,_IICC1
  600:  
  601:    /* done */
  602:    IIC_PRINTF("iic init done\r\n");
  000f 450000   [3]             LDHX  @"iic init done\015\012"
  0012 89       [2]             PSHX  
  0013 8b       [2]             PSHH  
  0014 cd0000   [6]             JSR   empty_printf
  0017 a702     [2]             AIS   #2
  603:    return  OK;
  0019 ae01     [2]             LDX   #1
  001b 8c       [1]             CLRH  
  604:  }
  001c 81       [6]             RTS   
  605:  
  606:  int iic_reset(void)
  607:  {

Function: iic_reset
Source  : C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\06 Platform\mcu.c
Options : -AddIncl../preinc.h -Cs08 -D__NO_FLOAT__ -Env"GENPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\src;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\lib;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\src;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\06 Platform;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\04 Modules;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\Sources;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\07 Application;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\05 Devices;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"LIBPATH=D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"OBJPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin" -Env"TEXTPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin" -Lasm=%n.lst -Ms -ObjN="C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\mc9s08dz60_Data\Standard\ObjectCode\mcu.c.o" -WmsgSd1106

  608:    IICC = 0x00;
  0000 3f00     [5]             CLR   _IICC1
  609:    IICC2 = 0x00;
  0002 3f00     [5]             CLR   _IICC2
  610:    return  OK;
  0004 ae01     [2]             LDX   #1
  0006 8c       [1]             CLRH  
  611:  }
  0007 81       [6]             RTS   
  612:  
  613:  int iic_xfer(xfer_t * x)
  614:  {

Function: iic_xfer
Source  : C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\06 Platform\mcu.c
Options : -AddIncl../preinc.h -Cs08 -D__NO_FLOAT__ -Env"GENPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\src;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\lib;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\src;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\06 Platform;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\04 Modules;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\Sources;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\07 Application;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\05 Devices;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"LIBPATH=D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"OBJPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin" -Env"TEXTPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin" -Lasm=%n.lst -Ms -ObjN="C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\mc9s08dz60_Data\Standard\ObjectCode\mcu.c.o" -WmsgSd1106

  0000 89       [2]             PSHX  
  0001 8b       [2]             PSHH  
  0002 a7fd     [2]             AIS   #-3
  615:  
  616:    unsigned short i;
  617:    unsigned char iics;
  618:  
  619:    /* check parameters */
  620:    if( x==0 ){
  0004 650000   [3]             CPHX  #0
  0007 2613     [3]             BNE   L1C ;abs = 001c
  621:      PERRNO(ERRNO_INVALID_PARAMETERS,0);
  0009 ae01     [2]             LDX   #1
  000b 8c       [1]             CLRH  
  000c 89       [2]             PSHX  
  000d 8b       [2]             PSHH  
  000e ae62     [2]             LDX   #98
  0010 89       [2]             PSHX  
  0011 8b       [2]             PSHH  
  0012 450000   [3]             LDHX  @"C:\Users\Administrator\Desktop\Fms\FMS\\260\302\314\25110V3T\06 Platform\mcu.c"
  0015 89       [2]             PSHX  
  0016 8b       [2]             PSHH  
  0017 45026d   [3]             LDHX  #621
  622:      return NG;
  001a 201e     [3]             BRA   L3A ;abs = 003a
  001c          L1C:    
  623:    }
  624:    if( x->txcnt==0 && x->rxmax==0 ){
  001c 9ece05   [5]             LDHX  5,X
  001f 2627     [3]             BNE   L48 ;abs = 0048
  0021 9efe04   [5]             LDHX  4,SP
  0024 9ece07   [5]             LDHX  7,X
  0027 261f     [3]             BNE   L48 ;abs = 0048
  625:      PERRNO(ERRNO_INVALID_PARAMETERS,0);
  0029 ae01     [2]             LDX   #1
  002b 8c       [1]             CLRH  
  002c 89       [2]             PSHX  
  002d 8b       [2]             PSHH  
  002e ae62     [2]             LDX   #98
  0030 89       [2]             PSHX  
  0031 8b       [2]             PSHH  
  0032 450000   [3]             LDHX  @"C:\Users\Administrator\Desktop\Fms\FMS\\260\302\314\25110V3T\06 Platform\mcu.c"
  0035 89       [2]             PSHX  
  0036 8b       [2]             PSHH  
  0037 450271   [3]             LDHX  #625
  003a          L3A:    
  003a 89       [2]             PSHX  
  003b 8b       [2]             PSHH  
  003c 5f       [1]             CLRX  
  003d 8c       [1]             CLRH  
  003e cd0000   [6]             JSR   perrno
  0041 a708     [2]             AIS   #8
  626:      return NG;
  0043 45fffe   [3]             LDHX  #-2
  0046 202c     [3]             BRA   L74 ;abs = 0074
  0048          L48:    
  627:    }
  628:  
  629:    /* feed watch dog incase timeout */
  630:    feed_watch_dog();
  0048 cd0000   [6]             JSR   feed_watch_dog
  631:  
  632:    /* check iic bus status */
  633:    iics = IICS;
  004b b600     [3]             LDA   _IICS
  634:    IIC_PRINTF("%02X\t", iics);
  004d 95       [2]             TSX   
  004e f7       [2]             STA   ,X
  004f 87       [2]             PSHA  
  0050 5f       [1]             CLRX  
  0051 89       [2]             PSHX  
  0052 450000   [3]             LDHX  @"%02X\011"
  0055 89       [2]             PSHX  
  0056 8b       [2]             PSHH  
  0057 cd0000   [6]             JSR   empty_printf
  005a a704     [2]             AIS   #4
  635:    if( iics==0x20) {
  005c 95       [2]             TSX   
  005d f6       [3]             LDA   ,X
  005e a120     [2]             CMP   #32
  0060 2615     [3]             BNE   L77 ;abs = 0077
  636:      (void)iic_reset();
  0062 ad00     [5]             BSR   iic_reset
  637:      (void)iic_init();
  0064 cd0000   [6]             JSR   iic_init
  638:      IIC_PRINTF("iic bus error !!!\r\n");
  0067 450000   [3]             LDHX  @"iic bus error !!!\015\012"
  006a 89       [2]             PSHX  
  006b 8b       [2]             PSHH  
  006c cd0000   [6]             JSR   empty_printf
  006f a702     [2]             AIS   #2
  639:      return -1;
  0071 45ffff   [3]             LDHX  #-1
  0074          L74:    
  0074 cc0238   [4]             JMP   L238 ;abs = 0238
  0077          L77:    
  640:    }
  641:  
  642:    /* before tx start */
  643:    IICC_TXAK = 0;
  0077 1700     [5]             BCLR  3,_IICC1
  644:  
  645:    /* generate a start */
  646:    IIC_PRINTF("S");
  0079 450000   [3]             LDHX  @"S"
  007c 89       [2]             PSHX  
  007d 8b       [2]             PSHH  
  007e cd0000   [6]             JSR   empty_printf
  0081 a702     [2]             AIS   #2
  647:    IICC |= 0x30;   // And generate START condition;
  0083 b600     [3]             LDA   _IICC1
  0085 aa30     [2]             ORA   #48
  0087 b700     [3]             STA   _IICC1
  648:    
  649:    /* tx */
  650:    if( x->txcnt>0 ){
  0089 9efe04   [5]             LDHX  4,SP
  008c 9ece05   [5]             LDHX  5,X
  008f 2603     [3]             BNE   L94 ;abs = 0094
  0091 cc0122   [4]             JMP   L122 ;abs = 0122
  0094          L94:    
  651:  
  652:      /* send address, with WRITE direction */
  653:      IIC_PRINTF("T");
  0094 450000   [3]             LDHX  @"T"
  0097 89       [2]             PSHX  
  0098 8b       [2]             PSHH  
  0099 cd0000   [6]             JSR   empty_printf
  009c a702     [2]             AIS   #2
  654:      IICD = (x->devadd<<1);    // Address the slave and set up for master transmit;
  009e 9efe04   [5]             LDHX  4,SP
  00a1 f6       [3]             LDA   ,X
  00a2 48       [1]             LSLA  
  00a3 b700     [3]             STA   _IICD
  00a5          LA5:    
  655:      while (!IICS_IICIF);  // wait until IBIF;
  00a5 0300fd   [5]             BRCLR 1,_IICS,LA5 ;abs = 00a5
  656:      IICS_IICIF=1; // clear the interrupt event flag;
  00a8 1200     [5]             BSET  1,_IICS
  00aa          LAA:    
  657:      while(IICS_RXAK); // check for RXAK;
  00aa 0000fd   [5]             BRSET 0,_IICS,LAA ;abs = 00aa
  658:  
  659:      /* send data buffer */  
  660:      for(i=0;i<x->txcnt;i++){
  00ad 95       [2]             TSX   
  00ae 6f02     [5]             CLR   2,X
  00b0 6f01     [5]             CLR   1,X
  00b2 204f     [3]             BRA   L103 ;abs = 0103
  00b4          LB4:    
  661:        IIC_PRINTF(">");
  00b4 450000   [3]             LDHX  @">"
  00b7 89       [2]             PSHX  
  00b8 8b       [2]             PSHH  
  00b9 cd0000   [6]             JSR   empty_printf
  00bc a702     [2]             AIS   #2
  662:        IICD = x->txbuf[i];    // Address the slave and set up for master transmit;
  00be 9efe04   [5]             LDHX  4,SP
  00c1 e602     [3]             LDA   2,X
  00c3 9eeb03   [4]             ADD   3,SP
  00c6 87       [2]             PSHA  
  00c7 9ee603   [4]             LDA   3,SP
  00ca e901     [3]             ADC   1,X
  00cc 87       [2]             PSHA  
  00cd 8a       [3]             PULH  
  00ce 88       [3]             PULX  
  00cf 7e00     [5]             MOV   X+,_IICD
  663:        IIC_PRINTF("%02X",x->txbuf[i]);
  00d1 9efe04   [5]             LDHX  4,SP
  00d4 e602     [3]             LDA   2,X
  00d6 9eeb03   [4]             ADD   3,SP
  00d9 9ee701   [4]             STA   1,SP
  00dc 9ee602   [4]             LDA   2,SP
  00df e901     [3]             ADC   1,X
  00e1 87       [2]             PSHA  
  00e2 95       [2]             TSX   
  00e3 ee01     [3]             LDX   1,X
  00e5 8a       [3]             PULH  
  00e6 fe       [3]             LDX   ,X
  00e7 89       [2]             PSHX  
  00e8 4f       [1]             CLRA  
  00e9 87       [2]             PSHA  
  00ea 450000   [3]             LDHX  @"%02X"
  00ed 89       [2]             PSHX  
  00ee 8b       [2]             PSHH  
  00ef cd0000   [6]             JSR   empty_printf
  00f2 a704     [2]             AIS   #4
  00f4          LF4:    
  664:        while (!IICS_IICIF);  // wait until IBIF;
  00f4 0300fd   [5]             BRCLR 1,_IICS,LF4 ;abs = 00f4
  665:        IICS_IICIF=1; // clear the interrupt event flag;
  00f7 1200     [5]             BSET  1,_IICS
  00f9          LF9:    
  666:        while(IICS_RXAK); // check for RXAK;
  00f9 0000fd   [5]             BRSET 0,_IICS,LF9 ;abs = 00f9
  00fc 95       [2]             TSX   
  00fd 6c02     [5]             INC   2,X
  00ff 2602     [3]             BNE   L103 ;abs = 0103
  0101 6c01     [5]             INC   1,X
  0103          L103:   
  0103 9efe04   [5]             LDHX  4,SP
  0106 9ece05   [5]             LDHX  5,X
  0109 9ef302   [6]             CPHX  2,SP
  010c 22a6     [3]             BHI   LB4 ;abs = 00b4
  667:      }
  668:  
  669:      /* stop of write */
  670:      if( x->rxmax==0 ){
  010e 9efe04   [5]             LDHX  4,SP
  0111 9ece07   [5]             LDHX  7,X
  0114 260e     [3]             BNE   L124 ;abs = 0124
  671:        IIC_PRINTF("P");
  0116 450000   [3]             LDHX  @"P"
  0119 89       [2]             PSHX  
  011a 8b       [2]             PSHH  
  011b cd0000   [6]             JSR   empty_printf
  011e a702     [2]             AIS   #2
  672:        IICC_MST = 0;
  0120 1b00     [5]             BCLR  5,_IICC1
  0122          L122:   
  673:      }
  0122 200c     [3]             BRA   L130 ;abs = 0130
  0124          L124:   
  674:      /* restart for read */
  675:      else{
  676:        IIC_PRINTF("s");
  0124 450000   [3]             LDHX  @"s"
  0127 89       [2]             PSHX  
  0128 8b       [2]             PSHH  
  0129 cd0000   [6]             JSR   empty_printf
  012c a702     [2]             AIS   #2
  677:        IICC_RSTA = 1;
  012e 1400     [5]             BSET  2,_IICC1
  0130          L130:   
  678:      }
  679:  
  680:    }
  681:  
  682:    /* rx */
  683:    if( x->rxmax>0 ){
  0130 9efe04   [5]             LDHX  4,SP
  0133 9ece07   [5]             LDHX  7,X
  0136 2603     [3]             BNE   L13B ;abs = 013b
  0138 cc022b   [4]             JMP   L22B ;abs = 022b
  013b          L13B:   
  684:    
  685:      /* send address, with READ direction */
  686:      IIC_PRINTF("T");
  013b 450000   [3]             LDHX  @"T"
  013e 89       [2]             PSHX  
  013f 8b       [2]             PSHH  
  0140 cd0000   [6]             JSR   empty_printf
  0143 a702     [2]             AIS   #2
  687:      IICD = (x->devadd<<1)+1;    // Address the slave and set up for master transmit;
  0145 9efe04   [5]             LDHX  4,SP
  0148 f6       [3]             LDA   ,X
  0149 48       [1]             LSLA  
  014a 4c       [1]             INCA  
  014b b700     [3]             STA   _IICD
  014d          L14D:   
  688:      while (!IICS_IICIF);  // wait until IBIF;
  014d 0300fd   [5]             BRCLR 1,_IICS,L14D ;abs = 014d
  689:      IICS_IICIF=1; // clear the interrupt event flag;
  0150 1200     [5]             BSET  1,_IICS
  0152          L152:   
  690:      while(IICS_RXAK); // check for RXAK;
  0152 0000fd   [5]             BRSET 0,_IICS,L152 ;abs = 0152
  691:  
  692:      /* start first byte */
  693:      IICC_TX = 0;
  0155 1900     [5]             BCLR  4,_IICC1
  694:      IICC_TXAK = 0;
  0157 1700     [5]             BCLR  3,_IICC1
  695:  
  696:      IIC_PRINTF("R");
  0159 450000   [3]             LDHX  @"R"
  015c 89       [2]             PSHX  
  015d 8b       [2]             PSHH  
  015e cd0000   [6]             JSR   empty_printf
  0161 a702     [2]             AIS   #2
  697:      x->rxbuf[0] = IICD; //  dummy read to start receive
  0163 9efe04   [5]             LDHX  4,SP
  0166 9ece03   [5]             LDHX  3,X
  0169 5e00     [5]             MOV   _IICD,X+
  698:  
  699:      /* receive data bytes */
  700:      for(i=0;i<x->rxmax-1;i++){
  016b 95       [2]             TSX   
  016c 6f02     [5]             CLR   2,X
  016e 6f01     [5]             CLR   1,X
  0170 205b     [3]             BRA   L1CD ;abs = 01cd
  0172          L172:   
  701:  
  702:        /* wait done */
  703:        while( !IICS_IICIF );
  0172 0300fd   [5]             BRCLR 1,_IICS,L172 ;abs = 0172
  704:        IICS_IICIF = 1; //  clear
  0175 1200     [5]             BSET  1,_IICS
  705:  
  706:        /* set next ack */
  707:        if( i==x->rxmax-2 ) IICC_TXAK = 1;
  0177 9efe04   [5]             LDHX  4,SP
  017a 9ece07   [5]             LDHX  7,X
  017d affe     [2]             AIX   #-2
  017f 9ef302   [6]             CPHX  2,SP
  0182 2602     [3]             BNE   L186 ;abs = 0186
  0184 1600     [5]             BSET  3,_IICC1
  0186          L186:   
  708:        /* read and save data and start the next */
  709:        IIC_PRINTF("<");
  0186 450000   [3]             LDHX  @"<"
  0189 89       [2]             PSHX  
  018a 8b       [2]             PSHH  
  018b cd0000   [6]             JSR   empty_printf
  018e a702     [2]             AIS   #2
  710:        x->rxbuf[i] = IICD;
  0190 9efe04   [5]             LDHX  4,SP
  0193 e604     [3]             LDA   4,X
  0195 9eeb03   [4]             ADD   3,SP
  0198 87       [2]             PSHA  
  0199 9ee603   [4]             LDA   3,SP
  019c e903     [3]             ADC   3,X
  019e 87       [2]             PSHA  
  019f 8a       [3]             PULH  
  01a0 88       [3]             PULX  
  01a1 5e00     [5]             MOV   _IICD,X+
  711:        IIC_PRINTF("%02X",x->rxbuf[i]);
  01a3 9efe04   [5]             LDHX  4,SP
  01a6 e604     [3]             LDA   4,X
  01a8 9eeb03   [4]             ADD   3,SP
  01ab 9ee701   [4]             STA   1,SP
  01ae 9ee602   [4]             LDA   2,SP
  01b1 e903     [3]             ADC   3,X
  01b3 87       [2]             PSHA  
  01b4 95       [2]             TSX   
  01b5 ee01     [3]             LDX   1,X
  01b7 8a       [3]             PULH  
  01b8 fe       [3]             LDX   ,X
  01b9 89       [2]             PSHX  
  01ba 4f       [1]             CLRA  
  01bb 87       [2]             PSHA  
  01bc 450000   [3]             LDHX  @"%02X"
  01bf 89       [2]             PSHX  
  01c0 8b       [2]             PSHH  
  01c1 cd0000   [6]             JSR   empty_printf
  01c4 a704     [2]             AIS   #4
  01c6 95       [2]             TSX   
  01c7 6c02     [5]             INC   2,X
  01c9 2602     [3]             BNE   L1CD ;abs = 01cd
  01cb 6c01     [5]             INC   1,X
  01cd          L1CD:   
  01cd 9efe04   [5]             LDHX  4,SP
  01d0 9ece07   [5]             LDHX  7,X
  01d3 afff     [2]             AIX   #-1
  01d5 9ef302   [6]             CPHX  2,SP
  01d8 2298     [3]             BHI   L172 ;abs = 0172
  01da          L1DA:   
  712:  
  713:      }
  714:  
  715:      /* receive last byte */
  716:      while( !IICS_IICIF );
  01da 0300fd   [5]             BRCLR 1,_IICS,L1DA ;abs = 01da
  717:      IICS_IICIF = 1;
  01dd 1200     [5]             BSET  1,_IICS
  718:      /* stop */
  719:      IIC_PRINTF("<");
  01df 450000   [3]             LDHX  @"<"
  01e2 89       [2]             PSHX  
  01e3 8b       [2]             PSHH  
  01e4 cd0000   [6]             JSR   empty_printf
  01e7 a702     [2]             AIS   #2
  720:      IICC_MST = 0;
  01e9 1b00     [5]             BCLR  5,_IICC1
  721:      /* save last data */
  722:      x->rxbuf[i] = IICD;
  01eb 9efe04   [5]             LDHX  4,SP
  01ee e604     [3]             LDA   4,X
  01f0 9eeb03   [4]             ADD   3,SP
  01f3 87       [2]             PSHA  
  01f4 9ee603   [4]             LDA   3,SP
  01f7 e903     [3]             ADC   3,X
  01f9 87       [2]             PSHA  
  01fa 8a       [3]             PULH  
  01fb 88       [3]             PULX  
  01fc 5e00     [5]             MOV   _IICD,X+
  723:      IIC_PRINTF("%02X",x->rxbuf[i]);
  01fe 9efe04   [5]             LDHX  4,SP
  0201 e604     [3]             LDA   4,X
  0203 9eeb03   [4]             ADD   3,SP
  0206 9ee701   [4]             STA   1,SP
  0209 9ee602   [4]             LDA   2,SP
  020c e903     [3]             ADC   3,X
  020e 87       [2]             PSHA  
  020f 95       [2]             TSX   
  0210 ee01     [3]             LDX   1,X
  0212 8a       [3]             PULH  
  0213 fe       [3]             LDX   ,X
  0214 89       [2]             PSHX  
  0215 4f       [1]             CLRA  
  0216 87       [2]             PSHA  
  0217 450000   [3]             LDHX  @"%02X"
  021a 89       [2]             PSHX  
  021b 8b       [2]             PSHH  
  021c cd0000   [6]             JSR   empty_printf
  021f a704     [2]             AIS   #4
  724:      IIC_PRINTF("P");
  0221 450000   [3]             LDHX  @"P"
  0224 89       [2]             PSHX  
  0225 8b       [2]             PSHH  
  0226 cd0000   [6]             JSR   empty_printf
  0229 a702     [2]             AIS   #2
  022b          L22B:   
  725:  
  726:    }
  727:    
  728:    IIC_PRINTF("\r\n");
  022b 450000   [3]             LDHX  @"\015\012"
  022e 89       [2]             PSHX  
  022f 8b       [2]             PSHH  
  0230 cd0000   [6]             JSR   empty_printf
  0233 a702     [2]             AIS   #2
  729:  
  730:    /* done */
  731:    return  OK;
  0235 ae01     [2]             LDX   #1
  0237 8c       [1]             CLRH  
  0238          L238:   
  732:  }
  0238 a705     [2]             AIS   #5
  023a 81       [6]             RTS   
  733:  
  734:  int  mscan_init(mscan_config_t* f){

Function: mscan_init
Source  : C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\06 Platform\mcu.c
Options : -AddIncl../preinc.h -Cs08 -D__NO_FLOAT__ -Env"GENPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\src;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\lib;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\src;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\06 Platform;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\04 Modules;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\Sources;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\07 Application;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\05 Devices;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"LIBPATH=D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"OBJPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin" -Env"TEXTPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin" -Lasm=%n.lst -Ms -ObjN="C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\mc9s08dz60_Data\Standard\ObjectCode\mcu.c.o" -WmsgSd1106

  0000 89       [2]             PSHX  
  0001 8b       [2]             PSHH  
  735:    (void)f;
  736:  
  737:    /* ### Init_MSCAN init code */
  738:    /* CANCTL0: INITRQ=1 */
  739:    CANCTL0_INITRQ = 1;
  0002 450000   [3]             LDHX  @_CANCTL0
  0005 f6       [3]             LDA   ,X
  0006 aa01     [2]             ORA   #1
  0008 f7       [2]             STA   ,X
  740:    while(!CANCTL1_INITAK) {             /* Wait for init acknowledge */
  0009 2003     [3]             BRA   LE ;abs = 000e
  000b          LB:     
  000b cd00be   [6]             JSR   LBE ;abs = 00be
  000e          LE:     
  000e c60000   [4]             LDA   _CANCTL1
  0011 a501     [2]             BIT   #1
  0013 27f6     [3]             BEQ   LB ;abs = 000b
  741:     SRS = 0x55;                         /* Reset watchdog counter write 55, AA */
  742:     SRS = 0xAA;
  743:    }
  744:  
  745:    /* CANCTL1: CANE=1,CLKSRC=0,LOOPB=0,LISTEN=0,BORM=0,WUPM=0,SLPAK=0,INITAK=1 */
  746:         // can enable, clock source is 8MHz xtal, no loop back
  747:         // no listen mode, auto bus off recovery, wake up on any dominant
  748:    CANCTL1 = 0x81;
  0015 a681     [2]             LDA   #-127
  0017 c70000   [4]             STA   _CANCTL1
  749:    /* CANBTR1: SAMP=1,TSEG22=0,TSEG21=1,TSEG20=1,TSEG13=1,TSEG12=0,TSEG11=1,TSEG10=0 */
  750:        //  3 sample per bit, tseg2 is 3(4Tq), tseg 1 is 10(11Tq)
  751:    CANBTR1 = 0xBA;                                      
  001a a6ba     [2]             LDA   #-70
  001c c70000   [4]             STA   _CANBTR1
  752:    /* CANBTR0: SJW1=0,SJW0=1,BRP5=0,BRP4=0,BRP3=0,BRP2=0,BRP1=0,BRP0=1 */
  753:        //  sjw is 1(2Tq), BRP is 1(2)
  754:    CANBTR0 = 0x41;                                      
  001f a641     [2]             LDA   #65
  0021 c70000   [4]             STA   _CANBTR0
  755:        //  default can bitrate is 8MHz/16/2 = 250K
  756:    CANBTR0_BRP = f->brp;
  0024 9efe01   [5]             LDHX  1,SP
  0027 c60000   [4]             LDA   _CANBTR0
  002a e801     [3]             EOR   1,X
  002c a43f     [2]             AND   #63
  002e c80000   [4]             EOR   _CANBTR0
  0031 c70000   [4]             STA   _CANBTR0
  757:  //  PRINTF("CANBTR0: %02X\r\n", CANBTR0);
  758:  
  759:  
  760:    /* CANIDAC: IDAM1=0,IDAM0=0,IDHIT2=0,IDHIT1=0,IDHIT0=0 */
  761:        //  2 32-bit filters
  762:    CANIDAC = 0x00;
  0034 4f       [1]             CLRA  
  0035 c70000   [4]             STA   _CANIDAC
  763:                                          
  764:    CANIDAC_IDAM = f->idam;
  0038 e603     [3]             LDA   3,X
  003a 62       [1]             NSA   
  003b a4f0     [2]             AND   #-16
  003d c80000   [4]             EOR   _CANIDAC
  0040 a430     [2]             AND   #48
  0042 c80000   [4]             EOR   _CANIDAC
  0045 c70000   [4]             STA   _CANIDAC
  765:  //  PRINTF("CANIDAC: %02X\r\n", CANIDAC);
  766:  
  767:    CANIDAR0 = f->idar[0];
  0048 e604     [3]             LDA   4,X
  004a c70000   [4]             STA   _CANIDAR0
  768:    CANIDAR1 = f->idar[1];
  004d e605     [3]             LDA   5,X
  004f c70000   [4]             STA   _CANIDAR1
  769:    CANIDAR2 = f->idar[2];
  0052 e606     [3]             LDA   6,X
  0054 c70000   [4]             STA   _CANIDAR2
  770:    CANIDAR3 = f->idar[3];
  0057 e607     [3]             LDA   7,X
  0059 c70000   [4]             STA   _CANIDAR3
  771:    CANIDAR4 = f->idar[4];
  005c e608     [3]             LDA   8,X
  005e c70000   [4]             STA   _CANIDAR4
  772:    CANIDAR5 = f->idar[5];
  0061 e609     [3]             LDA   9,X
  0063 c70000   [4]             STA   _CANIDAR5
  773:    CANIDAR6 = f->idar[6];
  0066 e60a     [3]             LDA   10,X
  0068 c70000   [4]             STA   _CANIDAR6
  774:    CANIDAR7 = f->idar[7];
  006b e60b     [3]             LDA   11,X
  006d c70000   [4]             STA   _CANIDAR7
  775:    
  776:    CANIDMR0 = f->idmr[0];
  0070 e60c     [3]             LDA   12,X
  0072 c70000   [4]             STA   _CANIDMR0
  777:    CANIDMR1 = f->idmr[1];
  0075 e60d     [3]             LDA   13,X
  0077 c70000   [4]             STA   _CANIDMR1
  778:    CANIDMR2 = f->idmr[2];
  007a e60e     [3]             LDA   14,X
  007c c70000   [4]             STA   _CANIDMR2
  779:    CANIDMR3 = f->idmr[3];
  007f e60f     [3]             LDA   15,X
  0081 c70000   [4]             STA   _CANIDMR3
  780:    CANIDMR4 = f->idmr[4];
  0084 e610     [3]             LDA   16,X
  0086 c70000   [4]             STA   _CANIDMR4
  781:    CANIDMR5 = f->idmr[5];
  0089 e611     [3]             LDA   17,X
  008b c70000   [4]             STA   _CANIDMR5
  782:    CANIDMR6 = f->idmr[6];
  008e e612     [3]             LDA   18,X
  0090 c70000   [4]             STA   _CANIDMR6
  783:    CANIDMR7 = f->idmr[7];
  0093 e613     [3]             LDA   19,X
  0095 c70000   [4]             STA   _CANIDMR7
  784:  
  785:    /* CANCTL0: INITRQ=0 */
  786:    CANCTL0_INITRQ = 0;
  0098 450000   [3]             LDHX  @_CANCTL0
  009b f6       [3]             LDA   ,X
  009c a4fe     [2]             AND   #-2
  009e f7       [2]             STA   ,X
  787:    while(CANCTL1_INITAK) {              /* Wait for init exit */
  009f 65       [3]             SKIP2 LA2 ;abs = 00a2
  00a0          LA0:    
  00a0 ad1c     [5]             BSR   LBE ;abs = 00be
  00a2          LA2:    
  00a2 c60000   [4]             LDA   _CANCTL1
  00a5 a501     [2]             BIT   #1
  00a7 26f7     [3]             BNE   LA0 ;abs = 00a0
  788:     SRS = 0x55;                         /* Reset watchdog counter write 55, AA */
  789:     SRS = 0xAA;
  790:    }
  791:  
  792:    /* CANCTL0: RXFRM=0,RXACT=0,CSWAI=0,SYNCH=0,TIME=0,WUPE=0,SLPRQ=0,INITRQ=0 */
  793:    CANCTL0 = 0x00;                                      
  00a9 4f       [1]             CLRA  
  00aa c70000   [4]             STA   _CANCTL0
  794:    /* CANRIER: WUPIE=0,CSCIE=0,RSTATE1=0,RSTATE0=0,TSTATE1=0,TSTATE0=0,OVRIE=0,RXFIE=0 */
  795:    CANRIER = 0x00;                                      
  00ad 450000   [3]             LDHX  @_CANRIER
  00b0 f7       [2]             STA   ,X
  796:    /* CANTIER: TXEIE2=0,TXEIE1=0,TXEIE0=0 */
  797:    CANTIER = 0x00;                                      
  00b1 c70000   [4]             STA   _CANTIER
  798:  
  799:    /* enable can rx interrupt */
  800:    CANRIER_RXFIE = 1;
  00b4 f6       [3]             LDA   ,X
  00b5 aa01     [2]             ORA   #1
  00b7 f7       [2]             STA   ,X
  801:  
  802:    return 1;
  00b8 ae01     [2]             LDX   #1
  00ba 8c       [1]             CLRH  
  803:  }
  00bb a702     [2]             AIS   #2
  00bd 81       [6]             RTS   
  00be          LBE:    
  00be a655     [2]             LDA   #85
  00c0 450000   [3]             LDHX  @_SRS
  00c3 f7       [2]             STA   ,X
  00c4 48       [1]             LSLA  
  00c5 f7       [2]             STA   ,X
  00c6 81       [6]             RTS   
  804:  
  805:  int  mscan_reset(void){

Function: mscan_reset
Source  : C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\06 Platform\mcu.c
Options : -AddIncl../preinc.h -Cs08 -D__NO_FLOAT__ -Env"GENPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\src;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\lib;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\src;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\06 Platform;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\04 Modules;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\Sources;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\07 Application;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\05 Devices;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"LIBPATH=D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"OBJPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin" -Env"TEXTPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin" -Lasm=%n.lst -Ms -ObjN="C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\mc9s08dz60_Data\Standard\ObjectCode\mcu.c.o" -WmsgSd1106

  806:  
  807:    /* disable interrupts */
  808:    /* CANRIER: WUPIE=0,CSCIE=0,RSTATE1=0,RSTATE0=0,TSTATE1=0,TSTATE0=0,OVRIE=0,RXFIE=0 */
  809:    CANRIER = 0x00;                                      
  0000 4f       [1]             CLRA  
  0001 c70000   [4]             STA   _CANRIER
  810:    /* CANTIER: TXEIE2=0,TXEIE1=0,TXEIE0=0 */
  811:    CANTIER = 0x00;                                      
  0004 c70000   [4]             STA   _CANTIER
  812:    
  813:    CANCTL1_CANE = 0; /* write once in normal */
  0007 450000   [3]             LDHX  @_CANCTL1
  000a f6       [3]             LDA   ,X
  000b a47f     [2]             AND   #127
  000d f7       [2]             STA   ,X
  814:  
  815:    return 1;
  000e ae01     [2]             LDX   #1
  0010 8c       [1]             CLRH  
  816:  }
  0011 81       [6]             RTS   
  817:  
  818:  int  mscan_xmit(mscan_txframe_t* f){

Function: mscan_xmit
Source  : C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\06 Platform\mcu.c
Options : -AddIncl../preinc.h -Cs08 -D__NO_FLOAT__ -Env"GENPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\src;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\lib;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\src;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\06 Platform;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\04 Modules;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\Sources;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\07 Application;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\05 Devices;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"LIBPATH=D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"OBJPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin" -Env"TEXTPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin" -Lasm=%n.lst -Ms -ObjN="C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\mc9s08dz60_Data\Standard\ObjectCode\mcu.c.o" -WmsgSd1106

  0000 89       [2]             PSHX  
  0001 8b       [2]             PSHH  
  0002 8b       [2]             PSHH  
  819:  
  820:    unsigned char tbsel;
  821:  
  822:    /* select transmit buffer */
  823:    CANTBSEL = CANTFLG; /* LOAD CANTFLG, WRITE TO CANTBSEL */
  0003 c60000   [4]             LDA   _CANTFLG
  0006 450000   [3]             LDHX  @_CANTBSEL
  0009 f7       [2]             STA   ,X
  824:    tbsel = CANTBSEL;   /* read CANTBSEL */
  000a f6       [3]             LDA   ,X
  000b 95       [2]             TSX   
  000c f7       [2]             STA   ,X
  825:  
  826:    /* no xmit buffer */
  827:    if( tbsel==0 ) return -1;
  000d 2605     [3]             BNE   L14 ;abs = 0014
  000f 45ffff   [3]             LDHX  #-1
  0012 2013     [3]             BRA   L27 ;abs = 0027
  0014          L14:    
  828:  
  829:    /* copy buffer */
  830:    mscan_txframe = *f;
  0014 450000   [3]             LDHX  @mscan_txframe
  0017 89       [2]             PSHX  
  0018 8b       [2]             PSHH  
  0019 9efe04   [5]             LDHX  4,SP
  001c a60e     [2]             LDA   #14
  001e cd0000   [6]             JSR   _COPY
  831:  
  832:    /* start transmit */
  833:    CANTFLG = tbsel;
  0021 95       [2]             TSX   
  0022 fe       [3]             LDX   ,X
  0023 cf0000   [4]             STX   _CANTFLG
  834:  
  835:    /* ok */
  836:    return tbsel;
  0026 8c       [1]             CLRH  
  0027          L27:    
  837:  
  838:  }
  0027 a703     [2]             AIS   #3
  0029 81       [6]             RTS   
  839:  
  840:  interrupt void mscan_rx_isr(void){

Function: mscan_rx_isr
Source  : C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\06 Platform\mcu.c
Options : -AddIncl../preinc.h -Cs08 -D__NO_FLOAT__ -Env"GENPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\src;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\lib;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\src;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\06 Platform;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\04 Modules;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\Sources;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\07 Application;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\05 Devices;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"LIBPATH=D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"OBJPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin" -Env"TEXTPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin" -Lasm=%n.lst -Ms -ObjN="C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\mc9s08dz60_Data\Standard\ObjectCode\mcu.c.o" -WmsgSd1106

  0000 8b       [2]             PSHH  
  841:    /* begin */
  842:    LED_ISR_MSCAN_RX = LED_ON;
  0001 1b00     [5]             BCLR  5,_PTDD
  843:  
  844:    /* mscan rx call back */
  845:    (void)mscan_rxcb(&mscan_rxframe);
  0003 450000   [3]             LDHX  @mscan_rxframe
  0006 cd0000   [6]             JSR   mscan_rxcb
  846:  
  847:    /* reset rx flag for next frame */
  848:    CANRFLG_RXF = 1;
  0009 450000   [3]             LDHX  @_CANRFLG
  000c f6       [3]             LDA   ,X
  000d aa01     [2]             ORA   #1
  000f f7       [2]             STA   ,X
  849:  
  850:    /* end */
  851:    LED_ISR_MSCAN_RX = LED_OFF;
  0010 1a00     [5]             BSET  5,_PTDD
  852:  }
  0012 8a       [3]             PULH  
  0013 80       [9]             RTI   
  853:  
  854:  int  spi_init(void){

Function: spi_init
Source  : C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\06 Platform\mcu.c
Options : -AddIncl../preinc.h -Cs08 -D__NO_FLOAT__ -Env"GENPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\src;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\lib;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\src;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\06 Platform;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\04 Modules;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\Sources;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\07 Application;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\05 Devices;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"LIBPATH=D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"OBJPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin" -Env"TEXTPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin" -Lasm=%n.lst -Ms -ObjN="C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\mc9s08dz60_Data\Standard\ObjectCode\mcu.c.o" -WmsgSd1106

  855:    // 250kbps
  856:     /* ### Init_SPI init code */
  857:    /* SPIC1: SPIE=0,SPE=0,SPTIE=0,MSTR=0,CPOL=0,CPHA=0,SSOE=0,LSBFE=0 */
  858:    SPIC1 = 0x00;                        /* The SPRF interrupt flag is cleared when the SPI module is disabled. */
  0000 3f00     [5]             CLR   _SPIC1
  859:    /* SPIC2: MODFEN=0,BIDIROE=0,SPISWAI=0,SPC0=0 */
  860:    SPIC2 = 0x00;                                      
  0002 3f00     [5]             CLR   _SPIC2
  861:    /* SPIBR: SPPR2=0,SPPR1=1,SPPR0=1,SPR2=0,SPR1=1,SPR0=1 */
  862:    SPIBR = 0x33;                                      
  0004 6e3300   [4]             MOV   #51,_SPIBR
  863:    (void)(SPIS == 0);                   /* Dummy read of the SPIS registr to clear the MODF flag */
  0007 b600     [3]             LDA   _SPIS
  864:    /* SPIC1: SPIE=0,SPE=1,SPTIE=0,MSTR=1,CPOL=1,CPHA=1,SSOE=0,LSBFE=0 */
  865:    SPIC1 = 0x5C;                                        
  0009 6e5c00   [4]             MOV   #92,_SPIC1
  866:  
  867:    return 1;
  000c ae01     [2]             LDX   #1
  000e 8c       [1]             CLRH  
  868:  }
  000f 81       [6]             RTS   
  869:  
  870:  int  spi_xfer(xfer_t* x){

Function: spi_xfer
Source  : C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\06 Platform\mcu.c
Options : -AddIncl../preinc.h -Cs08 -D__NO_FLOAT__ -Env"GENPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\src;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\lib;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\src;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\06 Platform;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\04 Modules;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\Sources;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\07 Application;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\05 Devices;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"LIBPATH=D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"OBJPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin" -Env"TEXTPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin" -Lasm=%n.lst -Ms -ObjN="C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\mc9s08dz60_Data\Standard\ObjectCode\mcu.c.o" -WmsgSd1106

  0000 89       [2]             PSHX  
  0001 8b       [2]             PSHH  
  0002 a7fd     [2]             AIS   #-3
  871:    unsigned short i;
  872:    unsigned char spid;
  873:  
  874:    /* feed watch dog */
  875:    feed_watch_dog();
  0004 cd0000   [6]             JSR   feed_watch_dog
  876:  
  877:    SPI_PRINTF("SPI TX: ");
  0007 450000   [3]             LDHX  @"SPI TX: "
  000a 89       [2]             PSHX  
  000b 8b       [2]             PSHH  
  000c cd0000   [6]             JSR   empty_printf
  000f a702     [2]             AIS   #2
  878:  
  879:    /* tx */
  880:    for(i=0;i<x->txcnt;i++){
  0011 95       [2]             TSX   
  0012 6f02     [5]             CLR   2,X
  0014 6f01     [5]             CLR   1,X
  0016 2042     [3]             BRA   L5A ;abs = 005a
  0018          L18:    
  881:      /* send data */
  882:      SPI_PRINTF("%02X ", x->txbuf[i]);
  0018 9efe04   [5]             LDHX  4,SP
  001b e602     [3]             LDA   2,X
  001d 9eeb03   [4]             ADD   3,SP
  0020 9ee701   [4]             STA   1,SP
  0023 9ee602   [4]             LDA   2,SP
  0026 e901     [3]             ADC   1,X
  0028 87       [2]             PSHA  
  0029 95       [2]             TSX   
  002a ee01     [3]             LDX   1,X
  002c 8a       [3]             PULH  
  002d f6       [3]             LDA   ,X
  002e 87       [2]             PSHA  
  002f 4f       [1]             CLRA  
  0030 87       [2]             PSHA  
  0031 450000   [3]             LDHX  @"%02X "
  0034 89       [2]             PSHX  
  0035 8b       [2]             PSHH  
  0036 cd0000   [6]             JSR   empty_printf
  0039 a704     [2]             AIS   #4
  883:      SPID = x->txbuf[i];
  003b 9efe04   [5]             LDHX  4,SP
  003e e602     [3]             LDA   2,X
  0040 9eeb03   [4]             ADD   3,SP
  0043 87       [2]             PSHA  
  0044 9ee603   [4]             LDA   3,SP
  0047 e901     [3]             ADC   1,X
  0049 87       [2]             PSHA  
  004a 8a       [3]             PULH  
  004b 88       [3]             PULX  
  004c 7e00     [5]             MOV   X+,_SPID
  004e          L4E:    
  884:      /* wait done */
  885:      while( SPIS_SPRF==0 );    
  004e 0f00fd   [5]             BRCLR 7,_SPIS,L4E ;abs = 004e
  886:      spid = SPID;  /* read spid to clear sprf */
  0051 b600     [3]             LDA   _SPID
  0053 95       [2]             TSX   
  0054 6c02     [5]             INC   2,X
  0056 2602     [3]             BNE   L5A ;abs = 005a
  0058 6c01     [5]             INC   1,X
  005a          L5A:    
  005a 9efe04   [5]             LDHX  4,SP
  005d 9ece05   [5]             LDHX  5,X
  0060 9ef302   [6]             CPHX  2,SP
  0063 22b3     [3]             BHI   L18 ;abs = 0018
  887:    }
  888:  
  889:    SPI_PRINTF(", RX: ");
  0065 450000   [3]             LDHX  @", RX: "
  0068 89       [2]             PSHX  
  0069 8b       [2]             PSHH  
  006a cd0000   [6]             JSR   empty_printf
  006d a702     [2]             AIS   #2
  890:  
  891:    /* rx */
  892:    for(i=0;i<x->rxmax;i++){
  006f 95       [2]             TSX   
  0070 6f02     [5]             CLR   2,X
  0072 6f01     [5]             CLR   1,X
  0074 2046     [3]             BRA   LBC ;abs = 00bc
  0076          L76:    
  893:      /* send data */
  894:      SPID = SPID_DUMMY;
  0076 6ecd00   [4]             MOV   #-51,_SPID
  0079          L79:    
  895:      /* wait done */
  896:      while( SPIS_SPRF==0 );    
  0079 0f00fd   [5]             BRCLR 7,_SPIS,L79 ;abs = 0079
  897:      spid = SPID;  /* read spid to clear sprf */
  007c b600     [3]             LDA   _SPID
  898:      /* save data */
  899:      x->rxbuf[i] = spid;
  007e 9efe04   [5]             LDHX  4,SP
  0081 87       [2]             PSHA  
  0082 e604     [3]             LDA   4,X
  0084 9eeb04   [4]             ADD   4,SP
  0087 87       [2]             PSHA  
  0088 9ee604   [4]             LDA   4,SP
  008b e903     [3]             ADC   3,X
  008d 87       [2]             PSHA  
  008e 8a       [3]             PULH  
  008f 88       [3]             PULX  
  0090 86       [3]             PULA  
  0091 f7       [2]             STA   ,X
  900:      SPI_PRINTF("%02X ", x->rxbuf[i]);
  0092 9efe04   [5]             LDHX  4,SP
  0095 e604     [3]             LDA   4,X
  0097 9eeb03   [4]             ADD   3,SP
  009a 9ee701   [4]             STA   1,SP
  009d 9ee602   [4]             LDA   2,SP
  00a0 e903     [3]             ADC   3,X
  00a2 87       [2]             PSHA  
  00a3 95       [2]             TSX   
  00a4 ee01     [3]             LDX   1,X
  00a6 8a       [3]             PULH  
  00a7 fe       [3]             LDX   ,X
  00a8 89       [2]             PSHX  
  00a9 4f       [1]             CLRA  
  00aa 87       [2]             PSHA  
  00ab 450000   [3]             LDHX  @"%02X "
  00ae 89       [2]             PSHX  
  00af 8b       [2]             PSHH  
  00b0 cd0000   [6]             JSR   empty_printf
  00b3 a704     [2]             AIS   #4
  00b5 95       [2]             TSX   
  00b6 6c02     [5]             INC   2,X
  00b8 2602     [3]             BNE   LBC ;abs = 00bc
  00ba 6c01     [5]             INC   1,X
  00bc          LBC:    
  00bc 9efe04   [5]             LDHX  4,SP
  00bf 9ece07   [5]             LDHX  7,X
  00c2 9ef302   [6]             CPHX  2,SP
  00c5 22af     [3]             BHI   L76 ;abs = 0076
  901:    }
  902:    
  903:    SPI_PRINTF("\r\n");
  00c7 450000   [3]             LDHX  @"\015\012"
  00ca 89       [2]             PSHX  
  00cb 8b       [2]             PSHH  
  00cc cd0000   [6]             JSR   empty_printf
  00cf a702     [2]             AIS   #2
  904:  
  905:    return 1;
  00d1 ae01     [2]             LDX   #1
  00d3 8c       [1]             CLRH  
  906:  }
  00d4 a705     [2]             AIS   #5
  00d6 81       [6]             RTS   
  907:  
  908:  int  spi_reset(void){

Function: spi_reset
Source  : C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\06 Platform\mcu.c
Options : -AddIncl../preinc.h -Cs08 -D__NO_FLOAT__ -Env"GENPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\src;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\lib;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\src;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\06 Platform;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\04 Modules;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\Sources;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\07 Application;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\05 Devices;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"LIBPATH=D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"OBJPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin" -Env"TEXTPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin" -Lasm=%n.lst -Ms -ObjN="C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\mc9s08dz60_Data\Standard\ObjectCode\mcu.c.o" -WmsgSd1106

  909:    SPIC1 = 0x00;
  0000 3f00     [5]             CLR   _SPIC1
  910:    SPIC2 = 0x00;
  0002 3f00     [5]             CLR   _SPIC2
  911:    SPIBR = 0x00;
  0004 3f00     [5]             CLR   _SPIBR
  912:    return 1;
  0006 ae01     [2]             LDX   #1
  0008 8c       [1]             CLRH  
  913:  }
  0009 81       [6]             RTS   
  914:  
  915:  int  adc_init(void){

Function: adc_init
Source  : C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\06 Platform\mcu.c
Options : -AddIncl../preinc.h -Cs08 -D__NO_FLOAT__ -Env"GENPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\src;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\lib;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\src;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\06 Platform;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\04 Modules;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\Sources;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\07 Application;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\05 Devices;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"LIBPATH=D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"OBJPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin" -Env"TEXTPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin" -Lasm=%n.lst -Ms -ObjN="C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\mc9s08dz60_Data\Standard\ObjectCode\mcu.c.o" -WmsgSd1106

  916:    /* ### Init_ADC init code */
  917:    /* SOPT2: ADHTS=0 */
  918:    SOPT2 &= (unsigned char)~0x10;       /* Select the RTC as the source of internal HW trigger */
  0000 450000   [3]             LDHX  @_SOPT2
  0003 f6       [3]             LDA   ,X
  0004 a4ef     [2]             AND   #-17
  0006 f7       [2]             STA   ,X
  919:    /* ADCCFG: ADLPC=0,ADIV1=1,ADIV0=1,ADLSMP=1,MODE1=0,MODE0=1,ADICLK1=0,ADICLK0=0 */
  920:    ADCCFG = 0x74;                                      
  0007 6e7400   [4]             MOV   #116,_ADCCFG
  921:    /* ADCCV: ADCV11=0,ADCV10=0,ADCV9=0,ADCV8=0,ADCV7=0,ADCV6=0,ADCV5=0,ADCV4=0,ADCV3=0,ADCV2=0,ADCV1=0,ADCV0=0 */
  922:    ADCCV = 0x00U;                            
  000a 5f       [1]             CLRX  
  000b 8c       [1]             CLRH  
  000c 3500     [5]             STHX  _ADCCV
  923:    /* ADCSC2: ADACT=0,ADTRG=0,ACFE=0,ACFGT=0 */
  924:    ADCSC2 = 0x00;                                      
  000e 3f00     [5]             CLR   _ADCSC2
  925:    /* ADCSC1: COCO=0,AIEN=0,ADCO=1,ADCH4=1,ADCH3=1,ADCH2=1,ADCH1=1,ADCH0=1 */
  926:    ADCSC1 = 0x3F;                                      
  0010 6e3f00   [4]             MOV   #63,_ADCSC1
  927:  
  928:    /*  An ADC channel is configured only before start convertion   */
  929:    APCTL1  = 0x00;
  0013 3f00     [5]             CLR   _APCTL1
  930:    APCTL2  = 0x00;
  0015 3f00     [5]             CLR   _APCTL2
  931:    APCTL3  = 0x00;
  0017 3f00     [5]             CLR   _APCTL3
  932:  
  933:    return 1;
  0019 5c       [1]             INCX  
  934:  }
  001a 81       [6]             RTS   
  935:  
  936:  int  adc_conv(unsigned char ch, int delay, int count){

Function: adc_conv
Source  : C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\06 Platform\mcu.c
Options : -AddIncl../preinc.h -Cs08 -D__NO_FLOAT__ -Env"GENPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\src;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\lib;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\src;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\06 Platform;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\04 Modules;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\Sources;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\07 Application;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\05 Devices;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"LIBPATH=D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"OBJPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin" -Env"TEXTPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin" -Lasm=%n.lst -Ms -ObjN="C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\mc9s08dz60_Data\Standard\ObjectCode\mcu.c.o" -WmsgSd1106

  0000 89       [2]             PSHX  
  0001 8b       [2]             PSHH  
  0002 a7ee     [2]             AIS   #-18
  937:  
  938:    unsigned short diff, ave;
  939:  
  940:    /* check ch */
  941:    if( ch==24 || ch==25 || ch==28 || ch>30 ){
  0004 95       [2]             TSX   
  0005 e618     [3]             LDA   24,X
  0007 41180a   [4]             CBEQA #24,L14 ;abs = 0014
  000a 411907   [4]             CBEQA #25,L14 ;abs = 0014
  000d 411c04   [4]             CBEQA #28,L14 ;abs = 0014
  0010 a11e     [2]             CMP   #30
  0012 2317     [3]             BLS   L2B ;abs = 002b
  0014          L14:    
  942:      PERRNO(ERRNO_INVALID_PARAMETERS,ch);
  0014 ae01     [2]             LDX   #1
  0016 8c       [1]             CLRH  
  0017 89       [2]             PSHX  
  0018 8b       [2]             PSHH  
  0019 ae62     [2]             LDX   #98
  001b 89       [2]             PSHX  
  001c 8b       [2]             PSHH  
  001d 450000   [3]             LDHX  @"C:\Users\Administrator\Desktop\Fms\FMS\\260\302\314\25110V3T\06 Platform\mcu.c"
  0020 89       [2]             PSHX  
  0021 8b       [2]             PSHH  
  0022 4503ae   [3]             LDHX  #942
  0025 89       [2]             PSHX  
  0026 8b       [2]             PSHH  
  0027 97       [1]             TAX   
  0028 8c       [1]             CLRH  
  943:      return ERR;
  0029 2022     [3]             BRA   L4D ;abs = 004d
  002b          L2B:    
  944:    }
  945:  
  946:    /* check delay */
  947:    if( delay<0 || delay>1024 ){
  002b 6d16     [4]             TST   22,X
  002d 9108     [3]             BLT   L37 ;abs = 0037
  002f 9efe17   [5]             LDHX  23,SP
  0032 650400   [3]             CPHX  #1024
  0035 9321     [3]             BLE   L58 ;abs = 0058
  0037          L37:    
  948:      PERRNO(ERRNO_INVALID_PARAMETERS,delay);
  0037 ae01     [2]             LDX   #1
  0039 8c       [1]             CLRH  
  003a 89       [2]             PSHX  
  003b 8b       [2]             PSHH  
  003c ae62     [2]             LDX   #98
  003e 89       [2]             PSHX  
  003f 8b       [2]             PSHH  
  0040 450000   [3]             LDHX  @"C:\Users\Administrator\Desktop\Fms\FMS\\260\302\314\25110V3T\06 Platform\mcu.c"
  0043 89       [2]             PSHX  
  0044 8b       [2]             PSHH  
  0045 4503b4   [3]             LDHX  #948
  0048 89       [2]             PSHX  
  0049 8b       [2]             PSHH  
  004a 9efe1f   [5]             LDHX  31,SP
  004d          L4D:    
  004d cd0000   [6]             JSR   perrno
  0050 a708     [2]             AIS   #8
  949:      return ERR;
  0052 45fffd   [3]             LDHX  #-3
  0055 cc019d   [4]             JMP   L19D ;abs = 019d
  0058          L58:    
  950:    }
  951:  
  952:    /* check count */
  953:    if( count<=0 ) count = 1;
  0058 9efe13   [5]             LDHX  19,SP
  005b 9206     [3]             BGT   L63 ;abs = 0063
  005d ae01     [2]             LDX   #1
  005f 8c       [1]             CLRH  
  0060 9eff13   [5]             STHX  19,SP
  0063          L63:    
  954:  
  955:    /* close all io pin channels */
  956:    APCTL1  = 0x00;
  0063 3f00     [5]             CLR   _APCTL1
  957:    APCTL2  = 0x00;
  0065 3f00     [5]             CLR   _APCTL2
  958:    APCTL3  = 0x00;
  0067 3f00     [5]             CLR   _APCTL3
  959:  
  960:    /* open adc channel */
  961:    {
  962:      unsigned char mask;
  963:      mask = 0x01;
  964:      mask <<= (ch & 0x07);
  0069 a407     [2]             AND   #7
  006b 97       [1]             TAX   
  006c a601     [2]             LDA   #1
  006e 5d       [1]             TSTX  
  006f 2703     [3]             BEQ   L74 ;abs = 0074
  0071          L71:    
  0071 48       [1]             LSLA  
  0072 5bfd     [4]             DBNZX L71 ;abs = 0071
  0074          L74:    
  0074 95       [2]             TSX   
  0075 e70d     [3]             STA   13,X
  965:      /* PTA,B,C */
  966:      if( ch<8 ) APCTL1 |= mask;
  0077 e618     [3]             LDA   24,X
  0079 a108     [2]             CMP   #8
  007b 2408     [3]             BCC   L85 ;abs = 0085
  007d b600     [3]             LDA   _APCTL1
  007f ea0d     [3]             ORA   13,X
  0081 b700     [3]             STA   _APCTL1
  0083 2016     [3]             BRA   L9B ;abs = 009b
  0085          L85:    
  967:      else if( ch<16 ) APCTL2 |= mask;
  0085 a110     [2]             CMP   #16
  0087 2408     [3]             BCC   L91 ;abs = 0091
  0089 b600     [3]             LDA   _APCTL2
  008b ea0d     [3]             ORA   13,X
  008d b700     [3]             STA   _APCTL2
  008f 200a     [3]             BRA   L9B ;abs = 009b
  0091          L91:    
  968:      else if( ch<24 ) APCTL3 |= mask;
  0091 a118     [2]             CMP   #24
  0093 2406     [3]             BCC   L9B ;abs = 009b
  0095 b600     [3]             LDA   _APCTL3
  0097 ea0d     [3]             ORA   13,X
  0099 b700     [3]             STA   _APCTL3
  009b          L9B:    
  969:    }
  970:  
  971:    /* delay until stable */
  972:    delay_ms(delay);
  009b 9efe17   [5]             LDHX  23,SP
  009e cd0000   [6]             JSR   delay_ms
  973:  
  974:    /* do adc */
  975:    {
  976:      int i;
  977:      unsigned short max, min;
  978:      unsigned long sum;
  979:      max = 0;
  00a1 95       [2]             TSX   
  00a2 6f08     [5]             CLR   8,X
  00a4 6f07     [5]             CLR   7,X
  980:      min = 0xffff;
  00a6 45ffff   [3]             LDHX  #-1
  00a9 9eff0a   [5]             STHX  10,SP
  981:      sum = 0;
  00ac 5f       [1]             CLRX  
  00ad 8c       [1]             CLRH  
  00ae 9eff06   [5]             STHX  6,SP
  00b1 9eff04   [5]             STHX  4,SP
  982:      /* incase reset */
  983:      feed_watch_dog();
  00b4 cd0000   [6]             JSR   feed_watch_dog
  984:      /* start adc */
  985:      ADCSC1 = 0x20|ch;
  00b7 95       [2]             TSX   
  00b8 e618     [3]             LDA   24,X
  00ba aa20     [2]             ORA   #32
  00bc b700     [3]             STA   _ADCSC1
  986:      /* adc many times */
  987:      for(i=0;i<count;i++){
  00be 6f0c     [5]             CLR   12,X
  00c0 6f0b     [5]             CLR   11,X
  00c2 2045     [3]             BRA   L109 ;abs = 0109
  00c4          LC4:    
  988:        unsigned short adc;
  989:  
  990:        /* wait done */
  991:        while( ADCSC1_COCO==0 ) feed_watch_dog();
  00c4 cd0000   [6]             JSR   feed_watch_dog
  00c7          LC7:    
  00c7 0f00fa   [5]             BRCLR 7,_ADCSC1,LC4 ;abs = 00c4
  992:  
  993:        /* save result and start next */
  994:        adc = ADCR;      
  00ca 5500     [4]             LDHX  _ADCR
  00cc 9eff0f   [5]             STHX  15,SP
  995:  
  996:        /* statistics */
  997:        sum += adc;
  00cf 9eff02   [5]             STHX  2,SP
  00d2 4f       [1]             CLRA  
  00d3 89       [2]             PSHX  
  00d4 8b       [2]             PSHH  
  00d5 87       [2]             PSHA  
  00d6 87       [2]             PSHA  
  00d7 95       [2]             TSX   
  00d8 89       [2]             PSHX  
  00d9 8b       [2]             PSHH  
  00da af07     [2]             AIX   #7
  00dc 89       [2]             PSHX  
  00dd 8b       [2]             PSHH  
  00de 9efe03   [5]             LDHX  3,SP
  00e1 cd0000   [6]             JSR   _LADD
  00e4 95       [2]             TSX   
  00e5 af0d     [2]             AIX   #13
  00e7 cd0000   [6]             JSR   _POP32
  998:        if( max < adc ) max = adc;
  00ea 9efe08   [5]             LDHX  8,SP
  00ed 9ef30e   [6]             CPHX  14,SP
  00f0 a706     [2]             AIS   #6
  00f2 2303     [3]             BLS   LF7 ;abs = 00f7
  00f4 9eff08   [5]             STHX  8,SP
  00f7          LF7:    
  999:        if( min > adc ) min = adc;
  00f7 9efe0f   [5]             LDHX  15,SP
  00fa 9ef30a   [6]             CPHX  10,SP
  00fd 2403     [3]             BCC   L102 ;abs = 0102
  00ff 9eff0a   [5]             STHX  10,SP
  0102          L102:   
  0102 95       [2]             TSX   
  0103 6c0c     [5]             INC   12,X
  0105 2602     [3]             BNE   L109 ;abs = 0109
  0107 6c0b     [5]             INC   11,X
  0109          L109:   
  0109 9efe13   [5]             LDHX  19,SP
  010c 9ef30c   [6]             CPHX  12,SP
  010f 92b6     [3]             BGT   LC7 ;abs = 00c7
 1000:  
 1001:      }
 1002:      /* stop adc */
 1003:      ADCSC1 = 0x00|0x1F;
  0111 6e1f00   [4]             MOV   #31,_ADCSC1
 1004:      /* final calc */           
 1005:      sum += (count+1)/2;
  0114 af01     [2]             AIX   #1
  0116 89       [2]             PSHX  
  0117 8b       [2]             PSHH  
  0118 ae02     [2]             LDX   #2
  011a 8c       [1]             CLRH  
  011b cd0000   [6]             JSR   _IDIVS_STAR08
  011e a702     [2]             AIS   #2
  0120 9f       [1]             TXA   
  0121 8b       [2]             PSHH  
  0122 88       [3]             PULX  
  0123 87       [2]             PSHA  
  0124 cd0000   [6]             JSR   _SEXT16_32
  0127 95       [2]             TSX   
  0128 af07     [2]             AIX   #7
  012a 89       [2]             PSHX  
  012b 8b       [2]             PSHH  
  012c aff9     [2]             AIX   #-7
  012e cd0000   [6]             JSR   _LADD
  0131 af07     [2]             AIX   #7
  0133 cd0000   [6]             JSR   _POP32
 1006:      ave = (unsigned short)(sum/count);
  0136 9efe17   [5]             LDHX  23,SP
  0139 9f       [1]             TXA   
  013a 8b       [2]             PSHH  
  013b 88       [3]             PULX  
  013c 87       [2]             PSHA  
  013d 87       [2]             PSHA  
  013e cd0000   [6]             JSR   _SEXT16_32
  0141 95       [2]             TSX   
  0142 89       [2]             PSHX  
  0143 8b       [2]             PSHH  
  0144 af0c     [2]             AIX   #12
  0146 cd0000   [6]             JSR   _LDIVU
  0149 95       [2]             TSX   
  014a e602     [3]             LDA   2,X
  014c 87       [2]             PSHA  
  014d ee03     [3]             LDX   3,X
  014f 8a       [3]             PULH  
  0150 9eff1e   [5]             STHX  30,SP
 1007:      diff = max - min;
  0153 95       [2]             TSX   
  0154 e615     [3]             LDA   21,X
  0156 e017     [3]             SUB   23,X
  0158 87       [2]             PSHA  
  0159 e614     [3]             LDA   20,X
  015b e216     [3]             SBC   22,X
 1008:    }
 1009:    
 1010:    /* close adc channel */
 1011:    APCTL1  = 0x00;
  015d 3f00     [5]             CLR   _APCTL1
 1012:    APCTL2  = 0x00;
  015f 3f00     [5]             CLR   _APCTL2
 1013:    APCTL3  = 0x00;
  0161 3f00     [5]             CLR   _APCTL3
 1014:    
 1015:    /* out */
 1016:    {
 1017:      ADC_PRINTF("adc ch%d %dms %d : ", ch, delay, count);
  0163 ee08     [3]             LDX   8,X
  0165 89       [2]             PSHX  
  0166 95       [2]             TSX   
  0167 ee21     [3]             LDX   33,X
  0169 89       [2]             PSHX  
  016a 9efe27   [5]             LDHX  39,SP
  016d 89       [2]             PSHX  
  016e 8b       [2]             PSHH  
  016f 95       [2]             TSX   
  0170 ee2a     [3]             LDX   42,X
  0172 89       [2]             PSHX  
  0173 5f       [1]             CLRX  
  0174 89       [2]             PSHX  
  0175 450000   [3]             LDHX  @"adc ch%d %dms %d : "
  0178 89       [2]             PSHX  
  0179 8b       [2]             PSHH  
  017a 95       [2]             TSX   
  017b e716     [3]             STA   22,X
  017d cd0000   [6]             JSR   empty_printf
  0180 a708     [2]             AIS   #8
 1018:      ADC_PRINTF("%u,%d\r\n",ave,(int)(diff));
  0182 95       [2]             TSX   
  0183 e60e     [3]             LDA   14,X
  0185 87       [2]             PSHA  
  0186 9efe20   [5]             LDHX  32,SP
  0189 89       [2]             PSHX  
  018a 8b       [2]             PSHH  
  018b 9eff13   [5]             STHX  19,SP
  018e 450000   [3]             LDHX  @"%u,%d\015\012"
  0191 89       [2]             PSHX  
  0192 8b       [2]             PSHH  
  0193 cd0000   [6]             JSR   empty_printf
  0196 a706     [2]             AIS   #6
 1019:    }
 1020:  
 1021:    return ave;
  0198 9efe0f   [5]             LDHX  15,SP
  019b a70d     [2]             AIS   #13
  019d          L19D:   
 1022:  
 1023:  }
  019d a714     [2]             AIS   #20
  019f 81       [6]             RTS   
 1024:  
 1025:  int  adc_reset(void){

Function: adc_reset
Source  : C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\06 Platform\mcu.c
Options : -AddIncl../preinc.h -Cs08 -D__NO_FLOAT__ -Env"GENPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\src;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\lib;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\src;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\06 Platform;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\04 Modules;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\Sources;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\07 Application;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\05 Devices;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"LIBPATH=D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"OBJPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin" -Env"TEXTPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin" -Lasm=%n.lst -Ms -ObjN="C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\mc9s08dz60_Data\Standard\ObjectCode\mcu.c.o" -WmsgSd1106

 1026:    return 1;
  0000 ae01     [2]             LDX   #1
  0002 8c       [1]             CLRH  
 1027:  }
  0003 81       [6]             RTS   
 1028:  
 1029:  
