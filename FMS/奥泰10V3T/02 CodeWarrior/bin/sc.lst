ANSI-C/cC++ Compiler for HC08 V-5.0.32 Build 9279, Oct  7 2009

    1:  /**
    2:    *****************************************************************************
    3:    * proj    BMU_HM
    4:    * file    sc.c
    5:    * ver     1.0
    6:    * brief   系统配置
    7:    -----------------------------------------------------------------------------
    8:    * 2012.02 created by taoyu@bakai.com
    9:    */ 
   10:  
   11:  /* File Id ------------------------------------------------------------------*/
   12:  /* 源文件标识 ---------------------------------------------------------------*/
   13:  #define _SC_C_  0x7A
   14:  #define FILE_No _SC_C_
   15:  
   16:  /* Includes -----------------------------------------------------------------*/
   17:  /* 本源文件涉及的头文件 -----------------------------------------------------*/
   18:  
   19:  #include  "sc.h"  /* 强制引用与本源文件对应的头文件 */
   20:  #include  "at24c.h"
   21:  #include  "mcu.h"
   22:  #include  "ntc.h"
   23:  
   24:  /* Local Macros & Defines ---------------------------------------------------*/
   25:  /* 本地宏定义 ---------------------------------------------------------------*/
   26:  
   27:  #define   SC_MAGIC_CODE         0x5500
   28:  #define   SC_ADDRESS_IN_EEPROM  0x0100
   29:  #define   SC_UPDATE_COUNT_MAX   50000
   30:  
   31:  /* Local typedefs -----------------------------------------------------------*/
   32:  /* 本地类型定义 -------------------------------------------------------------*/
   33:  
   34:  /* 基本类型，用于操作控制 */
   35:  typedef struct
   36:  {
   37:    union {
   38:      unsigned char bAll;
   39:      struct{
   40:        unsigned  Loaded:1;
   41:        unsigned  Checked:1;
   42:      }sFlag;
   43:    }uFlag;
   44:  }
   45:  lt_sSC;
   46:  
   47:  /* Local consts -------------------------------------------------------------*/
   48:  /* 本地常量定义 -------------------------------------------------------------*/
   49:  
   50:  /* 产品信息的默认初值 */
   51:  const gt_sSC  lc_sSCDefault = {
   52:    //  head
   53:    {
   54:      sizeof(gt_sSC),
   55:      SC_MAGIC_CODE,
   56:      0,
   57:      0,
   58:      0,
   59:      0,
   60:      0,
   61:    },
   62:    //  基本配置
   63:    {
   64:      MSCAN_BRP_250K,   //  can baudrate
   65:      BMU_MODE_NORMAL,  //  default mode
   66:    },
   67:    //  电压采集
   68:    {
   69:      3,  //  ltc6802 count, if count is 3, it is SY project 
   70:      {
   71:        { 0x01, PN_VS_ENA_A, PN_VS_NCS_A },
   72:        { 0x0C, PN_VS_ENA_B, PN_VS_NCS_B },
   73:      },
   74:    },
   75:    //  温度采集
   76:    {
   77:      5,  //  adc wait msecs
   78:      512,  //  adc repeat count
   79:      {     //  sensor type
   80:        NTC_TYPE_MURATA, NTC_TYPE_MURATA, NTC_TYPE_MURATA,
   81:        NTC_TYPE_MURATA, NTC_TYPE_MURATA, NTC_TYPE_MURATA,
   82:        NTC_TYPE_MURATA, NTC_TYPE_MURATA, NTC_TYPE_MURATA,
   83:        NTC_TYPE_MURATA, NTC_TYPE_MURATA, NTC_TYPE_MURATA,
   84:        NTC_TYPE_MURATA, NTC_TYPE_MURATA, NTC_TYPE_MURATA,
   85:        NTC_TYPE_MURATA, NTC_TYPE_MURATA, NTC_TYPE_MURATA,
   86:        NTC_TYPE_MURATA, NTC_TYPE_MURATA, NTC_TYPE_MURATA,
   87:        NTC_TYPE_MURATA, NTC_TYPE_MURATA, NTC_TYPE_MURATA,
   88:      },
   89:      6, //  count1
   90:      {   //  list 1
   91:        14, 21, 7, 22, 15, 23,
   92:        1, 10, 2, 5, 7, 11,
   93:        12, 13, 14, 15, 3, 6,
   94:        4, 19, 20, 21, 22, 23,
   95:      },
   96:      24,  // count 2
   97:      {   // list 2
   98:        14, 21, 7, 22, 15, 23,
   99:        1, 10, 2, 5, 7, 11,
  100:        12, 13, 14, 15, 3, 6,
  101:        4, 19, 20, 21, 22, 23,
  102:      },
  103:      1396, //  VTemp25
  104:      3638, //  m hot
  105:      3266, //  m cold
  106:    },
  107:    //  统计计算
  108:    {
  109:      //  参考电压
  110:      {
  111:        3330, 3331, 3332, 3333,
  112:        3334, 3335, 3336, 3337,
  113:        3338, 3339, 3340, 3341,
  114:      },
  115:      //24,  //  电压个数
  116:      24,  //  电压个数
  117:      12,   //The cell's number of single Ltc6802 
  118:      //  电压列表
  119:      /*{
  120:        0x00, 0x01, 0x02, 0x03,
  121:        0x04, 0x05, 0x06, 0x07,
  122:        0x08, 0x09, 0x0a, 0x0b,
  123:        0x10, 0x11, 0x12, 0x13,
  124:        0x14, 0x15, 0x16, 0x17,
  125:        0x18, 0x19, 0x1a, 0x1b,
  126:      },*/
  127:      {
  128:        0x00, 0x01, 0x02, 0x03,
  129:        0x04, 0x05, 0x06, 0x07,
  130:        0x08, 0x09, 0x0a, 0x0b,
  131:        0x10, 0x11, 0x12, 0x13,
  132:        0x14, 0x15, 0x16, 0x17,
  133:        0x18, 0x19, 0x1a, 0x1b, 
  134:      },
  135:      //  电压校正表
  136:      {
  137:        0,0,0,0,0,0,
  138:        0,0,0,0,0,0,
  139:      },
  140:      //  参考温度
  141:      {
  142:        850, 851, 852, 853, 854, 855,
  143:        860, 861, 862, 863, 864, 865,
  144:        870, 871, 872, 873, 874, 875,
  145:        880, 881, 882, 883, 884, 885,
  146:      },
  147:      24,  //  温度个数
  148:      12,    //The temp resistor number of single Ltc6802
  149:      //  温度列表
  150:      {
  151:        14, 21, 7, 22, 15, 23,
  152:        1, 10, 2, 5, 7, 11,
  153:        12, 13, 14, 15, 3, 6,
  154:        4, 19, 20, 21, 22, 23,
  155:      },
  156:    },
  157:    //  均衡控制
  158:    {
  159:      1,  //  底层允许
  160:      20, //  底层周期时间
  161:      5,  //  底层开启时间
  162:      500+400,  //  凉判断温度
  163:      600+400,  //  热判断温度
  164:      0,  //  外部允许
  165:      1,  //  内部允许
  166:      30*5, //  内部周期时间
  167:      20*5, //  内部开启时间
  168:      50,   //  内部均衡开启门限电压
  169:    },
  170:    //  万象协议控制
  171:    {
  172:      1,  //  组号
  173:      1, //  模块号  bModNum
  174:      20, //  同步周期 200ms
  175:      10, //  同步超时因数
  176:      24,  //  电压个数
  177:      12,   //The cell's number of single Ltc6802
  178:      24,  //  温度个数
  179:      12,   //The temp resistor number of single Ltc6802
  180:      0,    //fan Status of cell 1 to 12. Start = 1; Stop = 0.
  181:      0,    //fan Status of cell 12 to 24. Start = 1; Stop = 0.
  182:      //  温度列表
  183:      {
  184:        16, 8, 17, 0, 18, 9, 0xff, 0xff,
  185:      },    
  186:    },
  187:  };
  188:  
  189:  /* Local variables ----------------------------------------------------------*/
  190:  /* 本地变量定义 -------------------------------------------------------------*/
  191:  
  192:  /* 用于操作控制 */
  193:  lt_sSC  lv_sSC;
  194:  
  195:  /* Global consts ------------------------------------------------------------*/
  196:  /* 全局常量定义 -------------------------------------------------------------*/
  197:  
  198:  /* Global variables ---------------------------------------------------------*/
  199:  /* 全局变量定义 -------------------------------------------------------------*/
  200:  
  201:  gt_sSC  gv_sSC;
  202:  
  203:  /* Local functions ----------------------------------------------------------*/
  204:  /* 本地函数实现 -------------------------------------------------------------*/
  205:  
  206:  /**
  207:    * name    lf_nSCLoad
  208:    * bref    将产品信息从EEPROM中载入到RAM中
  209:    * param   none
  210:    * retval  none
  211:    */
  212:  int lf_nSCLoad(void)
  213:  {

Function: lf_nSCLoad
Source  : C:\Users\Administrator\Desktop\Fms\FMS\奥泰10V3T\07 Application\sc.c
Options : -AddIncl../preinc.h -Cs08 -D__NO_FLOAT__ -Env"GENPATH=C:\Users\Administrator\Desktop\Fms\FMS\奥泰10V3T\02 CodeWarrior;C:\Users\Administrator\Desktop\Fms\FMS\奥泰10V3T\02 CodeWarrior\bin;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\src;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\lib;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\src;C:\Users\Administrator\Desktop\Fms\FMS\奥泰10V3T\06 Platform;C:\Users\Administrator\Desktop\Fms\FMS\奥泰10V3T\04 Modules;C:\Users\Administrator\Desktop\Fms\FMS\奥泰10V3T\02 CodeWarrior\Sources;C:\Users\Administrator\Desktop\Fms\FMS\奥泰10V3T\07 Application;C:\Users\Administrator\Desktop\Fms\FMS\奥泰10V3T\05 Devices;C:\Users\Administrator\Desktop\Fms\FMS\奥泰10V3T;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"LIBPATH=D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"OBJPATH=C:\Users\Administrator\Desktop\Fms\FMS\奥泰10V3T\02 CodeWarrior\bin" -Env"TEXTPATH=C:\Users\Administrator\Desktop\Fms\FMS\奥泰10V3T\02 CodeWarrior\bin" -Lasm=%n.lst -Ms -ObjN="C:\Users\Administrator\Desktop\Fms\FMS\奥泰10V3T\02 CodeWarrior\mc9s08dz60_Data\Standard\ObjectCode\sc.c.o" -WmsgSd1106

  214:    int res;
  215:    
  216:    /* 打开EEPROM */
  217:    res = at24c_init();
  0000 cd0000   [6]             JSR   at24c_init
  218:    if( res!=OK ) return res;
  0003 650001   [3]             CPHX  #1
  0006 2629     [3]             BNE   L31 ;abs = 0031
  219:    
  220:    /* 读取EEPROM */
  221:    res = at24c_read(SC_ADDRESS_IN_EEPROM,(void*)&gv_sSC,sizeof(gv_sSC));
  0008 450100   [3]             LDHX  #256
  000b 89       [2]             PSHX  
  000c 8b       [2]             PSHH  
  000d 450000   [3]             LDHX  @gv_sSC
  0010 89       [2]             PSHX  
  0011 8b       [2]             PSHH  
  0012 450129   [3]             LDHX  #297
  0015 cd0000   [6]             JSR   at24c_read
  0018 a704     [2]             AIS   #4
  222:    if( res!=OK ) return res;
  001a 650001   [3]             CPHX  #1
  001d 2612     [3]             BNE   L31 ;abs = 0031
  223:    
  224:    /* 关闭EEPROM */
  225:    res = at24c_reset();
  001f cd0000   [6]             JSR   at24c_reset
  226:    if( res!=OK ) return res;
  0022 650001   [3]             CPHX  #1
  0025 260a     [3]             BNE   L31 ;abs = 0031
  227:    
  228:    /* 完成 */
  229:    lv_sSC.uFlag.sFlag.Loaded = 1;
  0027 450000   [3]             LDHX  @lv_sSC
  002a f6       [3]             LDA   ,X
  002b aa01     [2]             ORA   #1
  002d f7       [2]             STA   ,X
  230:    return  OK;
  002e ae01     [2]             LDX   #1
  0030 8c       [1]             CLRH  
  0031          L31:    
  231:  }
  0031 81       [6]             RTS   
  232:  
  233:  /**
  234:    * name    lf_nSCCheck
  235:    * bref    检查RAM中的产品信息是否有效
  236:    * param   none
  237:    * retval  none
  238:    */
  239:  int lf_nSCCheck(void)
  240:  {

Function: lf_nSCCheck
Source  : C:\Users\Administrator\Desktop\Fms\FMS\奥泰10V3T\07 Application\sc.c
Options : -AddIncl../preinc.h -Cs08 -D__NO_FLOAT__ -Env"GENPATH=C:\Users\Administrator\Desktop\Fms\FMS\奥泰10V3T\02 CodeWarrior;C:\Users\Administrator\Desktop\Fms\FMS\奥泰10V3T\02 CodeWarrior\bin;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\src;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\lib;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\src;C:\Users\Administrator\Desktop\Fms\FMS\奥泰10V3T\06 Platform;C:\Users\Administrator\Desktop\Fms\FMS\奥泰10V3T\04 Modules;C:\Users\Administrator\Desktop\Fms\FMS\奥泰10V3T\02 CodeWarrior\Sources;C:\Users\Administrator\Desktop\Fms\FMS\奥泰10V3T\07 Application;C:\Users\Administrator\Desktop\Fms\FMS\奥泰10V3T\05 Devices;C:\Users\Administrator\Desktop\Fms\FMS\奥泰10V3T;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"LIBPATH=D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"OBJPATH=C:\Users\Administrator\Desktop\Fms\FMS\奥泰10V3T\02 CodeWarrior\bin" -Env"TEXTPATH=C:\Users\Administrator\Desktop\Fms\FMS\奥泰10V3T\02 CodeWarrior\bin" -Lasm=%n.lst -Ms -ObjN="C:\Users\Administrator\Desktop\Fms\FMS\奥泰10V3T\02 CodeWarrior\mc9s08dz60_Data\Standard\ObjectCode\sc.c.o" -WmsgSd1106

  0000 a7fb     [2]             AIS   #-5
  241:  
  242:    /* Length */
  243:    if( gv_sSC.sHead.hLength==0 || gv_sSC.sHead.hLength==0xFFFF ){
  0002 320000   [5]             LDHX  gv_sSC
  0005 2708     [3]             BEQ   LF ;abs = 000f
  0007 320000   [5]             LDHX  gv_sSC
  000a 65ffff   [3]             CPHX  #-1
  000d 260a     [3]             BNE   L19 ;abs = 0019
  000f          LF:     
  244:      DBG_PRINTF(" ***NG*** Invalid sHead.hLength: %Xh\r\n", gv_sSC.sHead.hLength);
  000f 320000   [5]             LDHX  gv_sSC
  0012 89       [2]             PSHX  
  0013 8b       [2]             PSHH  
  0014 450000   [3]             LDHX  @" ***NG*** Invalid sHead.hLength: %Xh\015\012"
  245:      return  NG;
  0017 206f     [3]             BRA   L88 ;abs = 0088
  0019          L19:    
  246:    }
  247:  
  248:    /* MAGIC CODE */
  249:    if( gv_sSC.sHead.hMagicCode!=SC_MAGIC_CODE ){
  0019 320002   [5]             LDHX  gv_sSC:2
  001c 655500   [3]             CPHX  #21760
  001f 270a     [3]             BEQ   L2B ;abs = 002b
  250:      DBG_PRINTF(" ***NG*** Invalid Magic Code : %Xh\r\n", gv_sSC.sHead.hMagicCode);
  0021 320002   [5]             LDHX  gv_sSC:2
  0024 89       [2]             PSHX  
  0025 8b       [2]             PSHH  
  0026 450000   [3]             LDHX  @" ***NG*** Invalid Magic Code : %Xh\015\012"
  251:      return NG;
  0029 205d     [3]             BRA   L88 ;abs = 0088
  002b          L2B:    
  252:    }
  253:  
  254:    /* CSEven, CSOdd */
  255:    {
  256:      unsigned char cs;
  257:      unsigned short i;
  258:      unsigned char * p;
  259:      p = (unsigned char *)&gv_sSC;
  002b 450000   [3]             LDHX  @gv_sSC
  002e 9eff04   [5]             STHX  4,SP
  260:      /* CSEven */
  261:      for(cs=0,i=0;i<gv_sSC.sHead.hLength;i+=2){      
  0031 95       [2]             TSX   
  0032 6f02     [5]             CLR   2,X
  0034 6f01     [5]             CLR   1,X
  0036 7f       [4]             CLR   ,X
  0037 200e     [3]             BRA   L47 ;abs = 0047
  0039          L39:    
  0039 ad66     [5]             BSR   LA1 ;abs = 00a1
  262:        cs += p[i];
  003b fb       [3]             ADD   ,X
  003c 95       [2]             TSX   
  003d e702     [3]             STA   2,X
  003f 9efe01   [5]             LDHX  1,SP
  0042 af02     [2]             AIX   #2
  0044 9eff01   [5]             STHX  1,SP
  0047          L47:    
  0047 320000   [5]             LDHX  gv_sSC
  004a 9ef301   [6]             CPHX  1,SP
  004d 22ea     [3]             BHI   L39 ;abs = 0039
  263:  //      DBG_PRINTF("%02X,",p[i]);
  264:      }
  265:      if( cs!=0 ){
  004f 95       [2]             TSX   
  0050 6d02     [4]             TST   2,X
  0052 270a     [3]             BEQ   L5E ;abs = 005e
  266:        DBG_PRINTF(" ***NG*** CSEven failed: %Xh\r\n", cs);
  0054 e602     [3]             LDA   2,X
  0056 87       [2]             PSHA  
  0057 4f       [1]             CLRA  
  0058 87       [2]             PSHA  
  0059 450000   [3]             LDHX  @" ***NG*** CSEven failed: %Xh\015\012"
  267:        return  NG;
  005c 202a     [3]             BRA   L88 ;abs = 0088
  005e          L5E:    
  268:      }
  269:      /* CSOdd */
  270:      for(cs=0,i=1;i<gv_sSC.sHead.hLength;i+=2){
  005e 6f02     [5]             CLR   2,X
  0060 ae01     [2]             LDX   #1
  0062 8c       [1]             CLRH  
  0063 200b     [3]             BRA   L70 ;abs = 0070
  0065          L65:    
  0065 ad3a     [5]             BSR   LA1 ;abs = 00a1
  271:        cs += p[i];
  0067 fb       [3]             ADD   ,X
  0068 95       [2]             TSX   
  0069 e702     [3]             STA   2,X
  006b 9efe01   [5]             LDHX  1,SP
  006e af02     [2]             AIX   #2
  0070          L70:    
  0070 9eff01   [5]             STHX  1,SP
  0073 320000   [5]             LDHX  gv_sSC
  0076 9ef301   [6]             CPHX  1,SP
  0079 22ea     [3]             BHI   L65 ;abs = 0065
  272:  //      DBG_PRINTF("%02X,",p[i]);
  273:      }
  274:      if( cs!=0 ){
  007b 95       [2]             TSX   
  007c 6d02     [4]             TST   2,X
  007e 2714     [3]             BEQ   L94 ;abs = 0094
  275:        DBG_PRINTF(" ***NG*** CSOdd failed: %Xh\r\n", cs);
  0080 e602     [3]             LDA   2,X
  0082 87       [2]             PSHA  
  0083 4f       [1]             CLRA  
  0084 87       [2]             PSHA  
  0085 450000   [3]             LDHX  @" ***NG*** CSOdd failed: %Xh\015\012"
  0088          L88:    
  0088 89       [2]             PSHX  
  0089 8b       [2]             PSHH  
  008a cd0000   [6]             JSR   printf
  008d a704     [2]             AIS   #4
  276:        return  NG;
  008f 45fffe   [3]             LDHX  #-2
  0092 200a     [3]             BRA   L9E ;abs = 009e
  0094          L94:    
  277:      }
  278:    }
  279:  
  280:    /* 通过 */
  281:    lv_sSC.uFlag.sFlag.Checked = 1;
  0094 450000   [3]             LDHX  @lv_sSC
  0097 f6       [3]             LDA   ,X
  0098 aa02     [2]             ORA   #2
  009a f7       [2]             STA   ,X
  282:    return  OK;
  009b ae01     [2]             LDX   #1
  009d 8c       [1]             CLRH  
  009e          L9E:    
  283:  }
  009e a705     [2]             AIS   #5
  00a0 81       [6]             RTS   
  00a1          LA1:    
  00a1 95       [2]             TSX   
  00a2 e606     [3]             LDA   6,X
  00a4 eb03     [3]             ADD   3,X
  00a6 87       [2]             PSHA  
  00a7 e602     [3]             LDA   2,X
  00a9 e905     [3]             ADC   5,X
  00ab 87       [2]             PSHA  
  00ac e604     [3]             LDA   4,X
  00ae 8a       [3]             PULH  
  00af 88       [3]             PULX  
  00b0 81       [6]             RTS   
  284:  
  285:  /**
  286:    * name    lf_nSCUpdate
  287:    * bref    更新产品信息的时间和次数
  288:    * param   none
  289:    * retval  none
  290:    */
  291:  static int lf_nSCUpdate(void)
  292:  {

Function: lf_nSCUpdate
Source  : C:\Users\Administrator\Desktop\Fms\FMS\奥泰10V3T\07 Application\sc.c
Options : -AddIncl../preinc.h -Cs08 -D__NO_FLOAT__ -Env"GENPATH=C:\Users\Administrator\Desktop\Fms\FMS\奥泰10V3T\02 CodeWarrior;C:\Users\Administrator\Desktop\Fms\FMS\奥泰10V3T\02 CodeWarrior\bin;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\src;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\lib;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\src;C:\Users\Administrator\Desktop\Fms\FMS\奥泰10V3T\06 Platform;C:\Users\Administrator\Desktop\Fms\FMS\奥泰10V3T\04 Modules;C:\Users\Administrator\Desktop\Fms\FMS\奥泰10V3T\02 CodeWarrior\Sources;C:\Users\Administrator\Desktop\Fms\FMS\奥泰10V3T\07 Application;C:\Users\Administrator\Desktop\Fms\FMS\奥泰10V3T\05 Devices;C:\Users\Administrator\Desktop\Fms\FMS\奥泰10V3T;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"LIBPATH=D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"OBJPATH=C:\Users\Administrator\Desktop\Fms\FMS\奥泰10V3T\02 CodeWarrior\bin" -Env"TEXTPATH=C:\Users\Administrator\Desktop\Fms\FMS\奥泰10V3T\02 CodeWarrior\bin" -Lasm=%n.lst -Ms -ObjN="C:\Users\Administrator\Desktop\Fms\FMS\奥泰10V3T\02 CodeWarrior\mc9s08dz60_Data\Standard\ObjectCode\sc.c.o" -WmsgSd1106

  0000 a7fb     [2]             AIS   #-5
  293:    /* 更新时间 */
  294:    DisableInterrupts;
  0002 9b       [1]             SEI   
  295:    gv_sSC.sHead.wUpdateTime = rtc_sec;
  0003 320002   [5]             LDHX  rtc_sec:2
  0006 96000c   [5]             STHX  gv_sSC:12
  0009 320000   [5]             LDHX  rtc_sec
  000c 96000a   [5]             STHX  gv_sSC:10
  296:    EnableInterrupts;
  000f 9a       [1]             CLI   
  297:    
  298:    /* 更新次数 */
  299:    if( gv_sSC.sHead.hUpdateCount>=SC_UPDATE_COUNT_MAX ){
  0010 32000e   [5]             LDHX  gv_sSC:14
  0013 65c350   [3]             CPHX  #-15536
  0016 2510     [3]             BCS   L28 ;abs = 0028
  300:      DBG_PRINTF(" ***NG*** Update Count Outbreak Limit\r\n");
  0018 450000   [3]             LDHX  @" ***NG*** Update Count Outbreak Limit\015\012"
  001b 89       [2]             PSHX  
  001c 8b       [2]             PSHH  
  001d cd0000   [6]             JSR   printf
  0020 a702     [2]             AIS   #2
  301:      return  NG;
  0022 45fffe   [3]             LDHX  #-2
  0025 cc00d2   [4]             JMP   LD2 ;abs = 00d2
  0028          L28:    
  302:    }
  303:    gv_sSC.sHead.hUpdateCount ++;
  0028 45000e   [3]             LDHX  @gv_sSC:14
  002b 6c01     [5]             INC   1,X
  002d 2601     [3]             BNE   L30 ;abs = 0030
  002f 7c       [4]             INC   ,X
  0030          L30:    
  304:    
  305:    /* 创建时间 */
  306:    if( gv_sSC.sHead.hUpdateCount==1 ){
  0030 32000e   [5]             LDHX  gv_sSC:14
  0033 650001   [3]             CPHX  #1
  0036 260c     [3]             BNE   L44 ;abs = 0044
  307:      gv_sSC.sHead.wCreateTime = gv_sSC.sHead.wUpdateTime;
  0038 32000c   [5]             LDHX  gv_sSC:12
  003b 960008   [5]             STHX  gv_sSC:8
  003e 32000a   [5]             LDHX  gv_sSC:10
  0041 960006   [5]             STHX  gv_sSC:6
  0044          L44:    
  308:    }
  309:  
  310:    /* CS */
  311:    {
  312:      unsigned char cs;
  313:      unsigned short i;
  314:      unsigned char * p;
  315:      p = (unsigned char *)&gv_sSC;
  0044 450000   [3]             LDHX  @gv_sSC
  0047 9eff04   [5]             STHX  4,SP
  316:      gv_sSC.sHead.bCSEven = 0;
  004a 4f       [1]             CLRA  
  004b c70004   [4]             STA   gv_sSC:4
  317:      gv_sSC.sHead.bCSOdd = 0;
  004e c70005   [4]             STA   gv_sSC:5
  318:      /* CSEven */
  319:      for(cs=0,i=0;i<gv_sSC.sHead.hLength;i+=2){
  0051 95       [2]             TSX   
  0052 6f02     [5]             CLR   2,X
  0054 6f01     [5]             CLR   1,X
  0056 7f       [4]             CLR   ,X
  0057 201c     [3]             BRA   L75 ;abs = 0075
  0059          L59:    
  0059 ad7a     [5]             BSR   LD5 ;abs = 00d5
  320:        cs -= p[i];
  005b f0       [3]             SUB   ,X
  005c 9ee703   [4]             STA   3,SP
  321:        DBG_PRINTF("%02X,",p[i]);
  005f f6       [3]             LDA   ,X
  0060 87       [2]             PSHA  
  0061 4f       [1]             CLRA  
  0062 87       [2]             PSHA  
  0063 450000   [3]             LDHX  @"%02X,"
  0066 89       [2]             PSHX  
  0067 8b       [2]             PSHH  
  0068 cd0000   [6]             JSR   printf
  006b a704     [2]             AIS   #4
  006d 9efe01   [5]             LDHX  1,SP
  0070 af02     [2]             AIX   #2
  0072 9eff01   [5]             STHX  1,SP
  0075          L75:    
  0075 320000   [5]             LDHX  gv_sSC
  0078 9ef301   [6]             CPHX  1,SP
  007b 22dc     [3]             BHI   L59 ;abs = 0059
  322:      }
  323:      gv_sSC.sHead.bCSEven = cs;
  007d 95       [2]             TSX   
  007e e602     [3]             LDA   2,X
  0080 c70004   [4]             STA   gv_sSC:4
  324:      DBG_PRINTF(" - CSEven: %Xh\r\n", cs);
  0083 87       [2]             PSHA  
  0084 4f       [1]             CLRA  
  0085 87       [2]             PSHA  
  0086 450000   [3]             LDHX  @" - CSEven: %Xh\015\012"
  0089 89       [2]             PSHX  
  008a 8b       [2]             PSHH  
  008b cd0000   [6]             JSR   printf
  008e a704     [2]             AIS   #4
  325:      /* CSOdd */
  326:      for(cs=0,i=1;i<gv_sSC.sHead.hLength;i+=2){
  0090 95       [2]             TSX   
  0091 6f02     [5]             CLR   2,X
  0093 ae01     [2]             LDX   #1
  0095 8c       [1]             CLRH  
  0096 2019     [3]             BRA   LB1 ;abs = 00b1
  0098          L98:    
  0098 ad3b     [5]             BSR   LD5 ;abs = 00d5
  327:        cs -= p[i];
  009a f0       [3]             SUB   ,X
  009b 9ee703   [4]             STA   3,SP
  328:        DBG_PRINTF("%02X,",p[i]);
  009e f6       [3]             LDA   ,X
  009f 87       [2]             PSHA  
  00a0 4f       [1]             CLRA  
  00a1 87       [2]             PSHA  
  00a2 450000   [3]             LDHX  @"%02X,"
  00a5 89       [2]             PSHX  
  00a6 8b       [2]             PSHH  
  00a7 cd0000   [6]             JSR   printf
  00aa a704     [2]             AIS   #4
  00ac 9efe01   [5]             LDHX  1,SP
  00af af02     [2]             AIX   #2
  00b1          LB1:    
  00b1 9eff01   [5]             STHX  1,SP
  00b4 320000   [5]             LDHX  gv_sSC
  00b7 9ef301   [6]             CPHX  1,SP
  00ba 22dc     [3]             BHI   L98 ;abs = 0098
  329:      }
  330:      gv_sSC.sHead.bCSOdd = cs;
  00bc 95       [2]             TSX   
  00bd e602     [3]             LDA   2,X
  00bf c70005   [4]             STA   gv_sSC:5
  331:      DBG_PRINTF(" - CSOdd: %Xh\r\n", cs);
  00c2 87       [2]             PSHA  
  00c3 4f       [1]             CLRA  
  00c4 87       [2]             PSHA  
  00c5 450000   [3]             LDHX  @" - CSOdd: %Xh\015\012"
  00c8 89       [2]             PSHX  
  00c9 8b       [2]             PSHH  
  00ca cd0000   [6]             JSR   printf
  00cd a704     [2]             AIS   #4
  332:    }
  333:  
  334:    /* 完成 */
  335:    return  OK;
  00cf ae01     [2]             LDX   #1
  00d1 8c       [1]             CLRH  
  00d2          LD2:    
  336:  }
  00d2 a705     [2]             AIS   #5
  00d4 81       [6]             RTS   
  00d5          LD5:    
  00d5 95       [2]             TSX   
  00d6 e606     [3]             LDA   6,X
  00d8 eb03     [3]             ADD   3,X
  00da 87       [2]             PSHA  
  00db e602     [3]             LDA   2,X
  00dd e905     [3]             ADC   5,X
  00df 87       [2]             PSHA  
  00e0 e604     [3]             LDA   4,X
  00e2 8a       [3]             PULH  
  00e3 88       [3]             PULX  
  00e4 81       [6]             RTS   
  337:  
  338:  /**
  339:    * name    lf_nSCSave
  340:    * bref    将RAM中的产品信息保存到EEPROM中
  341:    * param   none
  342:    * retval  none
  343:    */
  344:  static int lf_nSCSave(void)
  345:  {

Function: lf_nSCSave
Source  : C:\Users\Administrator\Desktop\Fms\FMS\奥泰10V3T\07 Application\sc.c
Options : -AddIncl../preinc.h -Cs08 -D__NO_FLOAT__ -Env"GENPATH=C:\Users\Administrator\Desktop\Fms\FMS\奥泰10V3T\02 CodeWarrior;C:\Users\Administrator\Desktop\Fms\FMS\奥泰10V3T\02 CodeWarrior\bin;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\src;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\lib;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\src;C:\Users\Administrator\Desktop\Fms\FMS\奥泰10V3T\06 Platform;C:\Users\Administrator\Desktop\Fms\FMS\奥泰10V3T\04 Modules;C:\Users\Administrator\Desktop\Fms\FMS\奥泰10V3T\02 CodeWarrior\Sources;C:\Users\Administrator\Desktop\Fms\FMS\奥泰10V3T\07 Application;C:\Users\Administrator\Desktop\Fms\FMS\奥泰10V3T\05 Devices;C:\Users\Administrator\Desktop\Fms\FMS\奥泰10V3T;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"LIBPATH=D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"OBJPATH=C:\Users\Administrator\Desktop\Fms\FMS\奥泰10V3T\02 CodeWarrior\bin" -Env"TEXTPATH=C:\Users\Administrator\Desktop\Fms\FMS\奥泰10V3T\02 CodeWarrior\bin" -Lasm=%n.lst -Ms -ObjN="C:\Users\Administrator\Desktop\Fms\FMS\奥泰10V3T\02 CodeWarrior\mc9s08dz60_Data\Standard\ObjectCode\sc.c.o" -WmsgSd1106

  346:    int res;
  347:    
  348:    /* 打开EEPROM */
  349:    res = at24c_init();
  0000 cd0000   [6]             JSR   at24c_init
  350:    if( res!=OK ) return res;
  0003 650001   [3]             CPHX  #1
  0006 261a     [3]             BNE   L22 ;abs = 0022
  351:    
  352:    /* 写入EEPROM */
  353:    res = at24c_write(SC_ADDRESS_IN_EEPROM,(void*)&gv_sSC,sizeof(gv_sSC));
  0008 450100   [3]             LDHX  #256
  000b 89       [2]             PSHX  
  000c 8b       [2]             PSHH  
  000d 450000   [3]             LDHX  @gv_sSC
  0010 89       [2]             PSHX  
  0011 8b       [2]             PSHH  
  0012 450129   [3]             LDHX  #297
  0015 cd0000   [6]             JSR   at24c_write
  0018 a704     [2]             AIS   #4
  354:    if( res!=OK ) return res;
  001a 650001   [3]             CPHX  #1
  001d 2603     [3]             BNE   L22 ;abs = 0022
  355:    
  356:    /* 关闭EEPROM */
  357:    res = at24c_reset();
  001f cc0000   [4]             JMP   at24c_reset
  0022          L22:    
  358:    if( res!=OK ) return res;
  359:    
  360:    /* 完成 */
  361:    return  OK;
  362:  }
  0022 81       [6]             RTS   
  363:  
  364:  /* Global functions ---------------------------------------------------------*/
  365:  /* 全局函数实现 -------------------------------------------------------------*/
  366:  
  367:  /**
  368:    * name    gf_nSCInit
  369:    * bref    初始化
  370:    * param   none
  371:    * retval  none
  372:    */
  373:  int gf_nSCInit(void)
  374:  {

Function: gf_nSCInit
Source  : C:\Users\Administrator\Desktop\Fms\FMS\奥泰10V3T\07 Application\sc.c
Options : -AddIncl../preinc.h -Cs08 -D__NO_FLOAT__ -Env"GENPATH=C:\Users\Administrator\Desktop\Fms\FMS\奥泰10V3T\02 CodeWarrior;C:\Users\Administrator\Desktop\Fms\FMS\奥泰10V3T\02 CodeWarrior\bin;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\src;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\lib;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\src;C:\Users\Administrator\Desktop\Fms\FMS\奥泰10V3T\06 Platform;C:\Users\Administrator\Desktop\Fms\FMS\奥泰10V3T\04 Modules;C:\Users\Administrator\Desktop\Fms\FMS\奥泰10V3T\02 CodeWarrior\Sources;C:\Users\Administrator\Desktop\Fms\FMS\奥泰10V3T\07 Application;C:\Users\Administrator\Desktop\Fms\FMS\奥泰10V3T\05 Devices;C:\Users\Administrator\Desktop\Fms\FMS\奥泰10V3T;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"LIBPATH=D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"OBJPATH=C:\Users\Administrator\Desktop\Fms\FMS\奥泰10V3T\02 CodeWarrior\bin" -Env"TEXTPATH=C:\Users\Administrator\Desktop\Fms\FMS\奥泰10V3T\02 CodeWarrior\bin" -Lasm=%n.lst -Ms -ObjN="C:\Users\Administrator\Desktop\Fms\FMS\奥泰10V3T\02 CodeWarrior\mc9s08dz60_Data\Standard\ObjectCode\sc.c.o" -WmsgSd1106

  375:    DBG_PRINTF("gf_nSCInit()\r\n");
  0000 450000   [3]             LDHX  @"gf_nSCInit()\015\012"
  0003 89       [2]             PSHX  
  0004 8b       [2]             PSHH  
  0005 cd0000   [6]             JSR   printf
  0008 a702     [2]             AIS   #2
  376:  
  377:    /* 初始化 */
  378:    lv_sSC.uFlag.bAll = 0;
  000a 4f       [1]             CLRA  
  000b c70000   [4]             STA   lv_sSC
  379:    /* 完成 */
  380:    return  OK;
  000e ae01     [2]             LDX   #1
  0010 8c       [1]             CLRH  
  381:  }
  0011 81       [6]             RTS   
  382:  
  383:  /**
  384:    * name    gf_nSCLoad
  385:    * bref    将产品信息从EEPROM中载入到RAM中
  386:    * param   none
  387:    * retval  none
  388:    */
  389:  int gf_nSCLoad(void)
  390:  {

Function: gf_nSCLoad
Source  : C:\Users\Administrator\Desktop\Fms\FMS\奥泰10V3T\07 Application\sc.c
Options : -AddIncl../preinc.h -Cs08 -D__NO_FLOAT__ -Env"GENPATH=C:\Users\Administrator\Desktop\Fms\FMS\奥泰10V3T\02 CodeWarrior;C:\Users\Administrator\Desktop\Fms\FMS\奥泰10V3T\02 CodeWarrior\bin;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\src;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\lib;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\src;C:\Users\Administrator\Desktop\Fms\FMS\奥泰10V3T\06 Platform;C:\Users\Administrator\Desktop\Fms\FMS\奥泰10V3T\04 Modules;C:\Users\Administrator\Desktop\Fms\FMS\奥泰10V3T\02 CodeWarrior\Sources;C:\Users\Administrator\Desktop\Fms\FMS\奥泰10V3T\07 Application;C:\Users\Administrator\Desktop\Fms\FMS\奥泰10V3T\05 Devices;C:\Users\Administrator\Desktop\Fms\FMS\奥泰10V3T;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"LIBPATH=D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"OBJPATH=C:\Users\Administrator\Desktop\Fms\FMS\奥泰10V3T\02 CodeWarrior\bin" -Env"TEXTPATH=C:\Users\Administrator\Desktop\Fms\FMS\奥泰10V3T\02 CodeWarrior\bin" -Lasm=%n.lst -Ms -ObjN="C:\Users\Administrator\Desktop\Fms\FMS\奥泰10V3T\02 CodeWarrior\mc9s08dz60_Data\Standard\ObjectCode\sc.c.o" -WmsgSd1106

  391:  #if 0
  392:    int res;
  393:    DBG_PRINTF("gf_nSCLoad()\r\n");
  394:    
  395:    /* 从EEPROM中载入产品信息 */
  396:    res = lf_nSCLoad(); if( res!=OK ) return res;
  397:  
  398:    /* 如果EEPROM中没有产品信息，则需要初始化 */
  399:    if( lf_nSCCheck()==NG ){  
  400:      /* 设置初始值 */
  401:      gv_sSC = lc_sSCDefault;
  402:      /* 更新 */
  403:      res = lf_nSCUpdate(); if( res!=OK ) return res;
  404:      /* 保存到EEPROM */
  405:      res = lf_nSCSave(); if( res!=OK ) return res;
  406:      /* 完成 */
  407:      DBG_PRINTF(" - OK: SC Set Default\r\n");
  408:      /* 利用看门狗重启 */    
  409:      for(;;);
  410:    }
  411:  #else
  412:    gv_sSC = lc_sSCDefault;
  0000 450000   [3]             LDHX  @gv_sSC
  0003 89       [2]             PSHX  
  0004 8b       [2]             PSHH  
  0005 450000   [3]             LDHX  @lc_sSCDefault
  0008 a629     [2]             LDA   #41
  000a 87       [2]             PSHA  
  000b a601     [2]             LDA   #1
  000d 87       [2]             PSHA  
  000e cd0000   [6]             JSR   _COPY_L
  413:  #endif
  414:  
  415:    /* 完成 */
  416:    DBG_PRINTF(" - OK: SC Loaded: %d\r\n", gv_sSC.sHead.hUpdateCount);
  0011 32000e   [5]             LDHX  gv_sSC:14
  0014 89       [2]             PSHX  
  0015 8b       [2]             PSHH  
  0016 450000   [3]             LDHX  @" - OK: SC Loaded: %d\015\012"
  0019 89       [2]             PSHX  
  001a 8b       [2]             PSHH  
  001b cd0000   [6]             JSR   printf
  001e a704     [2]             AIS   #4
  417:    return  OK;
  0020 ae01     [2]             LDX   #1
  0022 8c       [1]             CLRH  
  418:  }
  0023 81       [6]             RTS   
  419:  
  420:  /**
  421:    * name    gf_nSCSave
  422:    * bref    将产品信息保存到EEPROM中
  423:    * param   none
  424:    * retval  none
  425:    */
  426:  int gf_nSCSave(void) {

Function: gf_nSCSave
Source  : C:\Users\Administrator\Desktop\Fms\FMS\奥泰10V3T\07 Application\sc.c
Options : -AddIncl../preinc.h -Cs08 -D__NO_FLOAT__ -Env"GENPATH=C:\Users\Administrator\Desktop\Fms\FMS\奥泰10V3T\02 CodeWarrior;C:\Users\Administrator\Desktop\Fms\FMS\奥泰10V3T\02 CodeWarrior\bin;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\src;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\lib;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\src;C:\Users\Administrator\Desktop\Fms\FMS\奥泰10V3T\06 Platform;C:\Users\Administrator\Desktop\Fms\FMS\奥泰10V3T\04 Modules;C:\Users\Administrator\Desktop\Fms\FMS\奥泰10V3T\02 CodeWarrior\Sources;C:\Users\Administrator\Desktop\Fms\FMS\奥泰10V3T\07 Application;C:\Users\Administrator\Desktop\Fms\FMS\奥泰10V3T\05 Devices;C:\Users\Administrator\Desktop\Fms\FMS\奥泰10V3T;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"LIBPATH=D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"OBJPATH=C:\Users\Administrator\Desktop\Fms\FMS\奥泰10V3T\02 CodeWarrior\bin" -Env"TEXTPATH=C:\Users\Administrator\Desktop\Fms\FMS\奥泰10V3T\02 CodeWarrior\bin" -Lasm=%n.lst -Ms -ObjN="C:\Users\Administrator\Desktop\Fms\FMS\奥泰10V3T\02 CodeWarrior\mc9s08dz60_Data\Standard\ObjectCode\sc.c.o" -WmsgSd1106

  427:  
  428:    int res;
  429:    DBG_PRINTF("gf_nSCSave()\r\n");
  0000 450000   [3]             LDHX  @"gf_nSCSave()\015\012"
  0003 89       [2]             PSHX  
  0004 8b       [2]             PSHH  
  0005 cd0000   [6]             JSR   printf
  0008 a702     [2]             AIS   #2
  430:  
  431:    /* 未载入时不能操作 */
  432:    if( lv_sSC.uFlag.sFlag.Loaded==0 ){
  000a c60000   [4]             LDA   lv_sSC
  000d a501     [2]             BIT   #1
  000f 2605     [3]             BNE   L16 ;abs = 0016
  433:      DBG_PRINTF(" ***NG*** SC Not Loaded\r\n");
  0011 450000   [3]             LDHX  @" ***NG*** SC Not Loaded\015\012"
  434:      return NG;
  0014 2007     [3]             BRA   L1D ;abs = 001d
  0016          L16:    
  435:    }
  436:    
  437:    /* 检验未通过不能操作 */
  438:    if( lv_sSC.uFlag.sFlag.Checked==0 ){
  0016 a502     [2]             BIT   #2
  0018 260e     [3]             BNE   L28 ;abs = 0028
  439:      DBG_PRINTF(" ***NG*** SC Not Checked\r\n");
  001a 450000   [3]             LDHX  @" ***NG*** SC Not Checked\015\012"
  001d          L1D:    
  001d 89       [2]             PSHX  
  001e 8b       [2]             PSHH  
  001f cd0000   [6]             JSR   printf
  0022 a702     [2]             AIS   #2
  440:      return  NG;
  0024 45fffe   [3]             LDHX  #-2
  0027 81       [6]             RTS   
  0028          L28:    
  441:    }
  442:    
  443:    /* 更新产品信息 */
  444:    res = lf_nSCUpdate();
  0028 cd0000   [6]             JSR   lf_nSCUpdate
  445:    if( res!=OK ) return res;
  002b 650001   [3]             CPHX  #1
  002e 2615     [3]             BNE   L45 ;abs = 0045
  446:    
  447:    /* 保存到EEPROM */
  448:    res = lf_nSCSave();
  0030 cd0000   [6]             JSR   lf_nSCSave
  449:    if( res!=OK ) return res;
  0033 650001   [3]             CPHX  #1
  0036 260d     [3]             BNE   L45 ;abs = 0045
  450:    
  451:    /* 完成 */
  452:    DBG_PRINTF(" - OK: SC Save\r\n");
  0038 450000   [3]             LDHX  @" - OK: SC Save\015\012"
  003b 89       [2]             PSHX  
  003c 8b       [2]             PSHH  
  003d cd0000   [6]             JSR   printf
  0040 a702     [2]             AIS   #2
  453:    return  OK;
  0042 ae01     [2]             LDX   #1
  0044 8c       [1]             CLRH  
  0045          L45:    
  454:  }
  0045 81       [6]             RTS   
  455:  
  456:  
