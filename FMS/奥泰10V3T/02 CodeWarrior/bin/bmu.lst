ANSI-C/cC++ Compiler for HC08 V-5.0.32 Build 9279, Oct  7 2009

    1:  /**
    2:    ******************************************************************************
    3:    * proj    firmware startup project
    4:    * file    BMU.c
    5:    * ver     1.0
    6:    * brief   This is a BMU file for all C files.
    7:    ------------------------------------------------------------------------------
    8:    * 2012.02 created by taoyu@bakai.com
    9:    */ 
   10:  
   11:  /* File Id -------------------------------------------------------------------*/
   12:  #define _BMU_C_ 0x71
   13:  #define FILE_No _BMU_C_
   14:  
   15:  /* Includes ------------------------------------------------------------------*/
   16:  #include  "bmu.h"  /* mandotary */
   17:  #include  "can.h"
   18:  #include  "wx.h"
   19:  #include  "mcu.h"
   20:  #include  "vs.h"
   21:  #include  "ltc6802.h"
   22:  #include  "ts.h"
   23:  #include  "bal.h"
   24:  #include  "cal.h"
   25:  #include  "pi.h"
   26:  #include  "sc.h"
   27:  #include  "mng.h"
   28:  
   29:  /* Private Macros & Defines --------------------------------------------------*/
   30:  
   31:  /* Private typedefs ----------------------------------------------------------*/
   32:  
   33:  typedef struct
   34:  {
   35:    gt_eBmuMode eMode;
   36:  }
   37:  lt_sBmu;
   38:  
   39:  /* Private consts ------------------------------------------------------------*/
   40:  
   41:  /* Private variables ---------------------------------------------------------*/
   42:  
   43:  lt_sBmu lv_sBmu;
   44:  //unsigned char fanStatus;
   45:  
   46:  /* Private function prototypes -----------------------------------------------*/
   47:  unsigned char lf_fanStatusLow(void);
   48:  unsigned char lf_fanStatusHigh(void);
   49:  
   50:  /* Global consts -------------------------------------------------------------*/
   51:  
   52:  /* Global variables ----------------------------------------------------------*/
   53:  
   54:  /* Functions -----------------------------------------------------------------*/
   55:  
   56:  static int lf_nBmuLoad(void)
   57:  {

Function: lf_nBmuLoad
Source  : C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\07 Application\bmu.c
Options : -AddIncl../preinc.h -Cs08 -D__NO_FLOAT__ -Env"GENPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\src;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\lib;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\src;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\06 Platform;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\04 Modules;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\Sources;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\07 Application;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\05 Devices;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"LIBPATH=D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"OBJPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin" -Env"TEXTPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin" -Lasm=%n.lst -Ms -ObjN="C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\mc9s08dz60_Data\Standard\ObjectCode\bmu.c.o" -WmsgSd1106

   58:    int res;
   59:    DBG_PRINTF("lf_nBmuLoad()\r\n");
  0000 450000   [3]             LDHX  @"lf_nBmuLoad()\015\012"
  0003 89       [2]             PSHX  
  0004 8b       [2]             PSHH  
  0005 cd0000   [6]             JSR   printf
  0008 a702     [2]             AIS   #2
   60:    
   61:    /* ¼ÓÔØ²úÆ·ÐÅÏ¢ */
   62:    res = gf_nPIInit(); if( res!=OK ) return res;  
  000a cd0000   [6]             JSR   gf_nPIInit
  000d 650001   [3]             CPHX  #1
  0010 2625     [3]             BNE   L37 ;abs = 0037
   63:    res = gf_nPILoad(); if( res!=OK ) return res;
  0012 cd0000   [6]             JSR   gf_nPILoad
  0015 650001   [3]             CPHX  #1
  0018 261d     [3]             BNE   L37 ;abs = 0037
   64:    
   65:    /* ¼ÓÔØÏµÍ³ÅäÖÃ */
   66:    res = gf_nSCInit(); if( res!=OK ) return res;  
  001a cd0000   [6]             JSR   gf_nSCInit
  001d 650001   [3]             CPHX  #1
  0020 2615     [3]             BNE   L37 ;abs = 0037
   67:    res = gf_nSCLoad(); if( res!=OK ) return res;
  0022 cd0000   [6]             JSR   gf_nSCLoad
  0025 650001   [3]             CPHX  #1
  0028 260d     [3]             BNE   L37 ;abs = 0037
   68:    
   69:    /* Íê³É */
   70:    DBG_PRINTF(" - OK: lf_nBmuLoad\r\n");
  002a 450000   [3]             LDHX  @" - OK: lf_nBmuLoad\015\012"
  002d 89       [2]             PSHX  
  002e 8b       [2]             PSHH  
  002f cd0000   [6]             JSR   printf
  0032 a702     [2]             AIS   #2
   71:    return  OK;  
  0034 ae01     [2]             LDX   #1
  0036 8c       [1]             CLRH  
  0037          L37:    
   72:  }
  0037 81       [6]             RTS   
   73:  
   74:  static gt_eBmuMode lf_eBmuRunConfig(void)
   75:  {

Function: lf_eBmuRunConfig
Source  : C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\07 Application\bmu.c
Options : -AddIncl../preinc.h -Cs08 -D__NO_FLOAT__ -Env"GENPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\src;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\lib;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\src;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\06 Platform;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\04 Modules;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\Sources;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\07 Application;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\05 Devices;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"LIBPATH=D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"OBJPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin" -Env"TEXTPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin" -Lasm=%n.lst -Ms -ObjN="C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\mc9s08dz60_Data\Standard\ObjectCode\bmu.c.o" -WmsgSd1106

  0000 8b       [2]             PSHH  
   76:    unsigned char exit = 0;
   77:    DBG_PRINTF("lf_eBmuRunConfig()\r\n");
  0001 450000   [3]             LDHX  @"lf_eBmuRunConfig()\015\012"
  0004 89       [2]             PSHX  
  0005 8b       [2]             PSHH  
  0006 cd0000   [6]             JSR   printf
  0009 a702     [2]             AIS   #2
   78:    
   79:    /* ¿ªÆô¸÷¸öÄ£¿é */
   80:    mng_init();
  000b cd0000   [6]             JSR   mng_init
  000e          LE:     
   81:    
   82:    /* ¿ªÊ¼ÔËÐÐ */
   83:    while(exit==0){
   84:  
   85:      /* Î¹¹· */
   86:      feed_watch_dog();
  000e cd0000   [6]             JSR   feed_watch_dog
   87:    
   88:      /* ´¦ÀíCAN½ÓÊÕ */
   89:      exit = mng_crx_proc();
  0011 cd0000   [6]             JSR   mng_crx_proc
  0014 95       [2]             TSX   
  0015 f7       [2]             STA   ,X
  0016 27f6     [3]             BEQ   LE ;abs = 000e
   90:  
   91:    }
   92:  
   93:    /* ¹Ø±Õ¸÷¸öÄ£¿é */
   94:    mng_reset();
  0018 cd0000   [6]             JSR   mng_reset
   95:  
   96:    DBG_PRINTF(" - End: lf_eBmuRunConfig\r\n");
  001b 450000   [3]             LDHX  @" - End: lf_eBmuRunConfig\015\012"
  001e 89       [2]             PSHX  
  001f 8b       [2]             PSHH  
  0020 cd0000   [6]             JSR   printf
  0023 a702     [2]             AIS   #2
   97:    /* ÏÂÒ»¸öÄ£Ê½ */
   98:    return  BMU_MODE_NORMAL;
  0025 ae02     [2]             LDX   #2
  0027 8c       [1]             CLRH  
   99:  }
  0028 86       [3]             PULA  
  0029 81       [6]             RTS   
  100:  
  101:  static gt_eBmuMode lf_eBmuRunNormal(void)
  102:  {

Function: lf_eBmuRunNormal
Source  : C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\07 Application\bmu.c
Options : -AddIncl../preinc.h -Cs08 -D__NO_FLOAT__ -Env"GENPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\src;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\lib;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\src;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\06 Platform;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\04 Modules;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\Sources;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\07 Application;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\05 Devices;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"LIBPATH=D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"OBJPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin" -Env"TEXTPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin" -Lasm=%n.lst -Ms -ObjN="C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\mc9s08dz60_Data\Standard\ObjectCode\bmu.c.o" -WmsgSd1106

  0000 8b       [2]             PSHH  
  103:    unsigned char exit = 0;
  0001 95       [2]             TSX   
  0002 7f       [4]             CLR   ,X
  104:    DBG_PRINTF("lf_eBmuRunNormal()\r\n");
  0003 450000   [3]             LDHX  @"lf_eBmuRunNormal()\015\012"
  0006 89       [2]             PSHX  
  0007 8b       [2]             PSHH  
  0008 cd0000   [6]             JSR   printf
  000b a702     [2]             AIS   #2
  105:    
  106:    /* ¿ªÆô¸÷¹¦ÄÜÄ£¿é */
  107:    wx_init();
  000d cd0000   [6]             JSR   wx_init
  0010          L10:    
  108:    //vs_init();
  109:   // ts_init();
  110:    //cal_init();
  111:    //bal_init();
  112:  
  113:    /* ÔËÐÐ¸÷¹¦ÄÜÄ£¿é */
  114:    while(exit==0){
  115:  
  116:      /* Î¹¹· */  
  117:      feed_watch_dog();
  0010 cd0000   [6]             JSR   feed_watch_dog
  118:  
  119:      /* Í¬²½ */
  120:  //    DBG_PRINTF("sync\n");
  121:     wx_sync();
  0013 cd0000   [6]             JSR   wx_sync
  122:   (void)mscan_rxcb(&mscan_rxframe);
  0016 450000   [3]             LDHX  @mscan_rxframe
  0019 cd0000   [6]             JSR   mscan_rxcb
  123:      /* CAN½ÓÊÕ */
  124:  //    DBG_PRINTF("crx\n");
  125:     // exit = wx_crx_proc();
  126:      
  127:      /* µçÑ¹²É¼¯ */
  128:  //    DBG_PRINTF("vs\n");
  129:     // vs_proc();
  130:  
  131:      /* ÎÂ¶È²É¼¯ */
  132:  //    DBG_PRINTF("ts\n");
  133:    //  ts_proc();
  134:      
  135:      /* ¼ÆËãÍ³¼Æ */
  136:  //    DBG_PRINTF("cal\n");
  137:    //  cal_proc();
  138:  
  139:      /* ¾ùºâ¿ØÖÆ */
  140:  //    DBG_PRINTF("bal\n");
  141:   //   bal_proc();
  142:      
  143:      //fan status
  144:      if(gv_sSC.sVS.bLtc6802Count == 2)
  001c c60014   [4]             LDA   gv_sSC:20
  001f a102     [2]             CMP   #2
  0021          L21:    
  145:      {
  146:        gv_sSC.sWX.bFanStatusLow = lf_fanStatusLow();
  147:       // gv_sSC.sWX.bFanStatusLow = 0;
  148:        gv_sSC.sWX.bFanStatusHigh = lf_fanStatusHigh();
  149:      } 
  150:      else
  151:      {
  152:        gv_sSC.sWX.bFanStatusLow = lf_fanStatusLow();
  0021 cd0000   [6]             JSR   lf_fanStatusLow
  0024 c7011f   [4]             STA   gv_sSC:287
  153:        gv_sSC.sWX.bFanStatusHigh = lf_fanStatusHigh();
  0027 cd0000   [6]             JSR   lf_fanStatusHigh
  002a c70120   [4]             STA   gv_sSC:288
  154:      } 
  155:      
  156:      /* ÈÈ¿ØÖÆ */
  157:          
  158:      /* CAN·¢ËÍ */
  159:  //    DBG_PRINTF("ctx\n\r");
  160:      wx_ctx();
  002d cd0000   [6]             JSR   wx_ctx
  161:      Fir_pro();
  0030 cd0000   [6]             JSR   Fir_pro
  0033 95       [2]             TSX   
  0034 7d       [3]             TST   ,X
  0035 27d9     [3]             BEQ   L10 ;abs = 0010
  162:    }
  163:    
  164:    /* ¹Ø±Õ¸÷¸ö¹¦ÄÜÄ£¿é */
  165:    bal_reset();
  0037 cd0000   [6]             JSR   bal_reset
  166:    cal_reset();
  003a cd0000   [6]             JSR   cal_reset
  167:    ts_reset();
  003d cd0000   [6]             JSR   ts_reset
  168:    vs_reset();
  0040 cd0000   [6]             JSR   vs_reset
  169:    wx_reset();
  0043 cd0000   [6]             JSR   wx_reset
  170:  
  171:    DBG_PRINTF(" - End: lf_eBmuRunNormal\r\n");
  0046 450000   [3]             LDHX  @" - End: lf_eBmuRunNormal\015\012"
  0049 89       [2]             PSHX  
  004a 8b       [2]             PSHH  
  004b cd0000   [6]             JSR   printf
  004e a702     [2]             AIS   #2
  172:    /* ÏÂÒ»¸ö¹¤×÷Ä£Ê½ */  
  173:    return  BMU_MODE_CONFIG;
  0050 ae01     [2]             LDX   #1
  0052 8c       [1]             CLRH  
  174:  }
  0053 86       [3]             PULA  
  0054 81       [6]             RTS   
  175:  
  176:  // ¼ì²â¸ß¶Ë6802ÊÇ·ñ´æÔÚ
  177:  static void lf_vBmuTestB(void)
  178:  {

Function: lf_vBmuTestB
Source  : C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\07 Application\bmu.c
Options : -AddIncl../preinc.h -Cs08 -D__NO_FLOAT__ -Env"GENPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\src;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\lib;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\src;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\06 Platform;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\04 Modules;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\Sources;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\07 Application;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\05 Devices;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"LIBPATH=D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"OBJPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin" -Env"TEXTPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin" -Lasm=%n.lst -Ms -ObjN="C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\mc9s08dz60_Data\Standard\ObjectCode\bmu.c.o" -WmsgSd1106

  179:    gt_ePinNumber en = gv_sSC.sVS.saLtc6802[1].eLtc6802EnaN;
  0000 32001b   [5]             LDHX  gv_sSC:27
  180:    gt_ePinNumber cs = gv_sSC.sVS.saLtc6802[1].eLtc6802SpiCsN;
  0003 89       [2]             PSHX  
  0004 8b       [2]             PSHH  
  0005 32001d   [5]             LDHX  gv_sSC:29
  181:    unsigned char da = gv_sSC.sVS.saLtc6802[1].bDeviceAddress;
  0008 c6001a   [4]             LDA   gv_sSC:26
  182:    int res;
  183:    static ltc6802_cfgreg_t cfg;
  184:  
  185:    (void)ltc6802_init();
  000b 87       [2]             PSHA  
  000c 89       [2]             PSHX  
  000d 8b       [2]             PSHH  
  000e cd0000   [6]             JSR   ltc6802_init
  186:    (void)pin_high(en); // ¹âÅ¼´ò¿ª
  0011 9efe04   [5]             LDHX  4,SP
  0014 cd0000   [6]             JSR   pin_high
  187:    delay_ms(20);    /* delay 20ms */
  0017 ae14     [2]             LDX   #20
  0019 8c       [1]             CLRH  
  001a cd0000   [6]             JSR   delay_ms
  188:  
  189:    (void)pin_low(cs);  // csÑ¡ÖÐ
  001d 9efe01   [5]             LDHX  1,SP
  0020 cd0000   [6]             JSR   pin_low
  190:    res = ltc6802_rdcfg(da,&cfg); // ¶ÁÈ¡ÅäÖÃ¼Ä´æÆ÷
  0023 95       [2]             TSX   
  0024 e602     [3]             LDA   2,X
  0026 450000   [3]             LDHX  @cfg
  0029 cd0000   [6]             JSR   ltc6802_rdcfg
  191:    (void)pin_high(cs); // csÊÍ·Å  
  002c 8b       [2]             PSHH  
  002d 9eef04   [4]             STX   4,SP
  0030 95       [2]             TSX   
  0031 ee02     [3]             LDX   2,X
  0033 86       [3]             PULA  
  0034 9ee702   [4]             STA   2,SP
  0037 8a       [3]             PULH  
  0038 cd0000   [6]             JSR   pin_high
  192:  
  193:    (void)pin_low(en);  // ¹âÅ¼¹Ø±Õ
  003b 9efe03   [5]             LDHX  3,SP
  003e cd0000   [6]             JSR   pin_low
  194:    delay_ms(20);    /* delay 20ms */
  0041 ae14     [2]             LDX   #20
  0043 8c       [1]             CLRH  
  0044 cd0000   [6]             JSR   delay_ms
  195:    (void)ltc6802_reset();  
  0047 cd0000   [6]             JSR   ltc6802_reset
  196:    
  197:    if( res==OK ) return; // ´æÔÚ
  004a 8a       [3]             PULH  
  004b 88       [3]             PULX  
  004c 650001   [3]             CPHX  #1
  004f a702     [2]             AIS   #2
  0051 271c     [3]             BEQ   L6F ;abs = 006f
  198:    
  199:    // ¸ü¸ÄÅäÖÃÎª12´®
  200:    gv_sSC.sVS.bLtc6802Count = 1; // ²âÁ¿Ê±Ö»¼ì²âÒ»¸ö6802
  0053 a601     [2]             LDA   #1
  0055 c70014   [4]             STA   gv_sSC:20
  201:   // gv_sSC.sCal.bVoltCount = 8; // Í³¼ÆÊ±Ö»¼ÆËãµÍ¶Ë10¸öµçÑ¹
  202:    gv_sSC.sCal.bVoltCount = 10; // Í³¼ÆÊ±Ö»¼ÆËãµÍ¶Ë10¸öµçÑ¹
  0058 a60a     [2]             LDA   #10
  005a c7008b   [4]             STA   gv_sSC:139
  203:    gv_sSC.sCal.bTempCount = 3;     //the cell number is 3
  005d ae03     [2]             LDX   #3
  005f cf00ed   [4]             STX   gv_sSC:237
  204:   // gv_sSC.sWX.bVoltCount = 8;   // Êä³öÊ±Ö»Êä³ö10¸öµçÑ¹
  205:    gv_sSC.sWX.bVoltCount = 10;   // Êä³öÊ±Ö»Êä³ö10¸öµçÑ¹
  0062 c7011b   [4]             STA   gv_sSC:283
  206:    gv_sSC.sWX.bTempCount = 3;      //the temp number is 3 
  0065 cf011d   [4]             STX   gv_sSC:285
  207:    gv_sSC.sTS.bCount2 = 0;         //single sample disable
  0068 4f       [1]             CLRA  
  0069 c70054   [4]             STA   gv_sSC:84
  208:    gv_sSC.sTS.bCount2 = 3;         //mutile sample number is 3 
  006c cf0054   [4]             STX   gv_sSC:84
  006f          L6F:    
  209:  
  210:  }
  006f 81       [6]             RTS   
  211:  
  212:  //SY project cell number initial setup
  213:  static void lf_SYCellNumInit(void) 
  214:  {

Function: lf_SYCellNumInit
Source  : C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\07 Application\bmu.c
Options : -AddIncl../preinc.h -Cs08 -D__NO_FLOAT__ -Env"GENPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\src;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\lib;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\src;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\06 Platform;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\04 Modules;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\Sources;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\07 Application;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\05 Devices;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"LIBPATH=D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"OBJPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin" -Env"TEXTPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin" -Lasm=%n.lst -Ms -ObjN="C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\mc9s08dz60_Data\Standard\ObjectCode\bmu.c.o" -WmsgSd1106

  215:    if(gv_sSC.sVS.bLtc6802Count == 3) 
  0000 c60014   [4]             LDA   gv_sSC:20
  0003 a103     [2]             CMP   #3
  0005 262c     [3]             BNE   L33 ;abs = 0033
  216:    {
  217:      gv_sSC.sVS.bLtc6802Count = 2;   //the default LTC6802 number is 2
  0007 a602     [2]             LDA   #2
  0009 c70014   [4]             STA   gv_sSC:20
  218:      gv_sSC.sCal.bVoltCount = 20;    //the default cell number is 20
  000c a614     [2]             LDA   #20
  000e c7008b   [4]             STA   gv_sSC:139
  219:      gv_sSC.sCal.bTempCount = 3;     //the default cell number is 6
  0011 ae03     [2]             LDX   #3
  0013 cf00ed   [4]             STX   gv_sSC:237
  220:      gv_sSC.sWX.bVoltCount = 20;     //the default cell number is 20
  0016 c7011b   [4]             STA   gv_sSC:283
  221:      gv_sSC.sWX.bTempCount = 3;      //the default temp number is 6
  0019 cf011d   [4]             STX   gv_sSC:285
  222:    //  gv_sSC.sCal.bCellCount = 8;    //the default cell number of single Ltc6802
  223:      gv_sSC.sCal.bCellCount = 10;    //the default cell number of single Ltc6802
  001c 44       [1]             LSRA  
  001d c7008c   [4]             STA   gv_sSC:140
  224:      gv_sSC.sCal.bResistorCount = 3; //the default temp number of single Ltc6802
  0020 cf00ee   [4]             STX   gv_sSC:238
  225:    //  gv_sSC.sWX.bCellCount = 8;     //the default cell number of single Ltc6802
  226:      gv_sSC.sWX.bCellCount = 10;     //the default cell number of single Ltc6802
  0023 c7011c   [4]             STA   gv_sSC:284
  227:      gv_sSC.sWX.bResistorCount = 3;  //the default temp number of single Ltc6802
  0026 cf011e   [4]             STX   gv_sSC:286
  228:      gv_sSC.sTS.bCount2 = 0;         //single sample disable
  0029 4f       [1]             CLRA  
  002a c70054   [4]             STA   gv_sSC:84
  229:      gv_sSC.sTS.bCount2 = 3;         //mutile sample number is 6
  002d cf0054   [4]             STX   gv_sSC:84
  230:      
  231:      lf_vBmuTestB();
  0030 cc0000   [4]             JMP   lf_vBmuTestB
  0033          L33:    
  232:    }
  233:    
  234:  }
  0033 81       [6]             RTS   
  235:  
  236:  /**
  237:    * bref    BMU function
  238:    * param   none
  239:    * retval  none
  240:    */
  241:  
  242:  void gf_vBmuMain(void)
  243:  {

Function: gf_vBmuMain
Source  : C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\07 Application\bmu.c
Options : -AddIncl../preinc.h -Cs08 -D__NO_FLOAT__ -Env"GENPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\src;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\lib;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\src;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\06 Platform;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\04 Modules;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\Sources;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\07 Application;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\05 Devices;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"LIBPATH=D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"OBJPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin" -Env"TEXTPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin" -Lasm=%n.lst -Ms -ObjN="C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\mc9s08dz60_Data\Standard\ObjectCode\bmu.c.o" -WmsgSd1106

  244:    int res;
  245:    unsigned int delayBMU = 0;
  246:    DBG_PRINTF("bmu_main()\r\n");
  0000 450000   [3]             LDHX  @"bmu_main()\015\012"
  0003 89       [2]             PSHX  
  0004 8b       [2]             PSHH  
  0005 cd0000   [6]             JSR   printf
  0008 a702     [2]             AIS   #2
  247:    
  248:    /* ¼ÓÔØÅäÖÃ */
  249:    res = lf_nBmuLoad();
  000a cd0000   [6]             JSR   lf_nBmuLoad
  250:    //SY project configure initialization
  251:   // lf_SYCellNumInit();
  252:    
  253:    /* ³õÊ¼Ä£Ê½ */   
  254:    lv_sBmu.eMode = BMU_MODE_NONE;
  000d 89       [2]             PSHX  
  000e 8b       [2]             PSHH  
  000f 5f       [1]             CLRX  
  0010 8c       [1]             CLRH  
  0011 960000   [5]             STHX  lv_sBmu
  255:    if( res==OK ) lv_sBmu.eMode = gv_sSC.sBMU.eDefaultMode;
  0014 8a       [3]             PULH  
  0015 88       [3]             PULX  
  0016 650001   [3]             CPHX  #1
  0019 2606     [3]             BNE   L21 ;abs = 0021
  001b 320012   [5]             LDHX  gv_sSC:18
  001e 960000   [5]             STHX  lv_sBmu
  0021          L21:    
  256:    if( lv_sBmu.eMode==BMU_MODE_NONE ) lv_sBmu.eMode = BMU_MODE_CONFIG;
  0021 320000   [5]             LDHX  lv_sBmu
  0024 2606     [3]             BNE   L2C ;abs = 002c
  0026 ae01     [2]             LDX   #1
  0028 8c       [1]             CLRH  
  0029 960000   [5]             STHX  lv_sBmu
  002c          L2C:    
  257:    DBG_PRINTF(" - Start Mode: %d\r\n", lv_sBmu.eMode);
  002c 320000   [5]             LDHX  lv_sBmu
  002f 89       [2]             PSHX  
  0030 8b       [2]             PSHH  
  0031 450000   [3]             LDHX  @" - Start Mode: %d\015\012"
  0034 89       [2]             PSHX  
  0035 8b       [2]             PSHH  
  0036 cd0000   [6]             JSR   printf
  0039 a704     [2]             AIS   #4
  258:    
  259:    delayBMU = (unsigned int)(gv_sSC.sWX.bModNum % 30) * 6; 
  003b c60118   [4]             LDA   gv_sSC:280
  003e ae1e     [2]             LDX   #30
  0040 8c       [1]             CLRH  
  0041 52       [6]             DIV   
  0042 a606     [2]             LDA   #6
  0044 8b       [2]             PSHH  
  0045 88       [3]             PULX  
  0046 42       [5]             MUL   
  260:    delay_ms(delayBMU);
  0047 89       [2]             PSHX  
  0048 97       [1]             TAX   
  0049 8a       [3]             PULH  
  004a cd0000   [6]             JSR   delay_ms
  004d          L4D:    
  261:    
  262:    /* °´Ä£Ê½¿ªÊ¼ÔËÐÐ */
  263:    for(;;){
  264:      switch( lv_sBmu.eMode ){
  004d 320000   [5]             LDHX  lv_sBmu
  0050 650002   [3]             CPHX  #2
  0053 2605     [3]             BNE   L5A ;abs = 005a
  265:        case  BMU_MODE_NORMAL:
  266:          lv_sBmu.eMode = lf_eBmuRunNormal();
  0055 cd0000   [6]             JSR   lf_eBmuRunNormal
  267:          break;
  0058 2003     [3]             BRA   L5D ;abs = 005d
  005a          L5A:    
  268:        default:
  269:          lv_sBmu.eMode = lf_eBmuRunConfig();
  005a cd0000   [6]             JSR   lf_eBmuRunConfig
  005d          L5D:    
  005d 960000   [5]             STHX  lv_sBmu
  270:          break;
  0060 20eb     [3]             BRA   L4D ;abs = 004d
  271:      }
  272:    }
  273:  
  274:  }
  275:  
  276:  void gf_vCanRxcb(can_frame_t * f)
  277:  {

Function: gf_vCanRxcb
Source  : C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\07 Application\bmu.c
Options : -AddIncl../preinc.h -Cs08 -D__NO_FLOAT__ -Env"GENPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\src;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\lib;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\src;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\06 Platform;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\04 Modules;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\Sources;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\07 Application;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\05 Devices;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"LIBPATH=D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"OBJPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin" -Env"TEXTPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin" -Lasm=%n.lst -Ms -ObjN="C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\mc9s08dz60_Data\Standard\ObjectCode\bmu.c.o" -WmsgSd1106

  0000 89       [2]             PSHX  
  0001 8b       [2]             PSHH  
  278:    /* °´Ä£Ê½±£´æÏûÏ¢ */
  279:    switch( lv_sBmu.eMode ){
  0002 320000   [5]             LDHX  lv_sBmu
  0005 650002   [3]             CPHX  #2
  0008 2608     [3]             BNE   L12 ;abs = 0012
  280:      case  BMU_MODE_NORMAL:
  281:        wx_crx_save(f);
  000a 9efe01   [5]             LDHX  1,SP
  000d cd0000   [6]             JSR   wx_crx_save
  282:        break;
  0010 2006     [3]             BRA   L18 ;abs = 0018
  0012          L12:    
  283:      default:
  284:        mng_crx_save(f);
  0012 9efe01   [5]             LDHX  1,SP
  0015 cd0000   [6]             JSR   mng_crx_save
  0018          L18:    
  285:        break;
  286:    }
  287:  }
  0018 a702     [2]             AIS   #2
  001a 81       [6]             RTS   
  288:  
  289:  
  290:  unsigned char lf_fanStatusLow(void) 
  291:  {

Function: lf_fanStatusLow
Source  : C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\07 Application\bmu.c
Options : -AddIncl../preinc.h -Cs08 -D__NO_FLOAT__ -Env"GENPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\src;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\lib;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\src;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\06 Platform;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\04 Modules;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\Sources;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\07 Application;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\05 Devices;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"LIBPATH=D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"OBJPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin" -Env"TEXTPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin" -Lasm=%n.lst -Ms -ObjN="C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\mc9s08dz60_Data\Standard\ObjectCode\bmu.c.o" -WmsgSd1106

  0000 a7fd     [2]             AIS   #-3
  292:    unsigned char fanTempDiffLow;
  293:    fanTempDiffLow = (cal.tmax + 5) / 10 - (cal.tmin + 5) / 10;    //Temp threshold difference
  0002 320084   [5]             LDHX  cal:132
  0005 af05     [2]             AIX   #5
  0007 89       [2]             PSHX  
  0008 8b       [2]             PSHH  
  0009 ae0a     [2]             LDX   #10
  000b 8c       [1]             CLRH  
  000c cd0000   [6]             JSR   _IDIVU_STAR08
  000f a702     [2]             AIS   #2
  0011 9eff01   [5]             STHX  1,SP
  0014 32008a   [5]             LDHX  cal:138
  0017 af05     [2]             AIX   #5
  0019 9f       [1]             TXA   
  001a ae0a     [2]             LDX   #10
  001c cd0000   [6]             JSR   _IDIVU_8
  001f 87       [2]             PSHA  
  0020 95       [2]             TSX   
  0021 e602     [3]             LDA   2,X
  0023 f0       [3]             SUB   ,X
  0024 e703     [3]             STA   3,X
  294:    //fanTempDiffHigh = (cal.tMaxHigh + 5) / 10 - (cal.tMinHigh + 5) / 10;
  295:    
  296:    if((fanTempDiffLow >= FANSTARTTEMP) || (((cal.tmax + 5) / 10) >= FANMINSTARTTEMP)) 
  0026 a105     [2]             CMP   #5
  0028 8a       [3]             PULH  
  0029 2408     [3]             BCC   L33 ;abs = 0033
  002b 9efe01   [5]             LDHX  1,SP
  002e 65004e   [3]             CPHX  #78
  0031 251a     [3]             BCS   L4D ;abs = 004d
  0033          L33:    
  297:    {
  298:      //pin_low(PN_FAN_ENA);
  299:      if((pin_high(PN_FAN_ENA) == 1) && (pin_high(PN_HEAT_ENA) == 1)) return 1;
  0033 ae07     [2]             LDX   #7
  0035 8c       [1]             CLRH  
  0036 cd0000   [6]             JSR   pin_high
  0039 650001   [3]             CPHX  #1
  003c 262c     [3]             BNE   L6A ;abs = 006a
  003e ae08     [2]             LDX   #8
  0040 8c       [1]             CLRH  
  0041 cd0000   [6]             JSR   pin_high
  0044 650001   [3]             CPHX  #1
  0047 2621     [3]             BNE   L6A ;abs = 006a
  0049 a601     [2]             LDA   #1
  004b 201e     [3]             BRA   L6B ;abs = 006b
  004d          L4D:    
  300:      
  301:      else return 0;
  302:    }
  303:    else if((fanTempDiffLow <= FANSTOPTEMP) && (((cal.tmax + 5) / 10) <= FANMAXSTOPTEMP))
  004d 9ee603   [4]             LDA   3,SP
  0050 a102     [2]             CMP   #2
  0052 2217     [3]             BHI   L6B ;abs = 006b
  0054 650044   [3]             CPHX  #68
  0057 2212     [3]             BHI   L6B ;abs = 006b
  304:    {
  305:      if((pin_low(PN_FAN_ENA) == 1) && (pin_low(PN_HEAT_ENA) == 1)) return 0;
  0059 ae07     [2]             LDX   #7
  005b 8c       [1]             CLRH  
  005c cd0000   [6]             JSR   pin_low
  005f 650001   [3]             CPHX  #1
  0062 2606     [3]             BNE   L6A ;abs = 006a
  0064 ae08     [2]             LDX   #8
  0066 8c       [1]             CLRH  
  0067 cd0000   [6]             JSR   pin_low
  006a          L6A:    
  306:      else return 0;
  006a 4f       [1]             CLRA  
  006b          L6B:    
  307:    }
  308:  }
  006b a703     [2]             AIS   #3
  006d 81       [6]             RTS   
  309:  
  310:  unsigned char lf_fanStatusHigh(void) 
  311:  {

Function: lf_fanStatusHigh
Source  : C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\07 Application\bmu.c
Options : -AddIncl../preinc.h -Cs08 -D__NO_FLOAT__ -Env"GENPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\src;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\lib;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\src;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\06 Platform;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\04 Modules;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\Sources;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\07 Application;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\05 Devices;C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"LIBPATH=D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\hc08c\device\asm_include;D:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3\lib\HC08c\include" -Env"OBJPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin" -Env"TEXTPATH=C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\bin" -Lasm=%n.lst -Ms -ObjN="C:\Users\Administrator\Desktop\Fms\FMS\°ÂÌ©10V3T\02 CodeWarrior\mc9s08dz60_Data\Standard\ObjectCode\bmu.c.o" -WmsgSd1106

  0000 a7fd     [2]             AIS   #-3
  312:    unsigned char fanTempDiffHigh;
  313:    //fanTempDiffLow = (cal.tMaxLow + 5) / 10 - (cal.tMinLow + 5) / 10;    //Temp threshold difference
  314:    fanTempDiffHigh = (cal.tmax + 5) / 10 - (cal.tmin + 5) / 10;   //Temp threshold difference
  0002 320084   [5]             LDHX  cal:132
  0005 af05     [2]             AIX   #5
  0007 89       [2]             PSHX  
  0008 8b       [2]             PSHH  
  0009 ae0a     [2]             LDX   #10
  000b 8c       [1]             CLRH  
  000c cd0000   [6]             JSR   _IDIVU_STAR08
  000f a702     [2]             AIS   #2
  0011 9eff01   [5]             STHX  1,SP
  0014 32008a   [5]             LDHX  cal:138
  0017 af05     [2]             AIX   #5
  0019 9f       [1]             TXA   
  001a ae0a     [2]             LDX   #10
  001c cd0000   [6]             JSR   _IDIVU_8
  001f 87       [2]             PSHA  
  0020 95       [2]             TSX   
  0021 e602     [3]             LDA   2,X
  0023 f0       [3]             SUB   ,X
  0024 e703     [3]             STA   3,X
  315:    
  316:    if((fanTempDiffHigh >= FANSTARTTEMP) || (((cal.tmax + 5) / 10) >= FANMINSTARTTEMP)) 
  0026 a105     [2]             CMP   #5
  0028 8a       [3]             PULH  
  0029 2408     [3]             BCC   L33 ;abs = 0033
  002b 9efe01   [5]             LDHX  1,SP
  002e 65004e   [3]             CPHX  #78
  0031 251a     [3]             BCS   L4D ;abs = 004d
  0033          L33:    
  317:    {
  318:      //pin_low(PN_FAN_ENA);
  319:      if((pin_high(PN_FAN_ENA) == 1) && (pin_high(PN_HEAT_ENA) == 1)) return 1;
  0033 ae07     [2]             LDX   #7
  0035 8c       [1]             CLRH  
  0036 cd0000   [6]             JSR   pin_high
  0039 650001   [3]             CPHX  #1
  003c 262c     [3]             BNE   L6A ;abs = 006a
  003e ae08     [2]             LDX   #8
  0040 8c       [1]             CLRH  
  0041 cd0000   [6]             JSR   pin_high
  0044 650001   [3]             CPHX  #1
  0047 2621     [3]             BNE   L6A ;abs = 006a
  0049 a601     [2]             LDA   #1
  004b 201e     [3]             BRA   L6B ;abs = 006b
  004d          L4D:    
  320:      else return 0;
  321:    }
  322:    else if((fanTempDiffHigh <= FANSTOPTEMP) && (((cal.tmax + 5) / 10) <= FANMAXSTOPTEMP))
  004d 9ee603   [4]             LDA   3,SP
  0050 a102     [2]             CMP   #2
  0052 2217     [3]             BHI   L6B ;abs = 006b
  0054 650044   [3]             CPHX  #68
  0057 2212     [3]             BHI   L6B ;abs = 006b
  323:    {
  324:      if((pin_low(PN_FAN_ENA) == 1) && (pin_low(PN_HEAT_ENA) == 1)) return 0;
  0059 ae07     [2]             LDX   #7
  005b 8c       [1]             CLRH  
  005c cd0000   [6]             JSR   pin_low
  005f 650001   [3]             CPHX  #1
  0062 2606     [3]             BNE   L6A ;abs = 006a
  0064 ae08     [2]             LDX   #8
  0066 8c       [1]             CLRH  
  0067 cd0000   [6]             JSR   pin_low
  006a          L6A:    
  325:      else return 0;
  006a 4f       [1]             CLRA  
  006b          L6B:    
  326:    }
  327:  }
  006b a703     [2]             AIS   #3
  006d 81       [6]             RTS   
  328:  
  329:  
  330:  
